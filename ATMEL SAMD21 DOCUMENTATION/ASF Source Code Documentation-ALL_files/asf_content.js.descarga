/* This file is automatically generated and contains information from the
 * ASF.
 */
/* Current version of the ASF */
var asf_version = "3.18.0";
/* Application note descriptors */
var asf_application_notes = [
{'name': "Atmel AVR4960: USB Host Android Accessory", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc42003.pdf", 'id_regexpr': "(common.services.usb.*host.*android.*)"},
{'name': "Atmel AVR4950: ASF - USB Host Stack", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8486.pdf", 'id_regexpr': "(common.services.usb.*host.*)"},
{'name': "Atmel AVR4921: ASF - USB Device Stack Differences between ASF V1 and V2", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8411.pdf", 'id_regexpr': "(common.services.usb.*device.*|avr32.services.usb._asf_v1.*)"},
{'name': "Atmel AVR32760: AVR32 UC3 USB DFU Bootloader Protocol", 'link': "http://www.atmel.com/Images/doc32131.pdf", 'id_regexpr': "(common.services.usb.*device.*dfu_atmel.*)"},
{'name': "Atmel AVR1916: USB DFU Boot Loader for XMEGA", 'link': "http://www.atmel.com/Images/doc8429.pdf", 'id_regexpr': "(common.services.usb.*device.*dfu_atmel.*)"},
{'name': "Atmel AVR4023: FLIP USB DFU Protocol", 'link': "http://www.atmel.com/Images/doc8457.pdf", 'id_regexpr': "(common.services.usb.*device.*dfu_atmel.*)"},
{'name': "Atmel AVR4920: ASF - USB Device Stack - Compliance and Performance Figures", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8410.pdf", 'id_regexpr': "(common.services.usb.*device.*)"},
{'name': "Atmel AVR4907: ASF - USB Device CDC Application", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8447.pdf", 'id_regexpr': "(common.services.usb.*device.*cdc.*)"},
{'name': "Atmel AVR4905: ASF - USB Device HID Generic Application", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8499.pdf", 'id_regexpr': "(common.services.usb.*device.*hid_generic.*)"},
{'name': "Atmel AVR4904: ASF - USB Device HID Keyboard Application", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8446.pdf", 'id_regexpr': "(common.services.usb.*device.*hid_keyboard.*)"},
{'name': "Atmel AVR4903: ASF - USB Device HID Mouse Application", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8409.pdf", 'id_regexpr': "(common.services.usb.*device.*hid.*mouse.*)"},
{'name': "Atmel AVR4902: ASF - USB Composite Device", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8445.pdf", 'id_regexpr': "(common.services.usb.*device.*composite.*)"},
{'name': "Atmel AVR4901: ASF - USB Device Vendor Class Application", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8481.pdf", 'id_regexpr': "(common.services.usb.*device.*vendor.*)"},
{'name': "Atmel AVR4900: ASF - USB Device Stack", 'link': "http://www.atmel.com/dyn/resources/prod_documents/doc8360.pdf", 'id_regexpr': "(common.services.usb.*device.*)"}
];
/* Object representative of the MCUs architecture */
var asf_mcu_arch = {"avr": {"mega": {"atmega128": {}, "atmega128a": {}, "atmega16": {}, "atmega162": {}, "atmega165p": {}, "atmega16a": {}, "atmega32": {}, "atmega32a": {}, "atmega64": {}, "atmega64a": {}, "atmega8": {}, "atmega8515": {}, "atmega8535": {}, "atmega8a": {}, "mega-can": {"90canxxx": {"at90can128": {}, "at90can32": {}, "at90can64": {}}, "megaxxm1": {"atmega16m1": {}, "atmega32m1": {}, "atmega64m1": {}}}, "mega-lcd": {"atmega169p": {}, "megaxx9x": {"atmega329": {}, "atmega3290": {}, "atmega649": {}, "atmega6490": {}}, "megaxx9xa": {"atmega169a": {}, "atmega169pa": {}, "atmega3290a": {}, "atmega3290pa": {}, "atmega329a": {}, "atmega329pa": {}, "atmega6490a": {}, "atmega6490p": {}, "atmega649a": {}, "atmega649p": {}}, "megaxx9xp": {"atmega3290p": {}, "atmega329p": {}}}, "mega-pwm": {"90pwmx16": {"at90pwm216": {}, "at90pwm316": {}}, "90pwmxb": {"at90pwm2b": {}, "at90pwm3b": {}}, "at90pwm1": {}, "at90pwm81": {}}, "mega-usb": {"90usbxx2": {"at90usb162": {}, "at90usb82": {}}, "90usbxxx6_7": {"at90usb1286": {}, "at90usb1287": {}, "at90usb646": {}, "at90usb647": {}}, "megaxxu2": {"atmega16u2": {}, "atmega32u2": {}, "atmega8u2": {}}, "megaxxu4": {"atmega16u4": {}, "atmega32u4": {}}}, "megarf": {"atmega1284rfr2": {}, "atmega128rfa1": {}, "atmega128rfr2": {}, "atmega2564rfr2": {}, "atmega256rfa2": {}, "atmega256rfr2": {}, "atmega644rfr2": {}, "atmega64rfa2": {}, "atmega64rfr2": {}}, "megax8": {"atmega168": {}, "atmega48": {}, "atmega88": {}, "megax8a": {"atmega168a": {}, "atmega168pa": {}, "atmega328": {}, "atmega328p": {}, "atmega48a": {}, "atmega48pa": {}, "atmega88a": {}, "atmega88pa": {}}}, "megax8p": {"atmega168p": {}, "atmega48p": {}, "atmega88p": {}}, "megaxx0_1": {"atmega1280": {}, "atmega1281": {}, "atmega2560": {}, "atmega2561": {}, "atmega640": {}}, "megaxx4a": {"atmega1284": {}, "atmega1284p": {}, "atmega164a": {}, "atmega164pa": {}, "atmega324a": {}, "atmega324pa": {}, "atmega644": {}, "atmega644a": {}, "atmega644pa": {}}, "megaxx4p": {"atmega164p": {}, "atmega324p": {}, "atmega644p": {}}, "megaxx5x": {"atmega325": {}, "atmega3250": {}, "atmega645": {}, "atmega6450": {}}, "megaxx5xa": {"atmega165a": {}, "atmega165pa": {}, "atmega3250a": {}, "atmega3250pa": {}, "atmega325a": {}, "atmega325pa": {}, "atmega6450a": {}, "atmega6450p": {}, "atmega645a": {}, "atmega645p": {}}, "megaxx5xp": {"atmega3250p": {}, "atmega325p": {}}}, "tiny": {"attiny13": {}, "attiny13a": {}, "attiny1634": {}, "attiny20": {}, "attiny2313": {}, "attiny26": {}, "attiny40": {}, "attiny43u": {}, "attiny828": {}, "tinyx261": {"attiny261": {}, "attiny461": {}, "attiny861": {}}, "tinyx261a": {"attiny261a": {}, "attiny461a": {}, "attiny861a": {}}, "tinyx313a": {"attiny2313a": {}, "attiny4313": {}}, "tinyx4": {"attiny24": {}, "attiny44": {}, "attiny84": {}}, "tinyx4a": {"attiny24a": {}, "attiny44a": {}, "attiny84a": {}}, "tinyx5": {"attiny25": {}, "attiny45": {}, "attiny85": {}}, "tinyx8": {"attiny48": {}, "attiny88": {}}, "tinyx_10": {"attiny10": {}, "attiny4": {}, "attiny5": {}, "attiny9": {}}, "tinyxx7": {"attiny167": {}, "attiny87": {}}}, "uc3": {"ucr1": {"uc3b": {"uc3b0": {"at32uc3b0128": {}, "at32uc3b0256": {}, "at32uc3b064": {}}, "uc3b1": {"at32uc3b1128": {}, "at32uc3b1256": {}, "at32uc3b164": {}}}}, "ucr2": {"uc3a": {"uc3a0": {"at32uc3a0128": {}, "at32uc3a0256": {}, "at32uc3a0512": {}}, "uc3a1": {"at32uc3a1128": {}, "at32uc3a1256": {}, "at32uc3a1512": {}}}, "uc3a3_a4": {"uc3a3": {"at32uc3a3128": {}, "at32uc3a3256": {}, "at32uc3a364": {}}, "uc3a3s_a4s": {"uc3a3s": {"at32uc3a3128s": {}, "at32uc3a3256s": {}, "at32uc3a364s": {}}, "uc3a4s": {"at32uc3a4128s": {}, "at32uc3a4256s": {}, "at32uc3a464s": {}}}, "uc3a4": {"at32uc3a4128": {}, "at32uc3a4256": {}, "at32uc3a464": {}}}, "uc3b": {"uc3b0": {"at32uc3b0512": {}}, "uc3b1": {"at32uc3b1512": {}}}}, "ucr3": {"uc3d": {"uc3d3": {"atuc128d3": {}, "atuc64d3": {}}, "uc3d4": {"atuc128d4": {}, "atuc64d4": {}}}, "uc3l": {"uc3l0": {"at32uc3l016": {}, "at32uc3l032": {}, "at32uc3l064": {}}, "uc3l0pll": {"at32uc3l0128": {}, "at32uc3l0256": {}}, "uc3l3": {"atuc128l3u": {}, "atuc256l3u": {}, "atuc64l3u": {}}, "uc3l4": {"atuc128l4u": {}, "atuc256l4u": {}, "atuc64l4u": {}}}}, "ucr3fp": {"uc3c": {"uc3c0": {"at32uc3c0128c": {}, "at32uc3c0256c": {}, "at32uc3c0512c": {}, "at32uc3c064c": {}}, "uc3c1": {"at32uc3c1128c": {}, "at32uc3c1256c": {}, "at32uc3c1512c": {}, "at32uc3c164c": {}}, "uc3c2": {"at32uc3c2128c": {}, "at32uc3c2256c": {}, "at32uc3c2512c": {}, "at32uc3c264c": {}}}}}, "xmega": {"xmegaa": {"xmegaa1": {"atxmega128a1": {}, "atxmega192a1": {}, "atxmega256a1": {}, "atxmega384a1": {}, "atxmega64a1": {}}, "xmegaa3": {"atxmega128a3": {}, "atxmega192a3": {}, "atxmega256a3": {}, "atxmega64a3": {}}, "xmegaa3b": {"atxmega256a3b": {}}, "xmegaa4": {"atxmega128a4": {}, "atxmega16a4": {}, "atxmega32a4": {}, "atxmega64a4": {}}}, "xmegaau": {"xmegaa1u": {"atxmega128a1u": {}, "atxmega64a1u": {}}, "xmegaa3bu": {"atxmega256a3bu": {}}, "xmegaa3u": {"atxmega128a3u": {}, "atxmega192a3u": {}, "atxmega256a3u": {}, "atxmega64a3u": {}}, "xmegaa4u": {"atxmega128a4u": {}, "atxmega16a4u": {}, "atxmega32a4u": {}, "atxmega64a4u": {}}}, "xmegab": {"xmegab1": {"atxmega128b1": {}, "atxmega64b1": {}}, "xmegab3": {"atxmega128b3": {}, "atxmega64b3": {}}}, "xmegac": {"xmegac3": {"atxmega128c3": {}, "atxmega192c3": {}, "atxmega256c3": {}, "atxmega32c3": {}, "atxmega384c3": {}, "atxmega64c3": {}}, "xmegac4": {"atxmega16c4": {}, "atxmega32c4": {}}}, "xmegad": {"xmegad3": {"atxmega128d3": {}, "atxmega192d3": {}, "atxmega256d3": {}, "atxmega32d3": {}, "atxmega384d3": {}, "atxmega64d3": {}}, "xmegad4": {"atxmega128d4": {}, "atxmega16d4": {}, "atxmega32d4": {}, "atxmega64d4": {}}}, "xmegae": {"xmegae5": {"atxmega16e5": {}, "atxmega32e5": {}, "atxmega8e5": {}}}}}, "sam": {"cortex-m3": {"sam3": {"sam3a": {"sam3a4": {"atsam3a4c": {}}, "sam3a8": {"atsam3a8c": {}}}, "sam3n": {"sam3n0": {"atsam3n0a": {}, "atsam3n0b": {}, "atsam3n0c": {}}, "sam3n00": {"atsam3n00a": {}, "atsam3n00b": {}}, "sam3n1": {"atsam3n1a": {}, "atsam3n1b": {}, "atsam3n1c": {}}, "sam3n2": {"atsam3n2a": {}, "atsam3n2b": {}, "atsam3n2c": {}}, "sam3n4": {"atsam3n4a": {}, "atsam3n4b": {}, "atsam3n4c": {}}}, "sam3s": {"sam3s1": {"atsam3s1a": {}, "atsam3s1b": {}, "atsam3s1c": {}}, "sam3s2": {"atsam3s2a": {}, "atsam3s2b": {}, "atsam3s2c": {}}, "sam3s4": {"atsam3s4a": {}, "atsam3s4b": {}, "atsam3s4c": {}}}, "sam3sd": {"sam3s8": {"atsam3s8b": {}, "atsam3s8c": {}}, "sam3sd8": {"atsam3sd8b": {}, "atsam3sd8c": {}}}, "sam3u": {"sam3u1": {"atsam3u1c": {}, "atsam3u1e": {}}, "sam3u2": {"atsam3u2c": {}, "atsam3u2e": {}}, "sam3u4": {"atsam3u4c": {}, "atsam3u4e": {}}}, "sam3x": {"sam3x4": {"atsam3x4c": {}, "atsam3x4e": {}}, "sam3x8": {"atsam3x8c": {}, "atsam3x8e": {}, "atsam3x8h": {}}}}}, "cortex-m4": {"sam4": {"sam4c": {"sam4c16": {"atsam4c16c_0": {}, "atsam4c16c_1": {}}, "sam4c32c": {"atsam4c32c_0": {}, "atsam4c32c_1": {}}, "sam4c32e": {"atsam4c32e_0": {}, "atsam4c32e_1": {}}, "sam4c8": {"atsam4c8c_0": {}, "atsam4c8c_1": {}}}, "sam4cm": {"sam4cmp16": {"atsam4cmp16c_0": {}, "atsam4cmp16c_1": {}}, "sam4cmp32": {"atsam4cmp32c_0": {}, "atsam4cmp32c_1": {}}, "sam4cmp8": {"atsam4cmp8c_0": {}, "atsam4cmp8c_1": {}}, "sam4cms16": {"atsam4cms16c_0": {}, "atsam4cms16c_1": {}}, "sam4cms32": {"atsam4cms32c_0": {}, "atsam4cms32c_1": {}}, "sam4cms8": {"atsam4cms8c_0": {}, "atsam4cms8c_1": {}}}, "sam4cp": {"sam4cp16b": {"atsam4cp16b_0": {}, "atsam4cp16b_1": {}}}, "sam4e": {"sam4e16": {"atsam4e16c": {}, "atsam4e16e": {}}, "sam4e8": {"atsam4e8c": {}, "atsam4e8e": {}}}, "sam4l": {"sam4lc2": {"atsam4lc2a": {}, "atsam4lc2b": {}, "atsam4lc2c": {}}, "sam4lc4": {"atsam4lc4a": {}, "atsam4lc4b": {}, "atsam4lc4c": {}}, "sam4lc8": {"atsam4lc8a": {}, "atsam4lc8b": {}, "atsam4lc8c": {}}, "sam4ls2": {"atsam4ls2a": {}, "atsam4ls2b": {}, "atsam4ls2c": {}}, "sam4ls4": {"atsam4ls4a": {}, "atsam4ls4b": {}, "atsam4ls4c": {}}, "sam4ls8": {"atsam4ls8a": {}, "atsam4ls8b": {}, "atsam4ls8c": {}}}, "sam4n": {"sam4n16": {"atsam4n16b": {}, "atsam4n16c": {}}, "sam4n8": {"atsam4n8a": {}, "atsam4n8b": {}, "atsam4n8c": {}}}, "sam4s": {"sam4s16": {"atsam4s16b": {}, "atsam4s16c": {}}, "sam4s2": {"atsam4s2a": {}, "atsam4s2b": {}, "atsam4s2c": {}}, "sam4s4": {"atsam4s4a": {}, "atsam4s4b": {}, "atsam4s4c": {}}, "sam4s8": {"atsam4s8b": {}, "atsam4s8c": {}}, "sam4sa16": {"atsam4sa16b": {}, "atsam4sa16c": {}}, "sam4sd16": {"atsam4sd16b": {}, "atsam4sd16c": {}}, "sam4sd32": {"atsam4sd32b": {}, "atsam4sd32c": {}}}, "sam4sp": {"sam4sp32": {"atsam4sp32a": {}}}}, "samg": {"samg51": {"atsamg51g18": {}}, "samg53": {"atsamg53g19": {}, "atsamg53n19": {}}, "samg54": {"atsamg54g19": {}, "atsamg54j19": {}, "atsamg54n19": {}}}}}, "sam0": {"cortex-m0plus": {"samd": {"samd20": {"samd20e": {"atsamd20e14": {}, "atsamd20e15": {}, "atsamd20e16": {}, "atsamd20e17": {}, "atsamd20e18": {}, "atsamd20e1f": {}}, "samd20g": {"atsamd20g14": {}, "atsamd20g15": {}, "atsamd20g16": {}, "atsamd20g17": {}, "atsamd20g18": {}}, "samd20j": {"atsamd20j14": {}, "atsamd20j15": {}, "atsamd20j16": {}, "atsamd20j17": {}, "atsamd20j18": {}}}, "samd21": {"samd21e": {"atsamd21e15a": {}, "atsamd21e16a": {}, "atsamd21e17a": {}, "atsamd21e18a": {}}, "samd21g": {"atsamd21g15a": {}, "atsamd21g16a": {}, "atsamd21g17a": {}, "atsamd21g18a": {}}, "samd21j": {"atsamd21j15a": {}, "atsamd21j16a": {}, "atsamd21j17a": {}, "atsamd21j18a": {}}}}, "samr": {"samr21": {"samr21e": {"atsamr21e16a": {}, "atsamr21e17a": {}, "atsamr21e18a": {}}, "samr21g": {"atsamr21g16a": {}, "atsamr21g17a": {}, "atsamr21g18a": {}}}}}}};
/* Translation table from arch name to a nice displayable title */
var asf_arch_to_title = {"mega": "megaAVR", "sam3a": "SAM3A", "sam3n": "SAM3N", "sam3s": "SAM3S", "sam3sd": "SAM3SD", "sam3u": "SAM3U", "sam3x": "SAM3X", "sam4c": "SAM4C", "sam4cm": "SAM4CM", "sam4cp": "SAM4CP", "sam4e": "SAM4E", "sam4l": "SAM4L", "sam4n": "SAM4N", "sam4s": "SAM4S", "sam4sp": "SAM4SP", "samd20": "SAMD20", "samd21": "SAMD21", "samg": "SAMG", "samr21": "SAMR21", "tiny": "tinyAVR", "uc3a": "UC3 A0/A1", "uc3a3_a4": "UC3 A3/A3S/A4/A4S", "uc3b": "UC3 B0/B1", "uc3c": "UC3 C0/C1/C2", "uc3d": "UC3 D3/D4", "uc3l": "UC3 L0/L3U/L4U", "xmegaa": "XMEGA A", "xmegaau": "XMEGA AU", "xmegab": "XMEGA B", "xmegac": "XMEGA C", "xmegad": "XMEGA D", "xmegae": "XMEGA E"};
/* ASF content */
var asf_content = [{"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "The Analog to Digital Converter is able to capture analog signals and transform them into digital format with 10-bit or 12-bit resolution.", "id": "sam.drivers.adc#1", "mcus": ["sam3", "sam4s", "sam4c", "sam4cm", "sam4cp"], "name": "ADC - Analog-to-digital Converter", "quickstart": {"sam3a": ["sam3a/html/sam_adc_quickstart.html"], "sam3n": ["sam3n/html/sam_adc_quickstart.html"], "sam3s": ["sam3s/html/sam_adc_quickstart.html"], "sam3sd": ["sam3sd/html/sam_adc_quickstart.html"], "sam3u": ["sam3u/html/sam_adc_quickstart.html"], "sam3x": ["sam3x/html/sam_adc_quickstart.html"], "sam4c": ["sam4c/html/sam_adc_quickstart.html"], "sam4cm": ["sam4cm/html/sam_adc_quickstart.html"], "sam4cp": ["sam4cp/html/sam_adc_quickstart.html"], "sam4s": ["sam4s/html/sam_adc_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__adc__group.html", "sam3n": "sam3n/html/group__sam__drivers__adc__group.html", "sam3s": "sam3s/html/group__sam__drivers__adc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__adc__group.html", "sam3u": "sam3u/html/group__sam__drivers__adc__group.html", "sam3x": "sam3x/html/group__sam__drivers__adc__group.html", "sam4c": "sam4c/html/group__sam__drivers__adc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__adc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__adc__group.html", "sam4s": "sam4s/html/group__sam__drivers__adc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Cryptography"], "description": "Driver for the AES (Advanced Encryption Standard) module. Provides functions for configuring and initiating ciphering/deciphering with AES algorithms.", "id": "sam.drivers.aes", "mcus": ["sam4e", "sam4c", "sam4cm", "sam4cp"], "name": "AES - Advanced Encryption Standard Module", "quickstart": {"sam4c": ["sam4c/html/sam_aes_quick_start.html"], "sam4cm": ["sam4cm/html/sam_aes_quick_start.html"], "sam4cp": ["sam4cp/html/sam_aes_quick_start.html"], "sam4e": ["sam4e/html/sam_aes_quick_start.html"]}, "type": "module", "uri": {"sam4c": "sam4c/html/group__group__sam__drivers__aes.html", "sam4cm": "sam4cm/html/group__group__sam__drivers__aes.html", "sam4cp": "sam4cp/html/group__group__sam__drivers__aes.html", "sam4e": "sam4e/html/group__group__sam__drivers__aes.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Cryptography"], "description": "Unit test for the AES (Advanced Encryption Standard) module.", "id": "sam.drivers.aes.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "AES - Advanced Encryption Standard Module unit tests on SAM4CP16BMB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.aes.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Cryptography"], "description": "Use the AES module, encrypt and decrypt blocks of data in various mode with and without DMA.", "id": "sam.drivers.aes.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "AES Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.aes.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Cryptography"], "description": "Use the AES-GCM mode, encrypt and decrypt blocks of data in various mode.", "id": "sam.drivers.aes.gcm.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "AES-GCM Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.aes.gcm.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Basic FreeRTOS Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "common.services.freertos.sam_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CP16BMB"], "category": ["Graphics"], "description": "A simple example for drawing pictures and strings on the C42364A LCD Glass.", "id": "sam.components.display.c42364a.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "C42364A LCD Glass Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.components.display.c42364a.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Communication"], "description": "Low-level driver for the SN65HVD234 CAN Transceiver.", "id": "sam.components.can.sn65hvd234", "mcus": ["sam"], "name": "CAN - SN65HVD234 Transceiver", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam3n": "sam3n/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam3s": "sam3s/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam3sd": "sam3sd/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam3u": "sam3u/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam3x": "sam3x/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4c": "sam4c/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4cm": "sam4cm/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4cp": "sam4cp/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4e": "sam4e/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4l": "sam4l/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4n": "sam4n/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4s": "sam4s/html/group__sam__component__sn65hvd234__transceiver__group.html", "sam4sp": "sam4sp/html/group__sam__component__sn65hvd234__transceiver__group.html", "samg": "samg/html/group__sam__component__sn65hvd234__transceiver__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The Chip Identifier registers permit recognition of the device and its revision. These registers provide the sizes and types of the on-chip memories, as well as the set of embedded peripherals.", "id": "sam.drivers.chipid", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "CHIPID - Chip Identifier", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__chipid__group.html", "sam3n": "sam3n/html/group__sam__drivers__chipid__group.html", "sam3s": "sam3s/html/group__sam__drivers__chipid__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__chipid__group.html", "sam3u": "sam3u/html/group__sam__drivers__chipid__group.html", "sam3x": "sam3x/html/group__sam__drivers__chipid__group.html", "sam4c": "sam4c/html/group__sam__drivers__chipid__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__chipid__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__chipid__group.html", "sam4e": "sam4e/html/group__sam__drivers__chipid__group.html", "sam4n": "sam4n/html/group__sam__drivers__chipid__group.html", "sam4s": "sam4s/html/group__sam__drivers__chipid__group.html", "samg": "samg/html/group__sam__drivers__chipid__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Chipid example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.chipid.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "The Cortex M Cache Controller (CMCC) is a 4-way set associative unified cache controller. It integrates a controller, a tag directory, data memory, metadata memory and a configuration interface.", "id": "sam.drivers.cmcc", "mcus": ["sam4e", "sam4c", "sam4cm", "sam4cp"], "name": "CMCC - Cortex M Cache Controller", "quickstart": {"sam4c": ["sam4c/html/sam_cmcc_quick_start.html"], "sam4cm": ["sam4cm/html/sam_cmcc_quick_start.html"], "sam4cp": ["sam4cp/html/sam_cmcc_quick_start.html"], "sam4e": ["sam4e/html/sam_cmcc_quick_start.html"]}, "type": "module", "uri": {"sam4c": "sam4c/html/group__group__sam__drivers__cmcc.html", "sam4cm": "sam4cm/html/group__group__sam__drivers__cmcc.html", "sam4cp": "sam4cp/html/group__group__sam__drivers__cmcc.html", "sam4e": "sam4e/html/group__group__sam__drivers__cmcc.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4CP16BMB"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "CMSIS Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.cm4_cmsis_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Common API for Clocks Control / Example 1 for SAM4CP16B", "quickstart": {}, "type": "application", "uri": {"sam4cp": "common.services.basic.clock.example1.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM devices.", "id": "common.services.basic.sleepmgr.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Common API for Sleep Management / Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "common.services.basic.sleepmgr.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Common IOPORT service example 1 for SAM4CP", "quickstart": {}, "type": "application", "uri": {"sam4cp": "common.services.ioport.example1.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Loop based delay routines. Provides microseconds, milliseconds and second delays. Common API for SAM, UC3 and XMEGA.", "id": "common.services.delay#sam", "mcus": ["sam"], "name": "Delay routines", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__common__services__delay.html", "sam3n": "sam3n/html/group__group__common__services__delay.html", "sam3s": "sam3s/html/group__group__common__services__delay.html", "sam3sd": "sam3sd/html/group__group__common__services__delay.html", "sam3u": "sam3u/html/group__group__common__services__delay.html", "sam3x": "sam3x/html/group__group__common__services__delay.html", "sam4c": "sam4c/html/group__group__common__services__delay.html", "sam4cm": "sam4cm/html/group__group__common__services__delay.html", "sam4cp": "sam4cp/html/group__group__common__services__delay.html", "sam4e": "sam4e/html/group__group__common__services__delay.html", "sam4l": "sam4l/html/group__group__common__services__delay.html", "sam4n": "sam4n/html/group__group__common__services__delay.html", "sam4s": "sam4s/html/group__group__common__services__delay.html", "sam4sp": "sam4sp/html/group__group__common__services__delay.html", "samg": "samg/html/group__group__common__services__delay.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the HX8347A LCD controller.", "id": "sam.components.display.hx8347a", "mcus": ["sam"], "name": "Display - HX8347A LCD Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__hx8347a__display__group.html", "sam3n": "sam3n/html/group__hx8347a__display__group.html", "sam3s": "sam3s/html/group__hx8347a__display__group.html", "sam3sd": "sam3sd/html/group__hx8347a__display__group.html", "sam3u": "sam3u/html/group__hx8347a__display__group.html", "sam3x": "sam3x/html/group__hx8347a__display__group.html", "sam4c": "sam4c/html/group__hx8347a__display__group.html", "sam4cm": "sam4cm/html/group__hx8347a__display__group.html", "sam4cp": "sam4cp/html/group__hx8347a__display__group.html", "sam4e": "sam4e/html/group__hx8347a__display__group.html", "sam4l": "sam4l/html/group__hx8347a__display__group.html", "sam4n": "sam4n/html/group__hx8347a__display__group.html", "sam4s": "sam4s/html/group__hx8347a__display__group.html", "sam4sp": "sam4sp/html/group__hx8347a__display__group.html", "samg": "samg/html/group__hx8347a__display__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the ILI9325 LCD controller.", "id": "sam.components.display.ili9325", "mcus": ["sam"], "name": "Display - ILI9325 LCD Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__ili9325__display__group.html", "sam3n": "sam3n/html/group__ili9325__display__group.html", "sam3s": "sam3s/html/group__ili9325__display__group.html", "sam3sd": "sam3sd/html/group__ili9325__display__group.html", "sam3u": "sam3u/html/group__ili9325__display__group.html", "sam3x": "sam3x/html/group__ili9325__display__group.html", "sam4c": "sam4c/html/group__ili9325__display__group.html", "sam4cm": "sam4cm/html/group__ili9325__display__group.html", "sam4cp": "sam4cp/html/group__ili9325__display__group.html", "sam4e": "sam4e/html/group__ili9325__display__group.html", "sam4l": "sam4l/html/group__ili9325__display__group.html", "sam4n": "sam4n/html/group__ili9325__display__group.html", "sam4s": "sam4s/html/group__ili9325__display__group.html", "sam4sp": "sam4sp/html/group__ili9325__display__group.html", "samg": "samg/html/group__ili9325__display__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the ILI93xx LCD controller.", "id": "sam.components.display.ili93xx", "mcus": ["sam"], "name": "Display - ILI93xx LCD Controller", "quickstart": {"sam3a": ["sam3a/html/sam_component_ili93xx_quickstart.html"], "sam3n": ["sam3n/html/sam_component_ili93xx_quickstart.html"], "sam3s": ["sam3s/html/sam_component_ili93xx_quickstart.html"], "sam3sd": ["sam3sd/html/sam_component_ili93xx_quickstart.html"], "sam3u": ["sam3u/html/sam_component_ili93xx_quickstart.html"], "sam3x": ["sam3x/html/sam_component_ili93xx_quickstart.html"], "sam4c": ["sam4c/html/sam_component_ili93xx_quickstart.html"], "sam4cm": ["sam4cm/html/sam_component_ili93xx_quickstart.html"], "sam4cp": ["sam4cp/html/sam_component_ili93xx_quickstart.html"], "sam4e": ["sam4e/html/sam_component_ili93xx_quickstart.html"], "sam4l": ["sam4l/html/sam_component_ili93xx_quickstart.html"], "sam4n": ["sam4n/html/sam_component_ili93xx_quickstart.html"], "sam4s": ["sam4s/html/sam_component_ili93xx_quickstart.html"], "sam4sp": ["sam4sp/html/sam_component_ili93xx_quickstart.html"], "samg": ["samg/html/sam_component_ili93xx_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__ili93xx__display__group.html", "sam3n": "sam3n/html/group__ili93xx__display__group.html", "sam3s": "sam3s/html/group__ili93xx__display__group.html", "sam3sd": "sam3sd/html/group__ili93xx__display__group.html", "sam3u": "sam3u/html/group__ili93xx__display__group.html", "sam3x": "sam3x/html/group__ili93xx__display__group.html", "sam4c": "sam4c/html/group__ili93xx__display__group.html", "sam4cm": "sam4cm/html/group__ili93xx__display__group.html", "sam4cp": "sam4cp/html/group__ili93xx__display__group.html", "sam4e": "sam4e/html/group__ili93xx__display__group.html", "sam4l": "sam4l/html/group__ili93xx__display__group.html", "sam4n": "sam4n/html/group__ili93xx__display__group.html", "sam4s": "sam4s/html/group__ili93xx__display__group.html", "sam4sp": "sam4sp/html/group__ili93xx__display__group.html", "samg": "samg/html/group__ili93xx__display__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Drivers RTC Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.rtc.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC tamper function.", "id": "sam.drivers.rtc.tamper_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Drivers RTC Tamper Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.rtc.tamper_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "This example demonstrates the True Random Number Generator (TRNG) provided on SAM3X/SAM4C/SAM4CP microcontrollers. It enables the user to set an alarm and watch it being triggered when the timer reaches the corresponding value.", "id": "sam.drivers.trng.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Drivers TRNG Example for SAM4CP", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.trng.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "The Enhanced Embedded Flash Controller (EFC/EEFC) ensures the interface of the Flash block with the 32-bit internal bus.", "id": "sam.drivers.efc", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cp", "sam4cm", "samg"], "name": "EEFC - Enhanced Embedded Flash Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__efc__group.html", "sam3n": "sam3n/html/group__sam__drivers__efc__group.html", "sam3s": "sam3s/html/group__sam__drivers__efc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__efc__group.html", "sam3u": "sam3u/html/group__sam__drivers__efc__group.html", "sam3x": "sam3x/html/group__sam__drivers__efc__group.html", "sam4c": "sam4c/html/group__sam__drivers__efc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__efc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__efc__group.html", "sam4e": "sam4e/html/group__sam__drivers__efc__group.html", "sam4n": "sam4n/html/group__sam__drivers__efc__group.html", "sam4s": "sam4s/html/group__sam__drivers__efc__group.html", "samg": "samg/html/group__sam__drivers__efc__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "FatFS is a generic FAT file system module for small embedded systems. The FatFS is written in compliance with ANSI C and completely separated from the disk I/O layer. For more information on FatFS, check elm-chan.org/fsw/ff/00index_e.html.", "id": "common.services.fs.fatfs", "mcus": ["sam", "sam0", "xmega"], "name": "FatFS file system", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__thirdparty__fatfs__group.html", "sam3n": "sam3n/html/group__thirdparty__fatfs__group.html", "sam3s": "sam3s/html/group__thirdparty__fatfs__group.html", "sam3sd": "sam3sd/html/group__thirdparty__fatfs__group.html", "sam3u": "sam3u/html/group__thirdparty__fatfs__group.html", "sam3x": "sam3x/html/group__thirdparty__fatfs__group.html", "sam4c": "sam4c/html/group__thirdparty__fatfs__group.html", "sam4cm": "sam4cm/html/group__thirdparty__fatfs__group.html", "sam4cp": "sam4cp/html/group__thirdparty__fatfs__group.html", "sam4e": "sam4e/html/group__thirdparty__fatfs__group.html", "sam4l": "sam4l/html/group__thirdparty__fatfs__group.html", "sam4n": "sam4n/html/group__thirdparty__fatfs__group.html", "sam4s": "sam4s/html/group__thirdparty__fatfs__group.html", "sam4sp": "sam4sp/html/group__thirdparty__fatfs__group.html", "samd20": "samd20/html/group__thirdparty__fatfs__group.html", "samd21": "samd21/html/group__thirdparty__fatfs__group.html", "samg": "samg/html/group__thirdparty__fatfs__group.html", "samr21": "samr21/html/group__thirdparty__fatfs__group.html", "xmegaa": "xmegaa/html/group__thirdparty__fatfs__group.html", "xmegaau": "xmegaau/html/group__thirdparty__fatfs__group.html", "xmegab": "xmegab/html/group__thirdparty__fatfs__group.html", "xmegac": "xmegac/html/group__thirdparty__fatfs__group.html", "xmegad": "xmegad/html/group__thirdparty__fatfs__group.html", "xmegae": "xmegae/html/group__thirdparty__fatfs__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Memory"], "description": "Circular FIFO buffer implementation. Provides functions for initializing and accessing a FIFO buffer. Common API for XMEGA, UC3 and SAM4L.", "id": "common.services.basic.fifo", "mcus": ["uc3", "xmega", "sam"], "name": "FIFO - First-In-First-Out circular buffer", "quickstart": {"sam3a": ["sam3a/html/fifo_quickstart.html"], "sam3n": ["sam3n/html/fifo_quickstart.html"], "sam3s": ["sam3s/html/fifo_quickstart.html"], "sam3sd": ["sam3sd/html/fifo_quickstart.html"], "sam3u": ["sam3u/html/fifo_quickstart.html"], "sam3x": ["sam3x/html/fifo_quickstart.html"], "sam4c": ["sam4c/html/fifo_quickstart.html"], "sam4cm": ["sam4cm/html/fifo_quickstart.html"], "sam4cp": ["sam4cp/html/fifo_quickstart.html"], "sam4e": ["sam4e/html/fifo_quickstart.html"], "sam4l": ["sam4l/html/fifo_quickstart.html"], "sam4n": ["sam4n/html/fifo_quickstart.html"], "sam4s": ["sam4s/html/fifo_quickstart.html"], "sam4sp": ["sam4sp/html/fifo_quickstart.html"], "samg": ["samg/html/fifo_quickstart.html"], "uc3a": ["uc3a/html/fifo_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/fifo_quickstart.html"], "uc3b": ["uc3b/html/fifo_quickstart.html"], "uc3c": ["uc3c/html/fifo_quickstart.html"], "uc3d": ["uc3d/html/fifo_quickstart.html"], "uc3l": ["uc3l/html/fifo_quickstart.html"], "xmegaa": ["xmegaa/html/fifo_quickstart.html"], "xmegaau": ["xmegaau/html/fifo_quickstart.html"], "xmegab": ["xmegab/html/fifo_quickstart.html"], "xmegac": ["xmegac/html/fifo_quickstart.html"], "xmegad": ["xmegad/html/fifo_quickstart.html"], "xmegae": ["xmegae/html/fifo_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__fifo__group.html", "sam3n": "sam3n/html/group__fifo__group.html", "sam3s": "sam3s/html/group__fifo__group.html", "sam3sd": "sam3sd/html/group__fifo__group.html", "sam3u": "sam3u/html/group__fifo__group.html", "sam3x": "sam3x/html/group__fifo__group.html", "sam4c": "sam4c/html/group__fifo__group.html", "sam4cm": "sam4cm/html/group__fifo__group.html", "sam4cp": "sam4cp/html/group__fifo__group.html", "sam4e": "sam4e/html/group__fifo__group.html", "sam4l": "sam4l/html/group__fifo__group.html", "sam4n": "sam4n/html/group__fifo__group.html", "sam4s": "sam4s/html/group__fifo__group.html", "sam4sp": "sam4sp/html/group__fifo__group.html", "samg": "samg/html/group__fifo__group.html", "uc3a": "uc3a/html/group__fifo__group.html", "uc3a3_a4": "uc3a3_a4/html/group__fifo__group.html", "uc3b": "uc3b/html/group__fifo__group.html", "uc3c": "uc3c/html/group__fifo__group.html", "uc3d": "uc3d/html/group__fifo__group.html", "uc3l": "uc3l/html/group__fifo__group.html", "xmegaa": "xmegaa/html/group__fifo__group.html", "xmegaau": "xmegaau/html/group__fifo__group.html", "xmegab": "xmegab/html/group__fifo__group.html", "xmegac": "xmegac/html/group__fifo__group.html", "xmegad": "xmegad/html/group__fifo__group.html", "xmegae": "xmegae/html/group__fifo__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Memory"], "description": "Flash service API for accessing internal flash memory.", "id": "sam.services.flash", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cp", "sam4cm", "samg"], "name": "Flash - SAM Flash Service API", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__services__flash__efc__group.html", "sam3n": "sam3n/html/group__sam__services__flash__efc__group.html", "sam3s": "sam3s/html/group__sam__services__flash__efc__group.html", "sam3sd": "sam3sd/html/group__sam__services__flash__efc__group.html", "sam3u": "sam3u/html/group__sam__services__flash__efc__group.html", "sam3x": "sam3x/html/group__sam__services__flash__efc__group.html", "sam4c": "sam4c/html/group__sam__services__flash__efc__group.html", "sam4cm": "sam4cm/html/group__sam__services__flash__efc__group.html", "sam4cp": "sam4cp/html/group__sam__services__flash__efc__group.html", "sam4e": "sam4e/html/group__sam__services__flash__efc__group.html", "sam4n": "sam4n/html/group__sam__services__flash__efc__group.html", "sam4s": "sam4s/html/group__sam__services__flash__efc__group.html", "samg": "samg/html/group__sam__services__flash__efc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Flash efc unit Test for SAM4CP16BMB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.services.flash.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Flash Program Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.services.flash.program_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Flash Read Unique Id Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.services.flash.read.unique.id_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "", "id": "thirdparty.os.freertos.version#7.3.0", "mcus": ["sam"], "name": "FreeRTOS - Kernel 7.3.0", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__common__services__os__freertos.html", "sam3n": "sam3n/html/group__group__common__services__os__freertos.html", "sam3s": "sam3s/html/group__group__common__services__os__freertos.html", "sam3sd": "sam3sd/html/group__group__common__services__os__freertos.html", "sam3u": "sam3u/html/group__group__common__services__os__freertos.html", "sam3x": "sam3x/html/group__group__common__services__os__freertos.html", "sam4c": "sam4c/html/group__group__common__services__os__freertos.html", "sam4cm": "sam4cm/html/group__group__common__services__os__freertos.html", "sam4cp": "sam4cp/html/group__group__common__services__os__freertos.html", "sam4e": "sam4e/html/group__group__common__services__os__freertos.html", "sam4l": "sam4l/html/group__group__common__services__os__freertos.html", "sam4n": "sam4n/html/group__group__common__services__os__freertos.html", "sam4s": "sam4s/html/group__group__common__services__os__freertos.html", "sam4sp": "sam4sp/html/group__group__common__services__os__freertos.html", "samg": "samg/html/group__group__common__services__os__freertos.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "PDC interface abstraction layer to the FreeRTOS kernel.", "id": "common.services.layer.freertos.pdc#0", "mcus": ["sam3", "sam4s", "sam4n", "sam4c", "sam4cp", "samg"], "name": "FreeRTOS - PDC Interface Layer", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__freertos__service__group.html", "sam3n": "sam3n/html/group__freertos__service__group.html", "sam3s": "sam3s/html/group__freertos__service__group.html", "sam3sd": "sam3sd/html/group__freertos__service__group.html", "sam3u": "sam3u/html/group__freertos__service__group.html", "sam3x": "sam3x/html/group__freertos__service__group.html", "sam4c": "sam4c/html/group__freertos__service__group.html", "sam4cp": "sam4cp/html/group__freertos__service__group.html", "sam4n": "sam4n/html/group__freertos__service__group.html", "sam4s": "sam4s/html/group__freertos__service__group.html", "samg": "samg/html/group__freertos__service__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "SPI interface abstraction layer to the FreeRTOS kernel.", "id": "common.services.layer.freertos.spi#0", "mcus": ["sam3n", "sam3s", "sam3sd", "sam4s", "sam4n", "sam4c", "sam4cp", "samg"], "name": "FreeRTOS - SPI Interface Layer", "quickstart": {}, "type": "module", "uri": {"sam3n": "sam3n/html/group__freertos__spi__peripheral__control__group.html", "sam3s": "sam3s/html/group__freertos__spi__peripheral__control__group.html", "sam3sd": "sam3sd/html/group__freertos__spi__peripheral__control__group.html", "sam4c": "sam4c/html/group__freertos__spi__peripheral__control__group.html", "sam4cp": "sam4cp/html/group__freertos__spi__peripheral__control__group.html", "sam4n": "sam4n/html/group__freertos__spi__peripheral__control__group.html", "sam4s": "sam4s/html/group__freertos__spi__peripheral__control__group.html", "samg": "samg/html/group__freertos__spi__peripheral__control__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "TWI interface abstraction layer to the FreeRTOS kernel.", "id": "common.services.layer.freertos.twi#0", "mcus": ["sam3", "sam4s", "sam4n", "sam4c", "sam4cp", "samg"], "name": "FreeRTOS - TWI Interface Layer", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__freertos__twi__peripheral__control__group.html", "sam3n": "sam3n/html/group__freertos__twi__peripheral__control__group.html", "sam3s": "sam3s/html/group__freertos__twi__peripheral__control__group.html", "sam3sd": "sam3sd/html/group__freertos__twi__peripheral__control__group.html", "sam3u": "sam3u/html/group__freertos__twi__peripheral__control__group.html", "sam3x": "sam3x/html/group__freertos__twi__peripheral__control__group.html", "sam4c": "sam4c/html/group__freertos__twi__peripheral__control__group.html", "sam4cp": "sam4cp/html/group__freertos__twi__peripheral__control__group.html", "sam4n": "sam4n/html/group__freertos__twi__peripheral__control__group.html", "sam4s": "sam4s/html/group__freertos__twi__peripheral__control__group.html", "samg": "samg/html/group__freertos__twi__peripheral__control__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "UART interface abstraction layer to the FreeRTOS kernel.", "id": "common.services.layer.freertos.uart#0", "mcus": ["sam3", "sam4s", "sam4n", "sam4c", "sam4cp", "samg"], "name": "FreeRTOS - UART Interface Layer", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__freertos__uart__peripheral__control__group.html", "sam3n": "sam3n/html/group__freertos__uart__peripheral__control__group.html", "sam3s": "sam3s/html/group__freertos__uart__peripheral__control__group.html", "sam3sd": "sam3sd/html/group__freertos__uart__peripheral__control__group.html", "sam3u": "sam3u/html/group__freertos__uart__peripheral__control__group.html", "sam3x": "sam3x/html/group__freertos__uart__peripheral__control__group.html", "sam4c": "sam4c/html/group__freertos__uart__peripheral__control__group.html", "sam4cp": "sam4cp/html/group__freertos__uart__peripheral__control__group.html", "sam4n": "sam4n/html/group__freertos__uart__peripheral__control__group.html", "sam4s": "sam4s/html/group__freertos__uart__peripheral__control__group.html", "samg": "samg/html/group__freertos__uart__peripheral__control__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "USART interface abstraction layer to the FreeRTOS kernel.", "id": "common.services.layer.freertos.usart#0", "mcus": ["sam3", "sam4s", "sam4n", "sam4c", "sam4cp", "samg"], "name": "FreeRTOS - USART Interface Layer", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__freertos__usart__peripheral__control__group.html", "sam3n": "sam3n/html/group__freertos__usart__peripheral__control__group.html", "sam3s": "sam3s/html/group__freertos__usart__peripheral__control__group.html", "sam3sd": "sam3sd/html/group__freertos__usart__peripheral__control__group.html", "sam3u": "sam3u/html/group__freertos__usart__peripheral__control__group.html", "sam3x": "sam3x/html/group__freertos__usart__peripheral__control__group.html", "sam4c": "sam4c/html/group__freertos__usart__peripheral__control__group.html", "sam4cp": "sam4cp/html/group__freertos__usart__peripheral__control__group.html", "sam4n": "sam4n/html/group__freertos__usart__peripheral__control__group.html", "sam4s": "sam4s/html/group__freertos__usart__peripheral__control__group.html", "samg": "samg/html/group__freertos__usart__peripheral__control__group.html"}}, {"appnote": [], "asf_type": "boards", "boards": [], "category": [], "description": "The generic board support module includes board-specific definitions and function prototypes, such as the board initialization function.", "id": "common.boards", "mcus": ["avr", "sam", "sam0"], "name": "Generic board support", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__common__boards.html", "sam3a": "sam3a/html/group__group__common__boards.html", "sam3n": "sam3n/html/group__group__common__boards.html", "sam3s": "sam3s/html/group__group__common__boards.html", "sam3sd": "sam3sd/html/group__group__common__boards.html", "sam3u": "sam3u/html/group__group__common__boards.html", "sam3x": "sam3x/html/group__group__common__boards.html", "sam4c": "sam4c/html/group__group__common__boards.html", "sam4cm": "sam4cm/html/group__group__common__boards.html", "sam4cp": "sam4cp/html/group__group__common__boards.html", "sam4e": "sam4e/html/group__group__common__boards.html", "sam4l": "sam4l/html/group__group__common__boards.html", "sam4n": "sam4n/html/group__group__common__boards.html", "sam4s": "sam4s/html/group__group__common__boards.html", "sam4sp": "sam4sp/html/group__group__common__boards.html", "samd20": "samd20/html/group__group__common__boards.html", "samd21": "samd21/html/group__group__common__boards.html", "samg": "samg/html/group__group__common__boards.html", "samr21": "samr21/html/group__group__common__boards.html", "tiny": "tiny/html/group__group__common__boards.html", "uc3a": "uc3a/html/group__group__common__boards.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__boards.html", "uc3b": "uc3b/html/group__group__common__boards.html", "uc3c": "uc3c/html/group__group__common__boards.html", "uc3d": "uc3d/html/group__group__common__boards.html", "uc3l": "uc3l/html/group__group__common__boards.html", "xmegaa": "xmegaa/html/group__group__common__boards.html", "xmegaau": "xmegaau/html/group__group__common__boards.html", "xmegab": "xmegab/html/group__group__common__boards.html", "xmegac": "xmegac/html/group__group__common__boards.html", "xmegad": "xmegad/html/group__group__common__boards.html", "xmegae": "xmegae/html/group__group__common__boards.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The System Controller embeds Eight general-purpose backup registers.", "id": "sam.drivers.gpbr", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "samg", "sam4cm", "sam4cp"], "name": "GPBR - General Purpose Backup Register", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__gpbr__group.html", "sam3n": "sam3n/html/group__sam__drivers__gpbr__group.html", "sam3s": "sam3s/html/group__sam__drivers__gpbr__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__gpbr__group.html", "sam3u": "sam3u/html/group__sam__drivers__gpbr__group.html", "sam3x": "sam3x/html/group__sam__drivers__gpbr__group.html", "sam4c": "sam4c/html/group__sam__drivers__gpbr__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__gpbr__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__gpbr__group.html", "sam4e": "sam4e/html/group__sam__drivers__gpbr__group.html", "sam4n": "sam4n/html/group__sam__drivers__gpbr__group.html", "sam4s": "sam4s/html/group__sam__drivers__gpbr__group.html", "samg": "samg/html/group__sam__drivers__gpbr__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "GPBR unit Test for SAM4CP16BMB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.gpbr.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "Driver for general purpose I/O pins. Provides functions for initializing IO pins as input or output, and for reading, or setting/clearing/toggling pins. Common API. Deprecated; use common IOPORT service instead.", "id": "common.services.basic.gpio#2", "mcus": ["sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "GPIO - General purpose Input/Output", "quickstart": {}, "type": "module", "uri": {"sam4c": "sam4c/html/group__gpio__group.html", "sam4cm": "sam4cm/html/group__gpio__group.html", "sam4cp": "sam4cp/html/group__gpio__group.html", "sam4e": "sam4e/html/group__gpio__group.html", "sam4n": "sam4n/html/group__gpio__group.html", "sam4s": "sam4s/html/group__gpio__group.html", "samg": "samg/html/group__gpio__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "This examples demonstrates how to use ICM driver to check integrity of internal SRAM or FLASH.", "id": "sam.drivers.icm.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "ICM Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.icm.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Driver for the Integrity Check Monitor. Provides functions for using the on-chip Integrity Check Monitor.", "id": "sam.drivers.icm", "mcus": ["sam4c", "sam4cm", "sam4cp"], "name": "Integrity Check Monitor driver", "quickstart": {"sam4c": ["sam4c/html/sam_drivers_icm_quick_start.html"], "sam4cm": ["sam4cm/html/sam_drivers_icm_quick_start.html"], "sam4cp": ["sam4cp/html/sam_drivers_icm_quick_start.html"]}, "type": "module", "uri": {"sam4c": "sam4c/html/group__group__sam__drivers__icm.html", "sam4cm": "sam4cm/html/group__group__sam__drivers__icm.html", "sam4cp": "sam4cp/html/group__group__sam__drivers__icm.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Driver for global enabling and disabling of interrupts.", "id": "common.utils.interrupt#sam_nvic", "mcus": ["sam", "sam0"], "name": "Interrupt management - SAM implementation", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__interrupt__group.html", "sam3n": "sam3n/html/group__interrupt__group.html", "sam3s": "sam3s/html/group__interrupt__group.html", "sam3sd": "sam3sd/html/group__interrupt__group.html", "sam3u": "sam3u/html/group__interrupt__group.html", "sam3x": "sam3x/html/group__interrupt__group.html", "sam4c": "sam4c/html/group__interrupt__group.html", "sam4cm": "sam4cm/html/group__interrupt__group.html", "sam4cp": "sam4cp/html/group__interrupt__group.html", "sam4e": "sam4e/html/group__interrupt__group.html", "sam4l": "sam4l/html/group__interrupt__group.html", "sam4n": "sam4n/html/group__interrupt__group.html", "sam4s": "sam4s/html/group__interrupt__group.html", "sam4sp": "sam4sp/html/group__interrupt__group.html", "samd20": "samd20/html/group__interrupt__group.html", "samd21": "samd21/html/group__interrupt__group.html", "samg": "samg/html/group__interrupt__group.html", "samr21": "samr21/html/group__interrupt__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "IOPORT - General purpose I/O driver that includes functions for various I/O operations (set direction, set/get pin value, toggle pins etc.) Common API for XMEGA, UC3 and SAM.", "id": "common.services.ioport#2", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "IOPORT - General purpose I/O service", "quickstart": {"sam3a": ["sam3a/html/ioport_quickstart.html"], "sam3n": ["sam3n/html/ioport_quickstart.html"], "sam3s": ["sam3s/html/ioport_quickstart.html"], "sam3sd": ["sam3sd/html/ioport_quickstart.html"], "sam3u": ["sam3u/html/ioport_quickstart.html"], "sam3x": ["sam3x/html/ioport_quickstart.html"], "sam4c": ["sam4c/html/ioport_quickstart.html"], "sam4cm": ["sam4cm/html/ioport_quickstart.html"], "sam4cp": ["sam4cp/html/ioport_quickstart.html"], "sam4e": ["sam4e/html/ioport_quickstart.html"], "sam4n": ["sam4n/html/ioport_quickstart.html"], "sam4s": ["sam4s/html/ioport_quickstart.html"], "samg": ["samg/html/ioport_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__ioport__group.html", "sam3n": "sam3n/html/group__ioport__group.html", "sam3s": "sam3s/html/group__ioport__group.html", "sam3sd": "sam3sd/html/group__ioport__group.html", "sam3u": "sam3u/html/group__ioport__group.html", "sam3x": "sam3x/html/group__ioport__group.html", "sam4c": "sam4c/html/group__ioport__group.html", "sam4cm": "sam4cm/html/group__ioport__group.html", "sam4cp": "sam4cp/html/group__ioport__group.html", "sam4e": "sam4e/html/group__ioport__group.html", "sam4n": "sam4n/html/group__ioport__group.html", "sam4s": "sam4s/html/group__ioport__group.html", "samg": "samg/html/group__ioport__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4CP16BMB"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Low Power demo for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.applications.low_power.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The Bus Matrix implements a multi-layer AHB that enables parallel access paths between multiple AHB masters and slaves in a system, which increases the overall bandwidth.", "id": "sam.drivers.matrix", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "MATRIX - Bus Matrix", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__matrix__group.html", "sam3n": "sam3n/html/group__sam__drivers__matrix__group.html", "sam3s": "sam3s/html/group__sam__drivers__matrix__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__matrix__group.html", "sam3u": "sam3u/html/group__sam__drivers__matrix__group.html", "sam3x": "sam3x/html/group__sam__drivers__matrix__group.html", "sam4c": "sam4c/html/group__sam__drivers__matrix__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__matrix__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__matrix__group.html", "sam4e": "sam4e/html/group__sam__drivers__matrix__group.html", "sam4n": "sam4n/html/group__sam__drivers__matrix__group.html", "sam4s": "sam4s/html/group__sam__drivers__matrix__group.html", "samg": "samg/html/group__sam__drivers__matrix__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Basic example of MATRIX on SAM4CP16BMB.", "id": "sam.drivers.matrix.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "MATRIX example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.matrix.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": ["Memory"], "description": "Common utility for memory bag allocation. Provides functions for creating re-usable \"bags\" of memory of finite size for allocation, to avoid heap fragmentation.", "id": "common.utils.membag", "mcus": ["xmega", "uc3", "sam"], "name": "MEMBAG Memory Bag Allocator", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__membag__group.html", "sam3n": "sam3n/html/group__membag__group.html", "sam3s": "sam3s/html/group__membag__group.html", "sam3sd": "sam3sd/html/group__membag__group.html", "sam3u": "sam3u/html/group__membag__group.html", "sam3x": "sam3x/html/group__membag__group.html", "sam4c": "sam4c/html/group__membag__group.html", "sam4cm": "sam4cm/html/group__membag__group.html", "sam4cp": "sam4cp/html/group__membag__group.html", "sam4e": "sam4e/html/group__membag__group.html", "sam4l": "sam4l/html/group__membag__group.html", "sam4n": "sam4n/html/group__membag__group.html", "sam4s": "sam4s/html/group__membag__group.html", "sam4sp": "sam4sp/html/group__membag__group.html", "samg": "samg/html/group__membag__group.html", "uc3a": "uc3a/html/group__membag__group.html", "uc3a3_a4": "uc3a3_a4/html/group__membag__group.html", "uc3b": "uc3b/html/group__membag__group.html", "uc3c": "uc3c/html/group__membag__group.html", "uc3d": "uc3d/html/group__membag__group.html", "uc3l": "uc3l/html/group__membag__group.html", "xmegaa": "xmegaa/html/group__membag__group.html", "xmegaau": "xmegaau/html/group__membag__group.html", "xmegab": "xmegab/html/group__membag__group.html", "xmegac": "xmegac/html/group__membag__group.html", "xmegad": "xmegad/html/group__membag__group.html", "xmegae": "xmegae/html/group__membag__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Memory"], "description": "Common abstraction layer for memory interfaces. It provides interfaces between: Memory and USB, Memory and RAM, Memory and Memory. Common API.", "id": "common.services.storage.ctrl_access", "mcus": ["xmega", "uc3", "sam", "sam0"], "name": "Memory Control Access Interface", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__common__services__storage__ctrl__access.html", "sam3n": "sam3n/html/group__group__common__services__storage__ctrl__access.html", "sam3s": "sam3s/html/group__group__common__services__storage__ctrl__access.html", "sam3sd": "sam3sd/html/group__group__common__services__storage__ctrl__access.html", "sam3u": "sam3u/html/group__group__common__services__storage__ctrl__access.html", "sam3x": "sam3x/html/group__group__common__services__storage__ctrl__access.html", "sam4c": "sam4c/html/group__group__common__services__storage__ctrl__access.html", "sam4cm": "sam4cm/html/group__group__common__services__storage__ctrl__access.html", "sam4cp": "sam4cp/html/group__group__common__services__storage__ctrl__access.html", "sam4e": "sam4e/html/group__group__common__services__storage__ctrl__access.html", "sam4l": "sam4l/html/group__group__common__services__storage__ctrl__access.html", "sam4n": "sam4n/html/group__group__common__services__storage__ctrl__access.html", "sam4s": "sam4s/html/group__group__common__services__storage__ctrl__access.html", "sam4sp": "sam4sp/html/group__group__common__services__storage__ctrl__access.html", "samd20": "samd20/html/group__group__common__services__storage__ctrl__access.html", "samd21": "samd21/html/group__group__common__services__storage__ctrl__access.html", "samg": "samg/html/group__group__common__services__storage__ctrl__access.html", "samr21": "samr21/html/group__group__common__services__storage__ctrl__access.html", "uc3a": "uc3a/html/group__group__common__services__storage__ctrl__access.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__services__storage__ctrl__access.html", "uc3b": "uc3b/html/group__group__common__services__storage__ctrl__access.html", "uc3c": "uc3c/html/group__group__common__services__storage__ctrl__access.html", "uc3d": "uc3d/html/group__group__common__services__storage__ctrl__access.html", "uc3l": "uc3l/html/group__group__common__services__storage__ctrl__access.html", "xmegaa": "xmegaa/html/group__group__common__services__storage__ctrl__access.html", "xmegaau": "xmegaau/html/group__group__common__services__storage__ctrl__access.html", "xmegab": "xmegab/html/group__group__common__services__storage__ctrl__access.html", "xmegac": "xmegac/html/group__group__common__services__storage__ctrl__access.html", "xmegad": "xmegad/html/group__group__common__services__storage__ctrl__access.html", "xmegae": "xmegae/html/group__group__common__services__storage__ctrl__access.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller", "Memory"], "description": "The Peripheral DMA Controller transfers data between on-chip serial peripherals and the on- and/or off-chip memories. The link between the PDC and a serial peripheral is operated by the AHB to ABP bridge.", "id": "sam.drivers.pdc", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "PDC - Peripheral DMA Controller Example", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__pdc__group.html", "sam3n": "sam3n/html/group__sam__drivers__pdc__group.html", "sam3s": "sam3s/html/group__sam__drivers__pdc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__pdc__group.html", "sam3u": "sam3u/html/group__sam__drivers__pdc__group.html", "sam3x": "sam3x/html/group__sam__drivers__pdc__group.html", "sam4c": "sam4c/html/group__sam__drivers__pdc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__pdc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__pdc__group.html", "sam4e": "sam4e/html/group__sam__drivers__pdc__group.html", "sam4n": "sam4n/html/group__sam__drivers__pdc__group.html", "sam4s": "sam4s/html/group__sam__drivers__pdc__group.html", "samg": "samg/html/group__sam__drivers__pdc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Peripheral DMA Controller Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.pdc.pdc_uart_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["I/O"], "description": "The Parallel Input/Output Controller manages up to 32 fully programmable input/output lines. Each I/O line may be dedicated as a general-purpose I/O or be assigned to a function of an embedded peripheral. This assures effective optimization of the pins of a product.", "id": "sam.drivers.pio", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "samg", "sam4cm", "sam4cp"], "name": "PIO - Parallel Input/Output Controller", "quickstart": {"sam3a": ["sam3a/html/sam_pio_quickstart.html"], "sam3n": ["sam3n/html/sam_pio_quickstart.html"], "sam3s": ["sam3s/html/sam_pio_quickstart.html"], "sam3sd": ["sam3sd/html/sam_pio_quickstart.html"], "sam3u": ["sam3u/html/sam_pio_quickstart.html"], "sam3x": ["sam3x/html/sam_pio_quickstart.html"], "sam4c": ["sam4c/html/sam_pio_quickstart.html"], "sam4cm": ["sam4cm/html/sam_pio_quickstart.html"], "sam4cp": ["sam4cp/html/sam_pio_quickstart.html"], "sam4e": ["sam4e/html/sam_pio_quickstart.html"], "sam4n": ["sam4n/html/sam_pio_quickstart.html"], "sam4s": ["sam4s/html/sam_pio_quickstart.html"], "samg": ["samg/html/sam_pio_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__pio__group.html", "sam3n": "sam3n/html/group__sam__drivers__pio__group.html", "sam3s": "sam3s/html/group__sam__drivers__pio__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__pio__group.html", "sam3u": "sam3u/html/group__sam__drivers__pio__group.html", "sam3x": "sam3x/html/group__sam__drivers__pio__group.html", "sam4c": "sam4c/html/group__sam__drivers__pio__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__pio__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__pio__group.html", "sam4e": "sam4e/html/group__sam__drivers__pio__group.html", "sam4n": "sam4n/html/group__sam__drivers__pio__group.html", "sam4s": "sam4s/html/group__sam__drivers__pio__group.html", "samg": "samg/html/group__sam__drivers__pio__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["PLC"], "description": "Driver for PDC uart control. Provides functions for buffering and use PDC for UART communication.", "id": "sam.services.plc.buart_if", "mcus": ["sam4cp", "sam4s"], "name": "PLC Buffered PDC Uart Service Interface", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__buart__plc__group.html", "sam4s": "sam4s/html/group__buart__plc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["PLC"], "description": "Driver for PDC usart control. Provides functions for buffering and use PDC for USART communication.", "id": "sam.services.plc.busart_if", "mcus": ["sam4cp", "sam4s"], "name": "PLC Buffered PDC Usart Service Interface", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__busart__plc__group.html", "sam4s": "sam4s/html/group__busart__plc__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["PLC"], "description": "Serial Interface Module acts as a interface for converting stream of command bytes to corresponding PHY API.", "id": "thirdparty.prime.phy.atpl230.addons.serial_if", "mcus": ["atsam4cp16b_0", "atsam4sd32c"], "name": "PLC PHY Serial Interface Module", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__serial__plc__group.html", "sam4s": "sam4s/html/group__serial__plc__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": ["PLC"], "description": "Demostrate how to manage the PLC PHY layer to monitor traffic. It configures PHY layer as serialized in order to communicate with ATMEL PHY Sniffer Tool.", "id": "thirdparty.prime.phy.atpl230.apps.phy_sniffer_tool.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "PLC Phy Sniffer Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "thirdparty.prime.phy.atpl230.apps.phy_sniffer_tool.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["PLC"], "description": "Serial Interface Module acts as a interface for  converting stream of command bytes to corresponding PRIME Phy Sniffer API.", "id": "thirdparty.prime.phy.atpl230.addons.sniffer_if", "mcus": ["atsam4cp16b_0", "atsam4sd32c"], "name": "PLC PHY Sniffer Interface Module", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__sniffer__plc__group.html", "sam4s": "sam4s/html/group__sniffer__plc__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": ["PLC"], "description": "Demostrate how to use the PLC PHY layer. It configures PHY layer as serialized in order to communicate with ATMEL PHY Tester Tool.", "id": "thirdparty.prime.phy.atpl230.apps.phy_tester_tool.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "PLC Phy Tester Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "thirdparty.prime.phy.atpl230.apps.phy_tester_tool.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": ["PLC"], "description": "Demostrate how to manage the PLC PHY layer using a serial console. It configures several parameters on PHY layer and launches transmission test.", "id": "thirdparty.prime.phy.atpl230.apps.phy_tx_test_console.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "PLC Phy TX Test Console on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "thirdparty.prime.phy.atpl230.apps.phy_tx_test_console.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["PLC"], "description": "ATPL230-PRIME Physical Layer. Provides functions to manage PLC Physical Layer using Proxy PLC Controller.", "id": "thirdparty.prime.phy.atpl230", "mcus": ["atsam4cp16b_0", "atsam4sd32c"], "name": "PLC Physical Layer Interface", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__phy__plc__group.html", "sam4s": "sam4s/html/group__phy__plc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["PLC"], "description": "Service to calculate different CRCs as specified in the PRIME PLC standard.", "id": "sam.services.plc.pcrc", "mcus": ["sam4cp", "sam4s"], "name": "PLC PRIME CRC calculation service", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__pcrc__plc__group.html", "sam4s": "sam4s/html/group__pcrc__plc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["PLC"], "description": "Driver for PLC Universal Serial Interface (USI) service. Provides functions for sending and receiving data through the serial interface.", "id": "sam.services.plc.usi", "mcus": ["sam4cp", "sam4s"], "name": "PLC Universal Serial Interface", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__usi__plc__group.html", "sam4s": "sam4s/html/group__usi__plc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "The Power Management Controller optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Processor.", "id": "sam.drivers.pmc", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "PMC - Power Management Controller", "quickstart": {"sam3a": ["sam3a/html/sam_pmc_quickstart.html"], "sam3n": ["sam3n/html/sam_pmc_quickstart.html"], "sam3s": ["sam3s/html/sam_pmc_quickstart.html"], "sam3sd": ["sam3sd/html/sam_pmc_quickstart.html"], "sam3u": ["sam3u/html/sam_pmc_quickstart.html"], "sam3x": ["sam3x/html/sam_pmc_quickstart.html"], "sam4c": ["sam4c/html/sam_pmc_quickstart.html"], "sam4cm": ["sam4cm/html/sam_pmc_quickstart.html"], "sam4cp": ["sam4cp/html/sam_pmc_quickstart.html"], "sam4e": ["sam4e/html/sam_pmc_quickstart.html"], "sam4n": ["sam4n/html/sam_pmc_quickstart.html"], "sam4s": ["sam4s/html/sam_pmc_quickstart.html"], "samg": ["samg/html/sam_pmc_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__pmc__group.html", "sam3n": "sam3n/html/group__sam__drivers__pmc__group.html", "sam3s": "sam3s/html/group__sam__drivers__pmc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__pmc__group.html", "sam3u": "sam3u/html/group__sam__drivers__pmc__group.html", "sam3x": "sam3x/html/group__sam__drivers__pmc__group.html", "sam4c": "sam4c/html/group__sam__drivers__pmc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__pmc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__pmc__group.html", "sam4e": "sam4e/html/group__sam__drivers__pmc__group.html", "sam4n": "sam4n/html/group__sam__drivers__pmc__group.html", "sam4s": "sam4s/html/group__sam__drivers__pmc__group.html", "samg": "samg/html/group__sam__drivers__pmc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "PMC unit Test for SAM4CP16BMB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.pmc.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["PLC"], "description": "Driver for PLC control. Provides functions for accessing Proxy PLC Controller. Common API.", "id": "sam.services.plc.pplc_if.atpl230", "mcus": ["atsam4cp16b_0", "sam4s"], "name": "Proxy Power Line Communication (PLC) Controller Interface - ATPL230 implementation", "quickstart": {}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__pplc__plc__group.html", "sam4s": "sam4s/html/group__pplc__plc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "The PWM macrocell controls 4 channels independently. Each channel controls two complementary square output waveforms. Characteristics of the output waveforms such as period, dutycycle, polarity and dead-times are configured through the user interface.", "id": "sam.drivers.pwm", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp"], "name": "PWM - Pulse Width Modulation", "quickstart": {"sam3a": ["sam3a/html/sam_pwm_quickstart.html"], "sam3n": ["sam3n/html/sam_pwm_quickstart.html"], "sam3s": ["sam3s/html/sam_pwm_quickstart.html"], "sam3sd": ["sam3sd/html/sam_pwm_quickstart.html"], "sam3u": ["sam3u/html/sam_pwm_quickstart.html"], "sam3x": ["sam3x/html/sam_pwm_quickstart.html"], "sam4c": ["sam4c/html/sam_pwm_quickstart.html"], "sam4cm": ["sam4cm/html/sam_pwm_quickstart.html"], "sam4cp": ["sam4cp/html/sam_pwm_quickstart.html"], "sam4e": ["sam4e/html/sam_pwm_quickstart.html"], "sam4n": ["sam4n/html/sam_pwm_quickstart.html"], "sam4s": ["sam4s/html/sam_pwm_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__pwm__group.html", "sam3n": "sam3n/html/group__sam__drivers__pwm__group.html", "sam3s": "sam3s/html/group__sam__drivers__pwm__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__pwm__group.html", "sam3u": "sam3u/html/group__sam__drivers__pwm__group.html", "sam3x": "sam3x/html/group__sam__drivers__pwm__group.html", "sam4c": "sam4c/html/group__sam__drivers__pwm__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__pwm__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__pwm__group.html", "sam4e": "sam4e/html/group__sam__drivers__pwm__group.html", "sam4n": "sam4n/html/group__sam__drivers__pwm__group.html", "sam4s": "sam4s/html/group__sam__drivers__pwm__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Component for communicating with QTouch sensor devices with I2C interface, currently supporting the AT42QT2160. It provides functions for initialization and read/write operations at register level, and reading out touch status. Common implementation for UC3, XMEGA and SAM.", "id": "common.components.touch.qt.qt_i2c", "mcus": ["xmega", "uc3", "sam"], "name": "QTouch Sensor with I2C interface", "quickstart": {"sam3a": ["sam3a/html/qt_device_i2c_quickstart.html"], "sam3n": ["sam3n/html/qt_device_i2c_quickstart.html"], "sam3s": ["sam3s/html/qt_device_i2c_quickstart.html"], "sam3sd": ["sam3sd/html/qt_device_i2c_quickstart.html"], "sam3u": ["sam3u/html/qt_device_i2c_quickstart.html"], "sam3x": ["sam3x/html/qt_device_i2c_quickstart.html"], "sam4c": ["sam4c/html/qt_device_i2c_quickstart.html"], "sam4cm": ["sam4cm/html/qt_device_i2c_quickstart.html"], "sam4cp": ["sam4cp/html/qt_device_i2c_quickstart.html"], "sam4e": ["sam4e/html/qt_device_i2c_quickstart.html"], "sam4l": ["sam4l/html/qt_device_i2c_quickstart.html"], "sam4n": ["sam4n/html/qt_device_i2c_quickstart.html"], "sam4s": ["sam4s/html/qt_device_i2c_quickstart.html"], "sam4sp": ["sam4sp/html/qt_device_i2c_quickstart.html"], "samg": ["samg/html/qt_device_i2c_quickstart.html"], "uc3a": ["uc3a/html/qt_device_i2c_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/qt_device_i2c_quickstart.html"], "uc3b": ["uc3b/html/qt_device_i2c_quickstart.html"], "uc3c": ["uc3c/html/qt_device_i2c_quickstart.html"], "uc3d": ["uc3d/html/qt_device_i2c_quickstart.html"], "uc3l": ["uc3l/html/qt_device_i2c_quickstart.html"], "xmegaa": ["xmegaa/html/qt_device_i2c_quickstart.html"], "xmegaau": ["xmegaau/html/qt_device_i2c_quickstart.html"], "xmegab": ["xmegab/html/qt_device_i2c_quickstart.html"], "xmegac": ["xmegac/html/qt_device_i2c_quickstart.html"], "xmegad": ["xmegad/html/qt_device_i2c_quickstart.html"], "xmegae": ["xmegae/html/qt_device_i2c_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__qt__device__i2c__group.html", "sam3n": "sam3n/html/group__qt__device__i2c__group.html", "sam3s": "sam3s/html/group__qt__device__i2c__group.html", "sam3sd": "sam3sd/html/group__qt__device__i2c__group.html", "sam3u": "sam3u/html/group__qt__device__i2c__group.html", "sam3x": "sam3x/html/group__qt__device__i2c__group.html", "sam4c": "sam4c/html/group__qt__device__i2c__group.html", "sam4cm": "sam4cm/html/group__qt__device__i2c__group.html", "sam4cp": "sam4cp/html/group__qt__device__i2c__group.html", "sam4e": "sam4e/html/group__qt__device__i2c__group.html", "sam4l": "sam4l/html/group__qt__device__i2c__group.html", "sam4n": "sam4n/html/group__qt__device__i2c__group.html", "sam4s": "sam4s/html/group__qt__device__i2c__group.html", "sam4sp": "sam4sp/html/group__qt__device__i2c__group.html", "samg": "samg/html/group__qt__device__i2c__group.html", "uc3a": "uc3a/html/group__qt__device__i2c__group.html", "uc3a3_a4": "uc3a3_a4/html/group__qt__device__i2c__group.html", "uc3b": "uc3b/html/group__qt__device__i2c__group.html", "uc3c": "uc3c/html/group__qt__device__i2c__group.html", "uc3d": "uc3d/html/group__qt__device__i2c__group.html", "uc3l": "uc3l/html/group__qt__device__i2c__group.html", "xmegaa": "xmegaa/html/group__qt__device__i2c__group.html", "xmegaau": "xmegaau/html/group__qt__device__i2c__group.html", "xmegab": "xmegab/html/group__qt__device__i2c__group.html", "xmegac": "xmegac/html/group__qt__device__i2c__group.html", "xmegad": "xmegad/html/group__qt__device__i2c__group.html", "xmegae": "xmegae/html/group__qt__device__i2c__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The Reset Controller, based on power-on reset cells, handles all the resets of the system without any external components. It reports which reset occurred last.", "id": "sam.drivers.rstc", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "RSTC - Reset Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__rstc__group.html", "sam3n": "sam3n/html/group__sam__drivers__rstc__group.html", "sam3s": "sam3s/html/group__sam__drivers__rstc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__rstc__group.html", "sam3u": "sam3u/html/group__sam__drivers__rstc__group.html", "sam3x": "sam3x/html/group__sam__drivers__rstc__group.html", "sam4c": "sam4c/html/group__sam__drivers__rstc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__rstc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__rstc__group.html", "sam4e": "sam4e/html/group__sam__drivers__rstc__group.html", "sam4n": "sam4n/html/group__sam__drivers__rstc__group.html", "sam4s": "sam4s/html/group__sam__drivers__rstc__group.html", "samg": "samg/html/group__sam__drivers__rstc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "RSTC unit Test for SAM4CP16BMB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.rstc.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "The Real-time Clock combines a complete time-of-day clock with alarm and a two-hundred-year Gregorian calendar, complemented by a programmable periodic interrupt.", "id": "sam.drivers.rtc", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "RTC - Real Time Clock", "quickstart": {"sam3a": ["sam3a/html/sam_rtc_quickstart.html"], "sam3n": ["sam3n/html/sam_rtc_quickstart.html"], "sam3s": ["sam3s/html/sam_rtc_quickstart.html"], "sam3sd": ["sam3sd/html/sam_rtc_quickstart.html"], "sam3u": ["sam3u/html/sam_rtc_quickstart.html"], "sam3x": ["sam3x/html/sam_rtc_quickstart.html"], "sam4c": ["sam4c/html/sam_rtc_quickstart.html"], "sam4cm": ["sam4cm/html/sam_rtc_quickstart.html"], "sam4cp": ["sam4cp/html/sam_rtc_quickstart.html"], "sam4e": ["sam4e/html/sam_rtc_quickstart.html"], "sam4n": ["sam4n/html/sam_rtc_quickstart.html"], "sam4s": ["sam4s/html/sam_rtc_quickstart.html"], "samg": ["samg/html/sam_rtc_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__rtc__group.html", "sam3n": "sam3n/html/group__sam__drivers__rtc__group.html", "sam3s": "sam3s/html/group__sam__drivers__rtc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__rtc__group.html", "sam3u": "sam3u/html/group__sam__drivers__rtc__group.html", "sam3x": "sam3x/html/group__sam__drivers__rtc__group.html", "sam4c": "sam4c/html/group__sam__drivers__rtc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__rtc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__rtc__group.html", "sam4e": "sam4e/html/group__sam__drivers__rtc__group.html", "sam4n": "sam4n/html/group__sam__drivers__rtc__group.html", "sam4s": "sam4s/html/group__sam__drivers__rtc__group.html", "samg": "samg/html/group__sam__drivers__rtc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "The Real-time Timer is built around a 32-bit counter used to count roll-over events of the 16-bit prescaler which size enables to count elapsed seconds from a 32 kHz slow clock source. It generates a periodic interrupt and/or triggers an alarm on a programmed value.", "id": "sam.drivers.rtt", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "RTT - Real Time Timer", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__rtt__group.html", "sam3n": "sam3n/html/group__sam__drivers__rtt__group.html", "sam3s": "sam3s/html/group__sam__drivers__rtt__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__rtt__group.html", "sam3u": "sam3u/html/group__sam__drivers__rtt__group.html", "sam3x": "sam3x/html/group__sam__drivers__rtt__group.html", "sam4c": "sam4c/html/group__sam__drivers__rtt__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__rtt__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__rtt__group.html", "sam4e": "sam4e/html/group__sam__drivers__rtt__group.html", "sam4n": "sam4n/html/group__sam__drivers__rtt__group.html", "sam4s": "sam4s/html/group__sam__drivers__rtt__group.html", "samg": "samg/html/group__sam__drivers__rtt__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Basic example of RTT on SAM4CP16BMB.", "id": "sam.drivers.rtt.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "RTT example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.rtt.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the C42364 LCD Glass.", "id": "sam.components.display.c42364a#slcdc", "mcus": ["sam4c", "sam4cp"], "name": "sam.components.display.c42364a", "quickstart": {"sam4c": ["sam4c/html/sam_component_c42364a_quick_start.html"], "sam4cp": ["sam4cp/html/sam_component_c42364a_quick_start.html"]}, "type": "module", "uri": {"sam4c": "sam4c/html/group__c42364a__display__group.html", "sam4cp": "sam4cp/html/group__c42364a__display__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP class marks Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP convolution Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP dotproduct Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP FFT bin Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP FIR Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP graphic equalizer Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP linear interp Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP matrix Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP Signal Converge Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP Sin Cos Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CP16BMB"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SAM4 DSP Variance Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "SD/MMC stack for SD / MMC / SDIO cards. SPI interface is supported. This includes the basic functions to install, read and write a SD/SDIO/MMC card. This module in standalone is used mainly for SDIO application.", "id": "common.components.memory.sd_mmc#spi", "mcus": ["xmega", "uc3", "sam", "uc3a3_a4", "sam3sd", "sam3s", "sam4s", "sam3u", "sam3x", "sam4e"], "name": "SD/MMC stack on SPI interface", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sd__mmc__stack__group.html", "sam3n": "sam3n/html/group__sd__mmc__stack__group.html", "sam3x": "sam3x/html/group__sd__mmc__stack__group.html", "sam4c": "sam4c/html/group__sd__mmc__stack__group.html", "sam4cm": "sam4cm/html/group__sd__mmc__stack__group.html", "sam4cp": "sam4cp/html/group__sd__mmc__stack__group.html", "sam4l": "sam4l/html/group__sd__mmc__stack__group.html", "sam4n": "sam4n/html/group__sd__mmc__stack__group.html", "sam4sp": "sam4sp/html/group__sd__mmc__stack__group.html", "samg": "samg/html/group__sd__mmc__stack__group.html", "uc3a": "uc3a/html/group__sd__mmc__stack__group.html", "uc3b": "uc3b/html/group__sd__mmc__stack__group.html", "uc3c": "uc3c/html/group__sd__mmc__stack__group.html", "uc3d": "uc3d/html/group__sd__mmc__stack__group.html", "uc3l": "uc3l/html/group__sd__mmc__stack__group.html", "xmegaa": "xmegaa/html/group__sd__mmc__stack__group.html", "xmegaau": "xmegaau/html/group__sd__mmc__stack__group.html", "xmegab": "xmegab/html/group__sd__mmc__stack__group.html", "xmegac": "xmegac/html/group__sd__mmc__stack__group.html", "xmegad": "xmegad/html/group__sd__mmc__stack__group.html", "xmegae": "xmegae/html/group__sd__mmc__stack__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Graphics"], "description": "Driver for the Segment LCD Controller. Provides functions for using the on-chip Segment LCD Controller.", "id": "sam.drivers.slcdc", "mcus": ["sam4c", "sam4cm", "sam4cp"], "name": "Segment LCD Controller driver", "quickstart": {"sam4c": ["sam4c/html/sam_drivers_slcdc_quick_start.html"], "sam4cm": ["sam4cm/html/sam_drivers_slcdc_quick_start.html"], "sam4cp": ["sam4cp/html/sam_drivers_slcdc_quick_start.html"]}, "type": "module", "uri": {"sam4c": "sam4c/html/group__group__sam__drivers__slcdc.html", "sam4cm": "sam4cm/html/group__group__sam__drivers__slcdc.html", "sam4cp": "sam4cp/html/group__group__sam__drivers__slcdc.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "Enables Support for  UART communication", "id": "thirdparty.wireless.addons.sio2host#uart#0", "mcus": ["xmega", "uc3", "megarf", "sam3", "sam4"], "name": "Serial I/O - Host using UART", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__sio2host__uart.html", "sam3a": "sam3a/html/group__group__sio2host__uart.html", "sam3n": "sam3n/html/group__group__sio2host__uart.html", "sam3s": "sam3s/html/group__group__sio2host__uart.html", "sam3sd": "sam3sd/html/group__group__sio2host__uart.html", "sam3u": "sam3u/html/group__group__sio2host__uart.html", "sam3x": "sam3x/html/group__group__sio2host__uart.html", "sam4c": "sam4c/html/group__group__sio2host__uart.html", "sam4cm": "sam4cm/html/group__group__sio2host__uart.html", "sam4cp": "sam4cp/html/group__group__sio2host__uart.html", "sam4e": "sam4e/html/group__group__sio2host__uart.html", "sam4l": "sam4l/html/group__group__sio2host__uart.html", "sam4n": "sam4n/html/group__group__sio2host__uart.html", "sam4s": "sam4s/html/group__group__sio2host__uart.html", "sam4sp": "sam4sp/html/group__group__sio2host__uart.html", "uc3a": "uc3a/html/group__group__sio2host__uart.html", "uc3a3_a4": "uc3a3_a4/html/group__group__sio2host__uart.html", "uc3b": "uc3b/html/group__group__sio2host__uart.html", "uc3c": "uc3c/html/group__group__sio2host__uart.html", "uc3d": "uc3d/html/group__group__sio2host__uart.html", "uc3l": "uc3l/html/group__group__sio2host__uart.html", "xmegaa": "xmegaa/html/group__group__sio2host__uart.html", "xmegaau": "xmegaau/html/group__group__sio2host__uart.html", "xmegab": "xmegab/html/group__group__sio2host__uart.html", "xmegac": "xmegac/html/group__group__sio2host__uart.html", "xmegad": "xmegad/html/group__group__sio2host__uart.html", "xmegae": "xmegae/html/group__group__sio2host__uart.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Similar API for Serial Interfaces / Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "common.services.basic.serial.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Graphics"], "description": "This examples demonstrates how to use SLCDC driver to address an external LCD segment. The LCD still display in steady state after core entering backup mode.", "id": "sam.drivers.slcdc.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SLCDC Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.slcdc.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Power Management"], "description": "The sleep manager provides functions for centralized management of sleep modes. Common API for SAM, UC3 and XMEGA.", "id": "common.services.basic.sleepmgr#2", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "Sleep manager - SAM implementation", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sleepmgr__group.html", "sam3n": "sam3n/html/group__sleepmgr__group.html", "sam3s": "sam3s/html/group__sleepmgr__group.html", "sam3sd": "sam3sd/html/group__sleepmgr__group.html", "sam3u": "sam3u/html/group__sleepmgr__group.html", "sam3x": "sam3x/html/group__sleepmgr__group.html", "sam4c": "sam4c/html/group__sleepmgr__group.html", "sam4cm": "sam4cm/html/group__sleepmgr__group.html", "sam4cp": "sam4cp/html/group__sleepmgr__group.html", "sam4e": "sam4e/html/group__sleepmgr__group.html", "sam4n": "sam4n/html/group__sleepmgr__group.html", "sam4s": "sam4s/html/group__sleepmgr__group.html", "samg": "samg/html/group__sleepmgr__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Implementation for the common SPI API using the USART peripheral in SPI mode.", "id": "common.services.basic.spi_master#usart_spi", "mcus": ["xmega", "uc3", "sam", "megarf"], "name": "SPI - Common USART SPI Master", "quickstart": {"sam3n": ["sam3n/html/common_spi_master_quickstart.html"], "sam3s": ["sam3s/html/common_spi_master_quickstart.html"], "sam3sd": ["sam3sd/html/common_spi_master_quickstart.html"], "sam3u": ["sam3u/html/common_spi_master_quickstart.html"], "sam4cp": ["sam4cp/html/common_spi_master_quickstart.html"], "sam4n": ["sam4n/html/common_spi_master_quickstart.html"], "sam4sp": ["sam4sp/html/common_spi_master_quickstart.html"], "samg": ["samg/html/common_spi_master_quickstart.html"], "uc3d": ["uc3d/html/common_spi_master_quickstart.html"], "xmegab": ["xmegab/html/common_spi_master_quickstart.html"], "xmegac": ["xmegac/html/common_spi_master_quickstart.html"]}, "type": "module", "uri": {"sam3n": "sam3n/html/group__spi__group.html", "sam3s": "sam3s/html/group__spi__group.html", "sam3sd": "sam3sd/html/group__spi__group.html", "sam3u": "sam3u/html/group__spi__group.html", "sam4cp": "sam4cp/html/group__spi__group.html", "sam4n": "sam4n/html/group__spi__group.html", "sam4sp": "sam4sp/html/group__spi__group.html", "samg": "samg/html/group__spi__group.html", "uc3d": "uc3d/html/group__spi__group.html", "xmegab": "xmegab/html/group__spi__group.html", "xmegac": "xmegac/html/group__spi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The Serial Peripheral Interface (SPI) circuit is a synchronous serial data link that provides communication with external devices in Master or Slave Mode.", "id": "sam.drivers.spi", "mcus": ["sam"], "name": "SPI - Serial Peripheral Interface", "quickstart": {"sam3a": ["sam3a/html/sam_spi_quickstart.html"], "sam3n": ["sam3n/html/sam_spi_quickstart.html"], "sam3s": ["sam3s/html/sam_spi_quickstart.html"], "sam3sd": ["sam3sd/html/sam_spi_quickstart.html"], "sam3u": ["sam3u/html/sam_spi_quickstart.html"], "sam3x": ["sam3x/html/sam_spi_quickstart.html"], "sam4c": ["sam4c/html/sam_spi_quickstart.html"], "sam4cm": ["sam4cm/html/sam_spi_quickstart.html"], "sam4cp": ["sam4cp/html/sam_spi_quickstart.html"], "sam4e": ["sam4e/html/sam_spi_quickstart.html"], "sam4l": ["sam4l/html/sam_spi_quickstart.html"], "sam4n": ["sam4n/html/sam_spi_quickstart.html"], "sam4s": ["sam4s/html/sam_spi_quickstart.html"], "sam4sp": ["sam4sp/html/sam_spi_quickstart.html"], "samg": ["samg/html/sam_spi_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__spi__group.html", "sam3n": "sam3n/html/group__sam__drivers__spi__group.html", "sam3s": "sam3s/html/group__sam__drivers__spi__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__spi__group.html", "sam3u": "sam3u/html/group__sam__drivers__spi__group.html", "sam3x": "sam3x/html/group__sam__drivers__spi__group.html", "sam4c": "sam4c/html/group__sam__drivers__spi__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__spi__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__spi__group.html", "sam4e": "sam4e/html/group__sam__drivers__spi__group.html", "sam4l": "sam4l/html/group__sam__drivers__spi__group.html", "sam4n": "sam4n/html/group__sam__drivers__spi__group.html", "sam4s": "sam4s/html/group__sam__drivers__spi__group.html", "sam4sp": "sam4sp/html/group__sam__drivers__spi__group.html", "samg": "samg/html/group__sam__drivers__spi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SPI Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.spi.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SPI PDC Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.spi.spi_pdc_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SPI unit Test for SAM4CP16BMB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.spi.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the SSD1306 OLED controller through 4-wire SPI. Note: Controller inside display UG-2832HSWEG04 OLED (128 x 32, Monochrome). This display is available on XMEGA-C3 Xplained", "id": "common.components.display.ssd1306", "mcus": ["xmega", "sam4"], "name": "SSD1306 OLED controller", "quickstart": {}, "type": "module", "uri": {"sam4c": "sam4c/html/group__ssd1306__oled__controller__group.html", "sam4cm": "sam4cm/html/group__ssd1306__oled__controller__group.html", "sam4cp": "sam4cp/html/group__ssd1306__oled__controller__group.html", "sam4e": "sam4e/html/group__ssd1306__oled__controller__group.html", "sam4l": "sam4l/html/group__ssd1306__oled__controller__group.html", "sam4n": "sam4n/html/group__ssd1306__oled__controller__group.html", "sam4s": "sam4s/html/group__ssd1306__oled__controller__group.html", "sam4sp": "sam4sp/html/group__ssd1306__oled__controller__group.html", "xmegaa": "xmegaa/html/group__ssd1306__oled__controller__group.html", "xmegaau": "xmegaau/html/group__ssd1306__oled__controller__group.html", "xmegab": "xmegab/html/group__ssd1306__oled__controller__group.html", "xmegac": "xmegac/html/group__ssd1306__oled__controller__group.html", "xmegad": "xmegad/html/group__ssd1306__oled__controller__group.html", "xmegae": "xmegae/html/group__ssd1306__oled__controller__group.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Common standard serial I/O management driver that implements a stdio serial interface on SAM devices.", "id": "common.utils.stdio.stdio_serial#sam", "mcus": ["sam3", "sam4", "samg"], "name": "Standard serial I/O (stdio) - SAM implementation", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__common__utils__stdio__stdio__serial.html", "sam3n": "sam3n/html/group__group__common__utils__stdio__stdio__serial.html", "sam3s": "sam3s/html/group__group__common__utils__stdio__stdio__serial.html", "sam3sd": "sam3sd/html/group__group__common__utils__stdio__stdio__serial.html", "sam3u": "sam3u/html/group__group__common__utils__stdio__stdio__serial.html", "sam3x": "sam3x/html/group__group__common__utils__stdio__stdio__serial.html", "sam4c": "sam4c/html/group__group__common__utils__stdio__stdio__serial.html", "sam4cm": "sam4cm/html/group__group__common__utils__stdio__stdio__serial.html", "sam4cp": "sam4cp/html/group__group__common__utils__stdio__stdio__serial.html", "sam4e": "sam4e/html/group__group__common__utils__stdio__stdio__serial.html", "sam4l": "sam4l/html/group__group__common__utils__stdio__stdio__serial.html", "sam4n": "sam4n/html/group__group__common__utils__stdio__stdio__serial.html", "sam4s": "sam4s/html/group__group__common__utils__stdio__stdio__serial.html", "sam4sp": "sam4sp/html/group__group__common__utils__stdio__stdio__serial.html", "samg": "samg/html/group__group__common__utils__stdio__stdio__serial.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The Supply Controller monitors the supply voltage of the core and manages the backup low power mode.", "id": "sam.drivers.supc", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "SUPC - Supply Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__supc__group.html", "sam3n": "sam3n/html/group__sam__drivers__supc__group.html", "sam3s": "sam3s/html/group__sam__drivers__supc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__supc__group.html", "sam3u": "sam3u/html/group__sam__drivers__supc__group.html", "sam3x": "sam3x/html/group__sam__drivers__supc__group.html", "sam4c": "sam4c/html/group__sam__drivers__supc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__supc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__supc__group.html", "sam4e": "sam4e/html/group__sam__drivers__supc__group.html", "sam4n": "sam4n/html/group__sam__drivers__supc__group.html", "sam4s": "sam4s/html/group__sam__drivers__supc__group.html", "samg": "samg/html/group__sam__drivers__supc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "SUPC unit Test for SAM4CP16BMB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.supc.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#22", "mcus": ["sam4cp"], "name": "System Clock Control - SAM4CP implementation", "quickstart": {"sam4cp": ["sam4cp/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam4cp": "sam4cp/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "The Timer Counter includes three identical 16-bit Timer Counter channels. Each channel can be independently programmed to perform a wide range of functions including frequency measurement, event counting, interval measurement, pulse generation, delay timing and pulse width modulation.", "id": "sam.drivers.tc", "mcus": ["sam"], "name": "TC - Timer Counter", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__tc__group.html", "sam3n": "sam3n/html/group__sam__drivers__tc__group.html", "sam3s": "sam3s/html/group__sam__drivers__tc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__tc__group.html", "sam3u": "sam3u/html/group__sam__drivers__tc__group.html", "sam3x": "sam3x/html/group__sam__drivers__tc__group.html", "sam4c": "sam4c/html/group__sam__drivers__tc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__tc__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__tc__group.html", "sam4e": "sam4e/html/group__sam__drivers__tc__group.html", "sam4l": "sam4l/html/group__sam__drivers__tc__group.html", "sam4n": "sam4n/html/group__sam__drivers__tc__group.html", "sam4s": "sam4s/html/group__sam__drivers__tc__group.html", "sam4sp": "sam4sp/html/group__sam__drivers__tc__group.html", "samg": "samg/html/group__sam__drivers__tc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CP16BMB"], "category": ["PLC"], "description": "Illustrates how to provide USI with support for a user-defined protocol.", "id": "sam.services.plc.usi.user_protocol_template.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Template of a user-defined protocol for PLC USI service for SAM4CP16B", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.services.plc.usi.user_protocol_template.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Driver for the True Random Number Generator Register (TRNG). Provides functions for using the TRNG.", "id": "sam.drivers.trng", "mcus": ["sam3x", "sam4c", "sam4cm", "sam4cp"], "name": "TRNG - True Random Number Generator Register", "quickstart": {}, "type": "module", "uri": {"sam3x": "sam3x/html/group__group__sam__drivers__trng.html", "sam4c": "sam4c/html/group__group__sam__drivers__trng.html", "sam4cm": "sam4cm/html/group__group__sam__drivers__trng.html", "sam4cp": "sam4cp/html/group__group__sam__drivers__trng.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for the TRNG driver.", "id": "sam.drivers.trng.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "TRNG unit Test for SAM4CP", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.trng.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The Two-wire Interface (TWI) interconnects components on a unique two-wire bus, made up of one clock line and one data line with speeds of up to 400 Kbits per second, based on a byte-oriented transfer format. It can be used with any Atmel Two-wire Interface bus Serial EEPROM and I2C compatible device such as Real Time Clock (RTC), Dot Matrix/Graphic LCD Controllers and Temperature Sensor, to name but a few. The TWI is programmable as a master or a slave with sequential or single-byte access. Multiple master capability is supported.", "id": "sam.drivers.twi", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "samg", "sam4cp", "sam4cm"], "name": "TWI - Two-wire Interface", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__twi__group.html", "sam3n": "sam3n/html/group__sam__drivers__twi__group.html", "sam3s": "sam3s/html/group__sam__drivers__twi__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__twi__group.html", "sam3u": "sam3u/html/group__sam__drivers__twi__group.html", "sam3x": "sam3x/html/group__sam__drivers__twi__group.html", "sam4c": "sam4c/html/group__sam__drivers__twi__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__twi__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__twi__group.html", "sam4e": "sam4e/html/group__sam__drivers__twi__group.html", "sam4n": "sam4n/html/group__sam__drivers__twi__group.html", "sam4s": "sam4s/html/group__sam__drivers__twi__group.html", "samg": "samg/html/group__sam__drivers__twi__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "TWI Two-Wire Interface service. Common API.", "id": "common.services.basic.twi#3", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "TWI - Two-Wire Interface - SAM implementation", "quickstart": {"sam3a": ["sam3a/html/twi_quickstart.html"], "sam3n": ["sam3n/html/twi_quickstart.html"], "sam3s": ["sam3s/html/twi_quickstart.html"], "sam3sd": ["sam3sd/html/twi_quickstart.html"], "sam3u": ["sam3u/html/twi_quickstart.html"], "sam3x": ["sam3x/html/twi_quickstart.html"], "sam4c": ["sam4c/html/twi_quickstart.html"], "sam4cm": ["sam4cm/html/twi_quickstart.html"], "sam4cp": ["sam4cp/html/twi_quickstart.html"], "sam4e": ["sam4e/html/twi_quickstart.html"], "sam4n": ["sam4n/html/twi_quickstart.html"], "sam4s": ["sam4s/html/twi_quickstart.html"], "samg": ["samg/html/twi_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__twi__group.html", "sam3n": "sam3n/html/group__twi__group.html", "sam3s": "sam3s/html/group__twi__group.html", "sam3sd": "sam3sd/html/group__twi__group.html", "sam3u": "sam3u/html/group__twi__group.html", "sam3x": "sam3x/html/group__twi__group.html", "sam4c": "sam4c/html/group__twi__group.html", "sam4cm": "sam4cm/html/group__twi__group.html", "sam4cp": "sam4cp/html/group__twi__group.html", "sam4e": "sam4e/html/group__twi__group.html", "sam4n": "sam4n/html/group__twi__group.html", "sam4s": "sam4s/html/group__twi__group.html", "samg": "samg/html/group__twi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The Universal Asynchronous Receiver Transmitter features a two-pin UART that can be used for communication and trace purposes and offers an ideal medium for in-situ programming solutions.", "id": "sam.drivers.uart", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "UART - Univ. Async Rec/Trans", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__uart__group.html", "sam3n": "sam3n/html/group__sam__drivers__uart__group.html", "sam3s": "sam3s/html/group__sam__drivers__uart__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__uart__group.html", "sam3u": "sam3u/html/group__sam__drivers__uart__group.html", "sam3x": "sam3x/html/group__sam__drivers__uart__group.html", "sam4c": "sam4c/html/group__sam__drivers__uart__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__uart__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__uart__group.html", "sam4e": "sam4e/html/group__sam__drivers__uart__group.html", "sam4n": "sam4n/html/group__sam__drivers__uart__group.html", "sam4s": "sam4s/html/group__sam__drivers__uart__group.html", "samg": "samg/html/group__sam__drivers__uart__group.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Core functions for the unit test framework.", "id": "common.utils.unit_test#sam", "mcus": ["sam"], "name": "Unit test framework - SAM implementation", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__test__suite__group.html", "sam3n": "sam3n/html/group__test__suite__group.html", "sam3s": "sam3s/html/group__test__suite__group.html", "sam3sd": "sam3sd/html/group__test__suite__group.html", "sam3u": "sam3u/html/group__test__suite__group.html", "sam3x": "sam3x/html/group__test__suite__group.html", "sam4c": "sam4c/html/group__test__suite__group.html", "sam4cm": "sam4cm/html/group__test__suite__group.html", "sam4cp": "sam4cp/html/group__test__suite__group.html", "sam4e": "sam4e/html/group__test__suite__group.html", "sam4l": "sam4l/html/group__test__suite__group.html", "sam4n": "sam4n/html/group__test__suite__group.html", "sam4s": "sam4s/html/group__test__suite__group.html", "sam4sp": "sam4sp/html/group__test__suite__group.html", "samg": "samg/html/group__test__suite__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.", "id": "common.services.basic.serial#2", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "USART - Serial interface - SAM implementation for devices with both UART and USART", "quickstart": {"sam3a": ["sam3a/html/serial_quickstart.html"], "sam3n": ["sam3n/html/serial_quickstart.html"], "sam3s": ["sam3s/html/serial_quickstart.html"], "sam3sd": ["sam3sd/html/serial_quickstart.html"], "sam3u": ["sam3u/html/serial_quickstart.html"], "sam3x": ["sam3x/html/serial_quickstart.html"], "sam4c": ["sam4c/html/serial_quickstart.html"], "sam4cm": ["sam4cm/html/serial_quickstart.html"], "sam4cp": ["sam4cp/html/serial_quickstart.html"], "sam4e": ["sam4e/html/serial_quickstart.html"], "sam4n": ["sam4n/html/serial_quickstart.html"], "sam4s": ["sam4s/html/serial_quickstart.html"], "samg": ["samg/html/serial_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__serial__group.html", "sam3n": "sam3n/html/group__serial__group.html", "sam3s": "sam3s/html/group__serial__group.html", "sam3sd": "sam3sd/html/group__serial__group.html", "sam3u": "sam3u/html/group__serial__group.html", "sam3x": "sam3x/html/group__serial__group.html", "sam4c": "sam4c/html/group__serial__group.html", "sam4cm": "sam4cm/html/group__serial__group.html", "sam4cp": "sam4cp/html/group__serial__group.html", "sam4e": "sam4e/html/group__serial__group.html", "sam4n": "sam4n/html/group__serial__group.html", "sam4s": "sam4s/html/group__serial__group.html", "samg": "samg/html/group__serial__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The Universal Synchronous Asynchronous Receiver Transceiver provides one full duplex universal synchronous asynchronous serial link.", "id": "sam.drivers.usart", "mcus": ["sam"], "name": "USART - Univ. Syn Async Rec/Trans", "quickstart": {"sam3a": ["sam3a/html/sam_usart_quickstart.html"], "sam3n": ["sam3n/html/sam_usart_quickstart.html"], "sam3s": ["sam3s/html/sam_usart_quickstart.html"], "sam3sd": ["sam3sd/html/sam_usart_quickstart.html"], "sam3u": ["sam3u/html/sam_usart_quickstart.html"], "sam3x": ["sam3x/html/sam_usart_quickstart.html"], "sam4c": ["sam4c/html/sam_usart_quickstart.html"], "sam4cm": ["sam4cm/html/sam_usart_quickstart.html"], "sam4cp": ["sam4cp/html/sam_usart_quickstart.html"], "sam4e": ["sam4e/html/sam_usart_quickstart.html"], "sam4l": ["sam4l/html/sam_usart_quickstart.html"], "sam4n": ["sam4n/html/sam_usart_quickstart.html"], "sam4s": ["sam4s/html/sam_usart_quickstart.html"], "sam4sp": ["sam4sp/html/sam_usart_quickstart.html"], "samg": ["samg/html/sam_usart_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__usart__group.html", "sam3n": "sam3n/html/group__sam__drivers__usart__group.html", "sam3s": "sam3s/html/group__sam__drivers__usart__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__usart__group.html", "sam3u": "sam3u/html/group__sam__drivers__usart__group.html", "sam3x": "sam3x/html/group__sam__drivers__usart__group.html", "sam4c": "sam4c/html/group__sam__drivers__usart__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__usart__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__usart__group.html", "sam4e": "sam4e/html/group__sam__drivers__usart__group.html", "sam4l": "sam4l/html/group__sam__drivers__usart__group.html", "sam4n": "sam4n/html/group__sam__drivers__usart__group.html", "sam4s": "sam4s/html/group__sam__drivers__usart__group.html", "sam4sp": "sam4sp/html/group__sam__drivers__usart__group.html", "samg": "samg/html/group__sam__drivers__usart__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "USART Hardware Handshaking Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.usart.usart_hard_handshaking_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "USART IrDA Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.usart.usart_irda_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "USART RS485 Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.usart.usart_rs485_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "USART Serial Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.usart.usart_serial_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "USART Synchronous Example for SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.usart.usart_synchronous_example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "The component manages a disk on a volatile memory (internal RAM). This can be connected to a File System management or a USB Device Mass Storage Interface via the service Memory Control Access.", "id": "common.components.memory.virtual_mem", "mcus": ["uc3", "xmega", "sam", "samd21", "samr21"], "name": "Virtual Memory in RAM", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__common__components__memory__virtual__mem.html", "sam3n": "sam3n/html/group__group__common__components__memory__virtual__mem.html", "sam3s": "sam3s/html/group__group__common__components__memory__virtual__mem.html", "sam3sd": "sam3sd/html/group__group__common__components__memory__virtual__mem.html", "sam3u": "sam3u/html/group__group__common__components__memory__virtual__mem.html", "sam3x": "sam3x/html/group__group__common__components__memory__virtual__mem.html", "sam4c": "sam4c/html/group__group__common__components__memory__virtual__mem.html", "sam4cm": "sam4cm/html/group__group__common__components__memory__virtual__mem.html", "sam4cp": "sam4cp/html/group__group__common__components__memory__virtual__mem.html", "sam4e": "sam4e/html/group__group__common__components__memory__virtual__mem.html", "sam4l": "sam4l/html/group__group__common__components__memory__virtual__mem.html", "sam4n": "sam4n/html/group__group__common__components__memory__virtual__mem.html", "sam4s": "sam4s/html/group__group__common__components__memory__virtual__mem.html", "sam4sp": "sam4sp/html/group__group__common__components__memory__virtual__mem.html", "samd21": "samd21/html/group__group__common__components__memory__virtual__mem.html", "samg": "samg/html/group__group__common__components__memory__virtual__mem.html", "samr21": "samr21/html/group__group__common__components__memory__virtual__mem.html", "uc3a": "uc3a/html/group__group__common__components__memory__virtual__mem.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__components__memory__virtual__mem.html", "uc3b": "uc3b/html/group__group__common__components__memory__virtual__mem.html", "uc3c": "uc3c/html/group__group__common__components__memory__virtual__mem.html", "uc3d": "uc3d/html/group__group__common__components__memory__virtual__mem.html", "uc3l": "uc3l/html/group__group__common__components__memory__virtual__mem.html", "xmegaa": "xmegaa/html/group__group__common__components__memory__virtual__mem.html", "xmegaau": "xmegaau/html/group__group__common__components__memory__virtual__mem.html", "xmegab": "xmegab/html/group__group__common__components__memory__virtual__mem.html", "xmegac": "xmegac/html/group__group__common__components__memory__virtual__mem.html", "xmegad": "xmegad/html/group__group__common__components__memory__virtual__mem.html", "xmegae": "xmegae/html/group__group__common__components__memory__virtual__mem.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4CP16BMB.", "id": "sam.drivers.wdt.example.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "Watchdog Timer Example on SAM4CP16BMB", "quickstart": {}, "type": "application", "uri": {"sam4cp": "sam.drivers.wdt.example.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "The Watchdog Timer can be used to prevent system lock-up if the software becomes trapped in a deadlock. It features a 12-bit down counter that allows a watchdog period of up to 16 seconds (slow clock at 32.768 kHz).", "id": "sam.drivers.wdt#sam3", "mcus": ["sam3", "sam4s", "sam4e", "sam4n", "sam4c", "sam4cm", "sam4cp", "samg"], "name": "WDT - Watchdog Timer", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__wdt__group.html", "sam3n": "sam3n/html/group__sam__drivers__wdt__group.html", "sam3s": "sam3s/html/group__sam__drivers__wdt__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__wdt__group.html", "sam3u": "sam3u/html/group__sam__drivers__wdt__group.html", "sam3x": "sam3x/html/group__sam__drivers__wdt__group.html", "sam4c": "sam4c/html/group__sam__drivers__wdt__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__wdt__group.html", "sam4cp": "sam4cp/html/group__sam__drivers__wdt__group.html", "sam4e": "sam4e/html/group__sam__drivers__wdt__group.html", "sam4n": "sam4n/html/group__sam__drivers__wdt__group.html", "sam4s": "sam4s/html/group__sam__drivers__wdt__group.html", "samg": "samg/html/group__sam__drivers__wdt__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CP16BMB"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4cp16bmb", "mcus": ["atsam4cp16b_0"], "name": "WDT unit Test for SAM4CP16B", "quickstart": {}, "type": "unit-test", "uri": {"sam4cp": "sam.drivers.wdt.unit_tests.sam4cp16bmb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "The Analog Comparator compares two voltages and the result of this comparison gives a compare output. The user can select a high-speed or low-power option. Additionally, the hysteresis level, edge detection and polarity are configurable.", "id": "sam.drivers.acc", "mcus": ["sam3s", "sam3sd8", "sam4s", "sam4e"], "name": "ACC - Analog Comparator Controller", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__sam__drivers__acc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__acc__group.html", "sam4e": "sam4e/html/group__sam__drivers__acc__group.html", "sam4s": "sam4s/html/group__sam__drivers__acc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACC peripheral.", "id": "sam.drivers.acc.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "ACC Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.acc.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Low-level driver for the MMA7341L Accelerometer.", "id": "sam.components.sensor.mma7341l", "mcus": ["sam3", "sam4s"], "name": "Accelerometer MMA7341L", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__mma7341l__sensor__group.html", "sam3n": "sam3n/html/group__mma7341l__sensor__group.html", "sam3s": "sam3s/html/group__mma7341l__sensor__group.html", "sam3sd": "sam3sd/html/group__mma7341l__sensor__group.html", "sam3u": "sam3u/html/group__mma7341l__sensor__group.html", "sam3x": "sam3x/html/group__mma7341l__sensor__group.html", "sam4s": "sam4s/html/group__mma7341l__sensor__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "ADC example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.adc.adc_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "ADC Temperature Sensor example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.adc.adc_temp_sensor_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "ADC threshold wake-up example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.adc.adc_threshold_wakeup_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": [], "description": "A simple example using the ADS7843 component and ILI9325 lcd controller.", "id": "sam.services.resistive_touch.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "ADS7843 LCD Touch Controller example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.services.resistive_touch.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "", "id": "config.common.services.qtouch.generic.sam#qtouch_method", "mcus": ["sam3", "sam4s"], "name": "Atmel QTouch Library for QTouch Method in SAM devices", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__common__services__qtouch.html", "sam3n": "sam3n/html/group__group__common__services__qtouch.html", "sam3s": "sam3s/html/group__group__common__services__qtouch.html", "sam3sd": "sam3sd/html/group__group__common__services__qtouch.html", "sam3u": "sam3u/html/group__group__common__services__qtouch.html", "sam3x": "sam3x/html/group__group__common__services__qtouch.html", "sam4s": "sam4s/html/group__group__common__services__qtouch.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Basic FreeRTOS Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.freertos.sam_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Basic SD/MMC/SDIO card example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.components.memory.sd_mmc.example1.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Chipid example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.chipid.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3S-EK"], "category": [], "description": "Basic Cortex-M3 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm3_cmsis_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "CMSIS Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.utils.cmsis.cm3_cmsis_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3S-EK"], "category": [], "description": "The demonstration program makes two buttons as the NVIC trigger. Each button would trigger one LED flash. When an NVIC interrupt preemptive happened, both the LEDs are on.", "id": "sam.utils.cmsis.cm3_nvic_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "CMSIS NVIC example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.utils.cmsis.cm3_nvic_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Common API for Clocks Control / Example 1 for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.basic.clock.example1.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Common API for Clocks Control / Example 2 for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.basic.clock.example2.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Common API for Clocks Control / Example 3 for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.basic.clock.example3.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3S-EK"], "category": [], "description": "Basic Cortex-M3 bit banding example.", "id": "sam.utils.cmsis.cm3_bit_banding_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Cortex-M bit banding example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.utils.cmsis.cm3_bit_banding_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The CRCCU integrates a dedicated Cyclic Redundancy Check (CRC) engine. When configured and activated, this CRC engine performs a checksum computation on a Memory Area. CRC computation is performed from the LSB to MSB bit. Three different polynomials are available CCIT802.3, CASTAGNOLI and CCIT16.", "id": "sam.drivers.crccu", "mcus": ["sam3s", "sam3sd8", "sam4s", "sam4l"], "name": "CRCCU - Cyclic Redundancy Check Calculation Unit", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__sam__drivers__crccu__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__crccu__group.html", "sam4l": "sam4l/html/group__sam__drivers__crccu__group.html", "sam4s": "sam4s/html/group__sam__drivers__crccu__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "CRCCU example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.crccu.crccu_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "DAC Sinewave Example on SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.dacc.sinewave_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "The Digital-to-Analog Converter Controller offers up to 2 analog outputs, making it possible for the digital-to-analog conversion to drive up to 2 independent analog lines.", "id": "sam.drivers.dacc", "mcus": ["sam3x", "sam3a", "sam3s8", "sam3sd8", "atsam3n1b", "atsam3n1c", "atsam3n2b", "atsam3n2c", "atsam3n4b", "atsam3n4c", "atsam3s1b", "atsam3s1c", "atsam3s2b", "atsam3s2c", "atsam3s4b", "atsam3s4c", "sam4s", "sam4l", "sam4e", "sam4n"], "name": "DACC - Digital-to-Analog Converter", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__drivers__dacc__group.html", "sam3n": "sam3n/html/group__sam__drivers__dacc__group.html", "sam3s": "sam3s/html/group__sam__drivers__dacc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__dacc__group.html", "sam3x": "sam3x/html/group__sam__drivers__dacc__group.html", "sam4e": "sam4e/html/group__sam__drivers__dacc__group.html", "sam4l": "sam4l/html/group__sam__drivers__dacc__group.html", "sam4n": "sam4n/html/group__sam__drivers__dacc__group.html", "sam4s": "sam4s/html/group__sam__drivers__dacc__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Low-level driver for the AAT31XX LCD backlight controller.", "id": "sam.components.display.aat31xx", "mcus": ["sam3", "sam4s", "sam4e"], "name": "Display - AAT31XX Backlight Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__aat31xx__display__group.html", "sam3n": "sam3n/html/group__aat31xx__display__group.html", "sam3s": "sam3s/html/group__aat31xx__display__group.html", "sam3sd": "sam3sd/html/group__aat31xx__display__group.html", "sam3u": "sam3u/html/group__aat31xx__display__group.html", "sam3x": "sam3x/html/group__aat31xx__display__group.html", "sam4e": "sam4e/html/group__aat31xx__display__group.html", "sam4s": "sam4s/html/group__aat31xx__display__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Low-level driver for the ADS7843 LCD Touch controller.", "id": "sam.components.resistive_touch.ads7843", "mcus": ["sam3", "sam4s", "sam4e"], "name": "Display - ADS7843 Touch Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__component__ads7843__group.html", "sam3n": "sam3n/html/group__sam__component__ads7843__group.html", "sam3s": "sam3s/html/group__sam__component__ads7843__group.html", "sam3sd": "sam3sd/html/group__sam__component__ads7843__group.html", "sam3u": "sam3u/html/group__sam__component__ads7843__group.html", "sam3x": "sam3x/html/group__sam__component__ads7843__group.html", "sam4e": "sam4e/html/group__sam__component__ads7843__group.html", "sam4s": "sam4s/html/group__sam__component__ads7843__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "This service offers resistive touch support for all supported touch components. In addition it offers calibration and a callback function for the application.", "id": "sam.services.resistive_touch", "mcus": ["sam3", "sam4s", "sam4e"], "name": "Display - Generic Resistive Touch Service", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__services__rtouch__group.html", "sam3n": "sam3n/html/group__sam__services__rtouch__group.html", "sam3s": "sam3s/html/group__sam__services__rtouch__group.html", "sam3sd": "sam3sd/html/group__sam__services__rtouch__group.html", "sam3u": "sam3u/html/group__sam__services__rtouch__group.html", "sam3x": "sam3x/html/group__sam__services__rtouch__group.html", "sam4e": "sam4e/html/group__sam__services__rtouch__group.html", "sam4s": "sam4s/html/group__sam__services__rtouch__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Low-level driver for the ILI9225 LCD controller.", "id": "sam.components.display.ili9225", "mcus": ["sam3", "sam4s"], "name": "Display - ILI9225 LCD Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__ili9225__display__group.html", "sam3n": "sam3n/html/group__ili9225__display__group.html", "sam3s": "sam3s/html/group__ili9225__display__group.html", "sam3sd": "sam3sd/html/group__ili9225__display__group.html", "sam3u": "sam3u/html/group__ili9225__display__group.html", "sam3x": "sam3x/html/group__ili9225__display__group.html", "sam4s": "sam4s/html/group__ili9225__display__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Drivers RTC Example for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.rtc.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "Driver for the AT24C series EEPROM memories. It provides functions for initialization and read/write operations. Common implementation for UC3, XMEGA and SAM.", "id": "common.components.memory.eeprom.at24cxx", "mcus": ["sam3", "sam4s", "sam4c", "sam4cm"], "name": "EEPROM AT24CXX", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam3n": "sam3n/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam3s": "sam3s/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam3sd": "sam3sd/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam3u": "sam3u/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam3x": "sam3x/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam4c": "sam4c/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam4cm": "sam4cm/html/group__common__components__memory__eeprom__at24cxx__group.html", "sam4s": "sam4s/html/group__common__components__memory__eeprom__at24cxx__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK"], "category": [], "description": "FatFS example for SAM3S_EK, the file system will be created on the NAND Flash and the external DataFlash AT45DBX if it's connented.", "id": "common.services.fs.fatfs.access_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "FatFS example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.fs.fatfs.access_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Flash efc unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.services.flash.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Flash Program Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.services.flash.program_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Flash Read Unique Id Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.services.flash.read.unique.id_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "FreeRTOS USART Interface Layer for SAM3S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "common.services.freertos_sam_usart.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3S-EK"], "category": [], "description": "Switch between various system clock sources and prescalers at run time.", "id": "sam.applications.getting-started.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Getting Started for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.applications.getting-started.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "System font for the graphical library. This driver provides a low-level static system font to use with displays. It is a light weight implementation graphical fonts, with limited flexibility. Excellent for printing system messages and debug output to a display. Is also typically used in less fancy graphical applications, where selections of fonts is not important, but rather low flash and RAM footprint.", "id": "common.services.gfx.font", "mcus": ["xmega", "uc3", "sam3", "sam4s"], "name": "GFX Color - System Font", "quickstart": {"sam3a": ["sam3a/html/gfx_quickstart.html"], "sam3n": ["sam3n/html/gfx_quickstart.html"], "sam3s": ["sam3s/html/gfx_quickstart.html"], "sam3sd": ["sam3sd/html/gfx_quickstart.html"], "sam3u": ["sam3u/html/gfx_quickstart.html"], "sam3x": ["sam3x/html/gfx_quickstart.html"], "sam4s": ["sam4s/html/gfx_quickstart.html"], "uc3a": ["uc3a/html/gfx_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/gfx_quickstart.html"], "uc3b": ["uc3b/html/gfx_quickstart.html"], "uc3c": ["uc3c/html/gfx_quickstart.html"], "uc3d": ["uc3d/html/gfx_quickstart.html"], "uc3l": ["uc3l/html/gfx_quickstart.html"], "xmegaa": ["xmegaa/html/gfx_quickstart.html"], "xmegaau": ["xmegaau/html/gfx_quickstart.html"], "xmegab": ["xmegab/html/gfx_quickstart.html"], "xmegac": ["xmegac/html/gfx_quickstart.html"], "xmegad": ["xmegad/html/gfx_quickstart.html"], "xmegae": ["xmegae/html/gfx_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__gfx__sysfont.html", "sam3n": "sam3n/html/group__gfx__sysfont.html", "sam3s": "sam3s/html/group__gfx__sysfont.html", "sam3sd": "sam3sd/html/group__gfx__sysfont.html", "sam3u": "sam3u/html/group__gfx__sysfont.html", "sam3x": "sam3x/html/group__gfx__sysfont.html", "sam4s": "sam4s/html/group__gfx__sysfont.html", "uc3a": "uc3a/html/group__gfx__sysfont.html", "uc3a3_a4": "uc3a3_a4/html/group__gfx__sysfont.html", "uc3b": "uc3b/html/group__gfx__sysfont.html", "uc3c": "uc3c/html/group__gfx__sysfont.html", "uc3d": "uc3d/html/group__gfx__sysfont.html", "uc3l": "uc3l/html/group__gfx__sysfont.html", "xmegaa": "xmegaa/html/group__gfx__sysfont.html", "xmegaau": "xmegaau/html/group__gfx__sysfont.html", "xmegab": "xmegab/html/group__gfx__sysfont.html", "xmegac": "xmegac/html/group__gfx__sysfont.html", "xmegad": "xmegad/html/group__gfx__sysfont.html", "xmegae": "xmegae/html/group__gfx__sysfont.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "GPBR unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.gpbr.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "Driver for general purpose I/O pins. Provides functions for initializing IO pins as input or output, and for reading, or setting/clearing/toggling pins. Common API. Deprecated; use common IOPORT service instead.", "id": "common.services.basic.gpio#1", "mcus": ["sam3"], "name": "GPIO - General purpose Input/Output", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__gpio__group.html", "sam3n": "sam3n/html/group__gpio__group.html", "sam3s": "sam3s/html/group__gpio__group.html", "sam3sd": "sam3sd/html/group__gpio__group.html", "sam3u": "sam3u/html/group__gpio__group.html", "sam3x": "sam3x/html/group__gpio__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "Graphical Widget library toolkit (WTK) for the creation of interactive GUI widgets using the high level graphics library service.", "id": "common.services.wtk", "mcus": ["xmega", "uc3", "sam3", "sam4s"], "name": "Graphical Widget Library Toolkit", "quickstart": {"sam3a": ["sam3a/html/gfx_quickstart.html"], "sam3n": ["sam3n/html/gfx_quickstart.html"], "sam3s": ["sam3s/html/gfx_quickstart.html"], "sam3sd": ["sam3sd/html/gfx_quickstart.html"], "sam3u": ["sam3u/html/gfx_quickstart.html"], "sam3x": ["sam3x/html/gfx_quickstart.html"], "sam4s": ["sam4s/html/gfx_quickstart.html"], "uc3a": ["uc3a/html/gfx_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/gfx_quickstart.html"], "uc3b": ["uc3b/html/gfx_quickstart.html"], "uc3c": ["uc3c/html/gfx_quickstart.html"], "uc3d": ["uc3d/html/gfx_quickstart.html"], "uc3l": ["uc3l/html/gfx_quickstart.html"], "xmegaa": ["xmegaa/html/gfx_quickstart.html"], "xmegaau": ["xmegaau/html/gfx_quickstart.html"], "xmegac": ["xmegac/html/gfx_quickstart.html"], "xmegad": ["xmegad/html/gfx_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__gfx__group.html", "sam3n": "sam3n/html/group__gfx__group.html", "sam3s": "sam3s/html/group__gfx__group.html", "sam3sd": "sam3sd/html/group__gfx__group.html", "sam3u": "sam3u/html/group__gfx__group.html", "sam3x": "sam3x/html/group__gfx__group.html", "sam4s": "sam4s/html/group__gfx__group.html", "uc3a": "uc3a/html/group__gfx__group.html", "uc3a3_a4": "uc3a3_a4/html/group__gfx__group.html", "uc3b": "uc3b/html/group__gfx__group.html", "uc3c": "uc3c/html/group__gfx__group.html", "uc3d": "uc3d/html/group__gfx__group.html", "uc3l": "uc3l/html/group__gfx__group.html", "xmegaa": "xmegaa/html/group__gfx__group.html", "xmegaau": "xmegaau/html/group__gfx__group.html", "xmegac": "xmegac/html/group__gfx__group.html", "xmegad": "xmegad/html/group__gfx__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "This driver interfaces the HSMCI (MultiMedia Card Interface) module. It will add functions for SD/MMC card reading, writing and management.", "id": "sam.drivers.hsmci#2", "mcus": ["sam3sd", "sam3s", "sam4s", "sam4e"], "name": "High Speed Multimedia Card Interface", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__sam__drivers__hsmci.html", "sam3sd": "sam3sd/html/group__sam__drivers__hsmci.html", "sam4e": "sam4e/html/group__sam__drivers__hsmci.html", "sam4s": "sam4s/html/group__sam__drivers__hsmci.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": ["Graphics"], "description": "This example demonstrates how to configure the ILI9325 LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.ili9325.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "ILI9325 LCD Controller example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.components.display.ili9325.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for ILI9325 driver.", "id": "sam.components.display.ili9325.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "ili9325 unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.components.display.ili9325.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "This is the low level interface driver for ILI9341 display controller. This driver is most commonly used in a combination with a display driver.", "id": "common.components.display_controller.ili9341", "mcus": ["uc3", "xmega", "sam3", "sam4s"], "name": "LCD - ILI9341 Display Controller", "quickstart": {"sam3a": ["sam3a/html/common_ili9341_qs.html"], "sam3n": ["sam3n/html/common_ili9341_qs.html"], "sam3s": ["sam3s/html/common_ili9341_qs.html"], "sam3sd": ["sam3sd/html/common_ili9341_qs.html"], "sam3u": ["sam3u/html/common_ili9341_qs.html"], "sam3x": ["sam3x/html/common_ili9341_qs.html"], "sam4s": ["sam4s/html/common_ili9341_qs.html"], "uc3a": ["uc3a/html/common_ili9341_qs.html"], "uc3a3_a4": ["uc3a3_a4/html/common_ili9341_qs.html"], "uc3b": ["uc3b/html/common_ili9341_qs.html"], "uc3c": ["uc3c/html/common_ili9341_qs.html"], "uc3d": ["uc3d/html/common_ili9341_qs.html"], "uc3l": ["uc3l/html/common_ili9341_qs.html"], "xmegaa": ["xmegaa/html/common_ili9341_qs.html"], "xmegaau": ["xmegaau/html/common_ili9341_qs.html"], "xmegab": ["xmegab/html/common_ili9341_qs.html"], "xmegac": ["xmegac/html/common_ili9341_qs.html"], "xmegad": ["xmegad/html/common_ili9341_qs.html"], "xmegae": ["xmegae/html/common_ili9341_qs.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__ili9341__group.html", "sam3n": "sam3n/html/group__ili9341__group.html", "sam3s": "sam3s/html/group__ili9341__group.html", "sam3sd": "sam3sd/html/group__ili9341__group.html", "sam3u": "sam3u/html/group__ili9341__group.html", "sam3x": "sam3x/html/group__ili9341__group.html", "sam4s": "sam4s/html/group__ili9341__group.html", "uc3a": "uc3a/html/group__ili9341__group.html", "uc3a3_a4": "uc3a3_a4/html/group__ili9341__group.html", "uc3b": "uc3b/html/group__ili9341__group.html", "uc3c": "uc3c/html/group__ili9341__group.html", "uc3d": "uc3d/html/group__ili9341__group.html", "uc3l": "uc3l/html/group__ili9341__group.html", "xmegaa": "xmegaa/html/group__ili9341__group.html", "xmegaau": "xmegaau/html/group__ili9341__group.html", "xmegab": "xmegab/html/group__ili9341__group.html", "xmegac": "xmegac/html/group__ili9341__group.html", "xmegad": "xmegad/html/group__ili9341__group.html", "xmegae": "xmegae/html/group__ili9341__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3S-EK"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Low Power demo for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.applications.low_power.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Basic example of MATRIX on SAM3S-EK.", "id": "sam.drivers.matrix.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "MATRIX example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.matrix.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Component for communicating with maXTouch devices currently supporting the mXT143E. It provides functions for initialization and read/write operations at register level, and reading out touch events. Common implementation for UC3, XMEGA and SAM.", "id": "common.components.touch.mxt", "mcus": ["xmega", "uc3", "sam3", "sam4s"], "name": "maXTouch - mXT143E Controller", "quickstart": {"sam3a": ["sam3a/html/mxt_device_quickstart.html"], "sam3n": ["sam3n/html/mxt_device_quickstart.html"], "sam3s": ["sam3s/html/mxt_device_quickstart.html"], "sam3sd": ["sam3sd/html/mxt_device_quickstart.html"], "sam3u": ["sam3u/html/mxt_device_quickstart.html"], "sam3x": ["sam3x/html/mxt_device_quickstart.html"], "sam4s": ["sam4s/html/mxt_device_quickstart.html"], "uc3a": ["uc3a/html/mxt_device_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/mxt_device_quickstart.html"], "uc3b": ["uc3b/html/mxt_device_quickstart.html"], "uc3c": ["uc3c/html/mxt_device_quickstart.html"], "uc3d": ["uc3d/html/mxt_device_quickstart.html"], "uc3l": ["uc3l/html/mxt_device_quickstart.html"], "xmegaa": ["xmegaa/html/mxt_device_quickstart.html"], "xmegaau": ["xmegaau/html/mxt_device_quickstart.html"], "xmegab": ["xmegab/html/mxt_device_quickstart.html"], "xmegac": ["xmegac/html/mxt_device_quickstart.html"], "xmegad": ["xmegad/html/mxt_device_quickstart.html"], "xmegae": ["xmegae/html/mxt_device_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__mxt__group.html", "sam3n": "sam3n/html/group__mxt__group.html", "sam3s": "sam3s/html/group__mxt__group.html", "sam3sd": "sam3sd/html/group__mxt__group.html", "sam3u": "sam3u/html/group__mxt__group.html", "sam3x": "sam3x/html/group__mxt__group.html", "sam4s": "sam4s/html/group__mxt__group.html", "uc3a": "uc3a/html/group__mxt__group.html", "uc3a3_a4": "uc3a3_a4/html/group__mxt__group.html", "uc3b": "uc3b/html/group__mxt__group.html", "uc3c": "uc3c/html/group__mxt__group.html", "uc3d": "uc3d/html/group__mxt__group.html", "uc3l": "uc3l/html/group__mxt__group.html", "xmegaa": "xmegaa/html/group__mxt__group.html", "xmegaau": "xmegaau/html/group__mxt__group.html", "xmegab": "xmegab/html/group__mxt__group.html", "xmegac": "xmegac/html/group__mxt__group.html", "xmegad": "xmegad/html/group__mxt__group.html", "xmegae": "xmegae/html/group__mxt__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Low-level driver for the MCP9800/1/2/3 Temperature Sensor.", "id": "common.components.sensors.mcp980x", "mcus": ["sam3", "sam4s"], "name": "MCP980X Temperature Sensor", "quickstart": {"sam3a": ["sam3a/html/common_component_sensors_mcp980x_quickstart.html"], "sam3n": ["sam3n/html/common_component_sensors_mcp980x_quickstart.html"], "sam3s": ["sam3s/html/common_component_sensors_mcp980x_quickstart.html"], "sam3sd": ["sam3sd/html/common_component_sensors_mcp980x_quickstart.html"], "sam3u": ["sam3u/html/common_component_sensors_mcp980x_quickstart.html"], "sam3x": ["sam3x/html/common_component_sensors_mcp980x_quickstart.html"], "sam4s": ["sam4s/html/common_component_sensors_mcp980x_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__common__component__sensors__mcp980x__group.html", "sam3n": "sam3n/html/group__common__component__sensors__mcp980x__group.html", "sam3s": "sam3s/html/group__common__component__sensors__mcp980x__group.html", "sam3sd": "sam3sd/html/group__common__component__sensors__mcp980x__group.html", "sam3u": "sam3u/html/group__common__component__sensors__mcp980x__group.html", "sam3x": "sam3x/html/group__common__component__sensors__mcp980x__group.html", "sam4s": "sam4s/html/group__common__component__sensors__mcp980x__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "NAND Flash component unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "common.components.memory.nand_flash.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "NAND Flash component operation. Provides common APIs for SAM devices.", "id": "common.components.memory.nand_flash#1", "mcus": ["sam3s", "sam3sd8"], "name": "NAND Flash on EBI", "quickstart": {"sam3s": ["sam3s/html/common_components_nand_flash_quickstart.html"], "sam3sd": ["sam3sd/html/common_components_nand_flash_quickstart.html"]}, "type": "module", "uri": {"sam3s": "sam3s/html/group__common__components__nand__flash__group.html", "sam3sd": "sam3sd/html/group__common__components__nand__flash__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam3s_ek", "mcus": ["atsam3s4c"], "name": "NAND Flash on EBI Example 1 for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.components.memory.nand_flash.example1.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam3s_ek", "mcus": ["atsam3s4c"], "name": "NAND Flash on EBI Example 2 for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.components.memory.nand_flash.example2.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#no_extmem#3", "mcus": ["sam3", "sam4s"], "name": "NVM - Non volatile memory access", "quickstart": {"sam3a": ["sam3a/html/common_nvm_quickstart.html"], "sam3n": ["sam3n/html/common_nvm_quickstart.html"], "sam3s": ["sam3s/html/common_nvm_quickstart.html"], "sam3sd": ["sam3sd/html/common_nvm_quickstart.html"], "sam3u": ["sam3u/html/common_nvm_quickstart.html"], "sam3x": ["sam3x/html/common_nvm_quickstart.html"], "sam4s": ["sam4s/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__nvm__group.html", "sam3n": "sam3n/html/group__nvm__group.html", "sam3s": "sam3s/html/group__nvm__group.html", "sam3sd": "sam3sd/html/group__nvm__group.html", "sam3u": "sam3u/html/group__nvm__group.html", "sam3x": "sam3x/html/group__nvm__group.html", "sam4s": "sam4s/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "NVM example for sam4s16c on SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.drivers.nvm.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Sensors"], "description": "Low-level driver for the OV7740 CMOS image sensor.", "id": "sam.components.cmos_image_sensor.ov7740", "mcus": ["sam3s", "sam4s"], "name": "OV7740 CMOS image sensor", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__ov7740__cmos__image__sensor__group.html", "sam4s": "sam4s/html/group__ov7740__cmos__image__sensor__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Peripheral Control FreeRTOS Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.freertos.peripheral_control.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Peripheral DMA Controller Example on SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.pdc.pdc_uart_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.alternate_function_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PIO Alternate Function Example for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.pio.alternate_function_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.capture_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PIO Capture Example for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.pio.capture_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PMC clock failure detection example for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M3 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PMC clock switching for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.pmc.pmc_clock_switching_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PMC unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.pmc.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Clocks"], "description": "This example will show how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PWM LED example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.pwm.pwm_led_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on SAM3S-EK.", "id": "sam.drivers.pwm.pwm_sync_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PWM SYNC example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.pwm.pwm_sync_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "PWM unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.pwm.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the board of Atmel SAM devices.", "id": "common.services.qtouch.generic.sam.qtouch.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "QTouch Method Example Application on SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.qtouch.generic.sam.qtouch.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Sensors"], "description": "Low-level driver for the RE200B PIR sensor.", "id": "sam.components.pir_sensor.re200b", "mcus": ["sam3s", "sam4s"], "name": "RE200B PIR sensor", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__re200b__pir__sensor__group.html", "sam4s": "sam4s/html/group__re200b__pir__sensor__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "RSTC unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.rstc.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Basic example of RTT on SAM3S-EK.", "id": "sam.drivers.rtt.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "RTT example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.rtt.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "SD/MMC card example for SAM3S_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "common.components.memory.sd_mmc.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam3s_ek", "mcus": ["atsam3s4c"], "name": "SD/MMC card example with FatFs for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.components.memory.sd_mmc.example2.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "SD/MMC stack for SD / MMC / SDIO cards. MCI interface is supported. This includes the basic functions to install, read and write a SD/SDIO/MMC card. This module in standalone is used mainly for SDIO application.", "id": "common.components.memory.sd_mmc#mci", "mcus": ["uc3a3_a4", "sam3sd", "sam3s", "sam4s", "sam3u", "sam3x", "sam4e", "sam", "uc3", "xmega"], "name": "SD/MMC stack on Multimedia Card interface", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__sd__mmc__stack__group.html", "sam3sd": "sam3sd/html/group__sd__mmc__stack__group.html", "sam3u": "sam3u/html/group__sd__mmc__stack__group.html", "sam4e": "sam4e/html/group__sd__mmc__stack__group.html", "sam4s": "sam4s/html/group__sd__mmc__stack__group.html", "uc3a3_a4": "uc3a3_a4/html/group__sd__mmc__stack__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "Enables Support for  USB communication", "id": "thirdparty.wireless.addons.sio2host#usb", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e"], "name": "Serial I/O - Host using USB", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__sio2host__usb.html", "sam3s": "sam3s/html/group__group__sio2host__usb.html", "sam3sd": "sam3sd/html/group__group__sio2host__usb.html", "sam3u": "sam3u/html/group__group__sio2host__usb.html", "sam3x": "sam3x/html/group__group__sio2host__usb.html", "sam4e": "sam4e/html/group__group__sio2host__usb.html", "sam4l": "sam4l/html/group__group__sio2host__usb.html", "sam4s": "sam4s/html/group__group__sio2host__usb.html", "uc3a": "uc3a/html/group__group__sio2host__usb.html", "uc3a3_a4": "uc3a3_a4/html/group__group__sio2host__usb.html", "uc3b": "uc3b/html/group__group__sio2host__usb.html", "uc3c": "uc3c/html/group__group__sio2host__usb.html", "uc3d": "uc3d/html/group__group__sio2host__usb.html", "uc3l": "uc3l/html/group__group__sio2host__usb.html", "xmegaau": "xmegaau/html/group__group__sio2host__usb.html", "xmegab": "xmegab/html/group__group__sio2host__usb.html", "xmegac": "xmegac/html/group__group__sio2host__usb.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.basic.usart_spi_master_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Smart card service API for communicating with smart card using ISO7816 protocol.", "id": "sam.services.smart_card#gpio", "mcus": ["sam3", "sam4s"], "name": "Smart Card - ISO7816 smart card using GPIO", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__services__smart__card__group.html", "sam3n": "sam3n/html/group__sam__services__smart__card__group.html", "sam3s": "sam3s/html/group__sam__services__smart__card__group.html", "sam3sd": "sam3sd/html/group__sam__services__smart__card__group.html", "sam3u": "sam3u/html/group__sam__services__smart__card__group.html", "sam3x": "sam3x/html/group__sam__services__smart__card__group.html", "sam4s": "sam4s/html/group__sam__services__smart__card__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "The External Bus Interface is designed to ensure the successful data transfer between several external devices and the Cortex-M based device.", "id": "sam.drivers.smc", "mcus": ["sam3s", "sam3sd", "sam3u", "sam3x", "sam4s", "sam4e", "sam4c", "sam4cm"], "name": "SMC - Static Memory Controller", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__sam__drivers__smc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__smc__group.html", "sam3u": "sam3u/html/group__sam__drivers__smc__group.html", "sam3x": "sam3x/html/group__sam__drivers__smc__group.html", "sam4c": "sam4c/html/group__sam__drivers__smc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__smc__group.html", "sam4e": "sam4e/html/group__sam__drivers__smc__group.html", "sam4s": "sam4s/html/group__sam__drivers__smc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "SPI Example for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.spi.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "SPI PDC Example for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.spi.spi_pdc_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "SPI unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.spi.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The Synchronous Serial Controller provides a synchronous communication link with external devices. It supports many serial synchronous communication protocols generally used in audio and telecom applications.", "id": "sam.drivers.ssc", "mcus": ["sam3s", "sam3sd8", "sam3u", "sam3x", "sam4s"], "name": "SSC - Synchronous Serial Controller", "quickstart": {}, "type": "module", "uri": {"sam3s": "sam3s/html/group__sam__drivers__ssc__group.html", "sam3sd": "sam3sd/html/group__sam__drivers__ssc__group.html", "sam3u": "sam3u/html/group__sam__drivers__ssc__group.html", "sam3x": "sam3x/html/group__sam__drivers__ssc__group.html", "sam4s": "sam4s/html/group__sam__drivers__ssc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "SSC unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.ssc.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "SUPC unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.supc.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#10", "mcus": ["sam3s"], "name": "System Clock Control - SAM3S implementation", "quickstart": {"sam3s": ["sam3s/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam3s": "sam3s/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "TC Capture Waveform Example on SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.tc.tc_capture_waveform_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "TWI SLAVE Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.twi.twi_slave_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USART Hardware Handshaking Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.usart.usart_hard_handshaking_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USART IrDA Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.usart.usart_irda_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USART ISO7816 Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.usart.usart_iso7816_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USART RS485 Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.usart.usart_rs485_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USART Serial Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.usart.usart_serial_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USART Synchronous Example for SAM3S_EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.usart.usart_synchronous_example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#composite", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Composite Device", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__group.html", "sam3s": "sam3s/html/group__udi__group.html", "sam3sd": "sam3sd/html/group__udi__group.html", "sam3u": "sam3u/html/group__udi__group.html", "sam3x": "sam3x/html/group__udi__group.html", "sam4c": "sam4c/html/group__udi__group.html", "sam4e": "sam4e/html/group__udi__group.html", "sam4l": "sam4l/html/group__udi__group.html", "sam4s": "sam4s/html/group__udi__group.html", "samd21": "samd21/html/group__udi__group.html", "samr21": "samr21/html/group__udi__group.html", "uc3a": "uc3a/html/group__udi__group.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__group.html", "uc3b": "uc3b/html/group__udi__group.html", "uc3c": "uc3c/html/group__udi__group.html", "uc3d": "uc3d/html/group__udi__group.html", "uc3l": "uc3l/html/group__udi__group.html", "xmegaau": "xmegaau/html/group__udi__group.html", "xmegab": "xmegab/html/group__udi__group.html", "xmegac": "xmegac/html/group__udi__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Composite Device CDC and MSC for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.composite.device.example.cdc_msc.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Composite Device HID keyboard and MSC for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Composite Device HID mouse and MSC for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.composite.device.example.hidms_msc.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#cdc", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device CDC", "quickstart": {"sam3a": ["sam3a/html/udi_cdc_quickstart.html"], "sam3s": ["sam3s/html/udi_cdc_quickstart.html"], "sam3sd": ["sam3sd/html/udi_cdc_quickstart.html"], "sam3u": ["sam3u/html/udi_cdc_quickstart.html"], "sam3x": ["sam3x/html/udi_cdc_quickstart.html"], "sam4c": ["sam4c/html/udi_cdc_quickstart.html"], "sam4e": ["sam4e/html/udi_cdc_quickstart.html"], "sam4l": ["sam4l/html/udi_cdc_quickstart.html"], "sam4s": ["sam4s/html/udi_cdc_quickstart.html"], "samd21": ["samd21/html/udi_cdc_quickstart.html"], "samr21": ["samr21/html/udi_cdc_quickstart.html"], "uc3a": ["uc3a/html/udi_cdc_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/udi_cdc_quickstart.html"], "uc3b": ["uc3b/html/udi_cdc_quickstart.html"], "uc3c": ["uc3c/html/udi_cdc_quickstart.html"], "uc3d": ["uc3d/html/udi_cdc_quickstart.html"], "uc3l": ["uc3l/html/udi_cdc_quickstart.html"], "xmegaau": ["xmegaau/html/udi_cdc_quickstart.html"], "xmegab": ["xmegab/html/udi_cdc_quickstart.html"], "xmegac": ["xmegac/html/udi_cdc_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__cdc__group.html", "sam3s": "sam3s/html/group__udi__cdc__group.html", "sam3sd": "sam3sd/html/group__udi__cdc__group.html", "sam3u": "sam3u/html/group__udi__cdc__group.html", "sam3x": "sam3x/html/group__udi__cdc__group.html", "sam4c": "sam4c/html/group__udi__cdc__group.html", "sam4e": "sam4e/html/group__udi__cdc__group.html", "sam4l": "sam4l/html/group__udi__cdc__group.html", "sam4s": "sam4s/html/group__udi__cdc__group.html", "samd21": "samd21/html/group__udi__cdc__group.html", "samr21": "samr21/html/group__udi__cdc__group.html", "uc3a": "uc3a/html/group__udi__cdc__group.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__cdc__group.html", "uc3b": "uc3b/html/group__udi__cdc__group.html", "uc3c": "uc3c/html/group__udi__cdc__group.html", "uc3d": "uc3d/html/group__udi__cdc__group.html", "uc3l": "uc3l/html/group__udi__cdc__group.html", "xmegaau": "xmegaau/html/group__udi__cdc__group.html", "xmegab": "xmegab/html/group__udi__cdc__group.html", "xmegac": "xmegac/html/group__udi__cdc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device CDC Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.cdc.device.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device CDC multiple Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.cdc.device.example2.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#cdc_stdio", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device CDC Standard I/O (stdio)", "quickstart": {"sam3a": ["sam3a/html/udi_cdc_quickstart.html"], "sam3s": ["sam3s/html/udi_cdc_quickstart.html"], "sam3sd": ["sam3sd/html/udi_cdc_quickstart.html"], "sam3u": ["sam3u/html/udi_cdc_quickstart.html"], "sam3x": ["sam3x/html/udi_cdc_quickstart.html"], "sam4c": ["sam4c/html/udi_cdc_quickstart.html"], "sam4e": ["sam4e/html/udi_cdc_quickstart.html"], "sam4l": ["sam4l/html/udi_cdc_quickstart.html"], "sam4s": ["sam4s/html/udi_cdc_quickstart.html"], "samd21": ["samd21/html/udi_cdc_quickstart.html"], "samr21": ["samr21/html/udi_cdc_quickstart.html"], "uc3a": ["uc3a/html/udi_cdc_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/udi_cdc_quickstart.html"], "uc3b": ["uc3b/html/udi_cdc_quickstart.html"], "uc3c": ["uc3c/html/udi_cdc_quickstart.html"], "uc3d": ["uc3d/html/udi_cdc_quickstart.html"], "uc3l": ["uc3l/html/udi_cdc_quickstart.html"], "xmegaau": ["xmegaau/html/udi_cdc_quickstart.html"], "xmegab": ["xmegab/html/udi_cdc_quickstart.html"], "xmegac": ["xmegac/html/udi_cdc_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__group__common__utils__stdio__stdio__usb.html", "sam3s": "sam3s/html/group__group__common__utils__stdio__stdio__usb.html", "sam3sd": "sam3sd/html/group__group__common__utils__stdio__stdio__usb.html", "sam3u": "sam3u/html/group__group__common__utils__stdio__stdio__usb.html", "sam3x": "sam3x/html/group__group__common__utils__stdio__stdio__usb.html", "sam4c": "sam4c/html/group__group__common__utils__stdio__stdio__usb.html", "sam4e": "sam4e/html/group__group__common__utils__stdio__stdio__usb.html", "sam4l": "sam4l/html/group__group__common__utils__stdio__stdio__usb.html", "sam4s": "sam4s/html/group__group__common__utils__stdio__stdio__usb.html", "samd21": "samd21/html/group__group__common__utils__stdio__stdio__usb.html", "samr21": "samr21/html/group__group__common__utils__stdio__stdio__usb.html", "uc3a": "uc3a/html/group__group__common__utils__stdio__stdio__usb.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__utils__stdio__stdio__usb.html", "uc3b": "uc3b/html/group__group__common__utils__stdio__stdio__usb.html", "uc3c": "uc3c/html/group__group__common__utils__stdio__stdio__usb.html", "uc3d": "uc3d/html/group__group__common__utils__stdio__stdio__usb.html", "uc3l": "uc3l/html/group__group__common__utils__stdio__stdio__usb.html", "xmegaau": "xmegaau/html/group__group__common__utils__stdio__stdio__usb.html", "xmegab": "xmegab/html/group__group__common__utils__stdio__stdio__usb.html", "xmegac": "xmegac/html/group__group__common__utils__stdio__stdio__usb.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device CDC unit tests for SAM3S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "common.services.usb.class.cdc.device.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#hid_generic", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device HID generic", "quickstart": {"sam3a": ["sam3a/html/udi_hid_generic_quickstart.html"], "sam3s": ["sam3s/html/udi_hid_generic_quickstart.html"], "sam3sd": ["sam3sd/html/udi_hid_generic_quickstart.html"], "sam3u": ["sam3u/html/udi_hid_generic_quickstart.html"], "sam3x": ["sam3x/html/udi_hid_generic_quickstart.html"], "sam4c": ["sam4c/html/udi_hid_generic_quickstart.html"], "sam4e": ["sam4e/html/udi_hid_generic_quickstart.html"], "sam4l": ["sam4l/html/udi_hid_generic_quickstart.html"], "sam4s": ["sam4s/html/udi_hid_generic_quickstart.html"], "samd21": ["samd21/html/udi_hid_generic_quickstart.html"], "samr21": ["samr21/html/udi_hid_generic_quickstart.html"], "uc3a": ["uc3a/html/udi_hid_generic_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/udi_hid_generic_quickstart.html"], "uc3b": ["uc3b/html/udi_hid_generic_quickstart.html"], "uc3c": ["uc3c/html/udi_hid_generic_quickstart.html"], "uc3d": ["uc3d/html/udi_hid_generic_quickstart.html"], "uc3l": ["uc3l/html/udi_hid_generic_quickstart.html"], "xmegaau": ["xmegaau/html/udi_hid_generic_quickstart.html"], "xmegab": ["xmegab/html/udi_hid_generic_quickstart.html"], "xmegac": ["xmegac/html/udi_hid_generic_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__hid__generic__group.html", "sam3s": "sam3s/html/group__udi__hid__generic__group.html", "sam3sd": "sam3sd/html/group__udi__hid__generic__group.html", "sam3u": "sam3u/html/group__udi__hid__generic__group.html", "sam3x": "sam3x/html/group__udi__hid__generic__group.html", "sam4c": "sam4c/html/group__udi__hid__generic__group.html", "sam4e": "sam4e/html/group__udi__hid__generic__group.html", "sam4l": "sam4l/html/group__udi__hid__generic__group.html", "sam4s": "sam4s/html/group__udi__hid__generic__group.html", "samd21": "samd21/html/group__udi__hid__generic__group.html", "samr21": "samr21/html/group__udi__hid__generic__group.html", "uc3a": "uc3a/html/group__udi__hid__generic__group.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__hid__generic__group.html", "uc3b": "uc3b/html/group__udi__hid__generic__group.html", "uc3c": "uc3c/html/group__udi__hid__generic__group.html", "uc3d": "uc3d/html/group__udi__hid__generic__group.html", "uc3l": "uc3l/html/group__udi__hid__generic__group.html", "xmegaau": "xmegaau/html/group__udi__hid__generic__group.html", "xmegab": "xmegab/html/group__udi__hid__generic__group.html", "xmegac": "xmegac/html/group__udi__hid__generic__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device HID Generic for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.hid.device.generic.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#hid_keyboard", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device HID keyboard", "quickstart": {"sam3a": ["sam3a/html/udi_hid_keyboard_quickstart.html"], "sam3s": ["sam3s/html/udi_hid_keyboard_quickstart.html"], "sam3sd": ["sam3sd/html/udi_hid_keyboard_quickstart.html"], "sam3u": ["sam3u/html/udi_hid_keyboard_quickstart.html"], "sam3x": ["sam3x/html/udi_hid_keyboard_quickstart.html"], "sam4c": ["sam4c/html/udi_hid_keyboard_quickstart.html"], "sam4e": ["sam4e/html/udi_hid_keyboard_quickstart.html"], "sam4l": ["sam4l/html/udi_hid_keyboard_quickstart.html"], "sam4s": ["sam4s/html/udi_hid_keyboard_quickstart.html"], "samd21": ["samd21/html/udi_hid_keyboard_quickstart.html"], "samr21": ["samr21/html/udi_hid_keyboard_quickstart.html"], "uc3a": ["uc3a/html/udi_hid_keyboard_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/udi_hid_keyboard_quickstart.html"], "uc3b": ["uc3b/html/udi_hid_keyboard_quickstart.html"], "uc3c": ["uc3c/html/udi_hid_keyboard_quickstart.html"], "uc3d": ["uc3d/html/udi_hid_keyboard_quickstart.html"], "uc3l": ["uc3l/html/udi_hid_keyboard_quickstart.html"], "xmegaau": ["xmegaau/html/udi_hid_keyboard_quickstart.html"], "xmegab": ["xmegab/html/udi_hid_keyboard_quickstart.html"], "xmegac": ["xmegac/html/udi_hid_keyboard_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__hid__keyboard__group.html", "sam3s": "sam3s/html/group__udi__hid__keyboard__group.html", "sam3sd": "sam3sd/html/group__udi__hid__keyboard__group.html", "sam3u": "sam3u/html/group__udi__hid__keyboard__group.html", "sam3x": "sam3x/html/group__udi__hid__keyboard__group.html", "sam4c": "sam4c/html/group__udi__hid__keyboard__group.html", "sam4e": "sam4e/html/group__udi__hid__keyboard__group.html", "sam4l": "sam4l/html/group__udi__hid__keyboard__group.html", "sam4s": "sam4s/html/group__udi__hid__keyboard__group.html", "samd21": "samd21/html/group__udi__hid__keyboard__group.html", "samr21": "samr21/html/group__udi__hid__keyboard__group.html", "uc3a": "uc3a/html/group__udi__hid__keyboard__group.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__hid__keyboard__group.html", "uc3b": "uc3b/html/group__udi__hid__keyboard__group.html", "uc3c": "uc3c/html/group__udi__hid__keyboard__group.html", "uc3d": "uc3d/html/group__udi__hid__keyboard__group.html", "uc3l": "uc3l/html/group__udi__hid__keyboard__group.html", "xmegaau": "xmegaau/html/group__udi__hid__keyboard__group.html", "xmegab": "xmegab/html/group__udi__hid__keyboard__group.html", "xmegac": "xmegac/html/group__udi__hid__keyboard__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device HID Keyboard for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.hid.device.keyboard.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device HID Keyboard unit tests for SAM3S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#hid_mouse", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device HID mouse", "quickstart": {"sam3a": ["sam3a/html/udi_hid_mouse_quickstart.html"], "sam3s": ["sam3s/html/udi_hid_mouse_quickstart.html"], "sam3sd": ["sam3sd/html/udi_hid_mouse_quickstart.html"], "sam3u": ["sam3u/html/udi_hid_mouse_quickstart.html"], "sam3x": ["sam3x/html/udi_hid_mouse_quickstart.html"], "sam4c": ["sam4c/html/udi_hid_mouse_quickstart.html"], "sam4e": ["sam4e/html/udi_hid_mouse_quickstart.html"], "sam4l": ["sam4l/html/udi_hid_mouse_quickstart.html"], "sam4s": ["sam4s/html/udi_hid_mouse_quickstart.html"], "samd21": ["samd21/html/udi_hid_mouse_quickstart.html"], "samr21": ["samr21/html/udi_hid_mouse_quickstart.html"], "uc3a": ["uc3a/html/udi_hid_mouse_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/udi_hid_mouse_quickstart.html"], "uc3b": ["uc3b/html/udi_hid_mouse_quickstart.html"], "uc3c": ["uc3c/html/udi_hid_mouse_quickstart.html"], "uc3d": ["uc3d/html/udi_hid_mouse_quickstart.html"], "uc3l": ["uc3l/html/udi_hid_mouse_quickstart.html"], "xmegaau": ["xmegaau/html/udi_hid_mouse_quickstart.html"], "xmegab": ["xmegab/html/udi_hid_mouse_quickstart.html"], "xmegac": ["xmegac/html/udi_hid_mouse_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__hid__mouse__group.html", "sam3s": "sam3s/html/group__udi__hid__mouse__group.html", "sam3sd": "sam3sd/html/group__udi__hid__mouse__group.html", "sam3u": "sam3u/html/group__udi__hid__mouse__group.html", "sam3x": "sam3x/html/group__udi__hid__mouse__group.html", "sam4c": "sam4c/html/group__udi__hid__mouse__group.html", "sam4e": "sam4e/html/group__udi__hid__mouse__group.html", "sam4l": "sam4l/html/group__udi__hid__mouse__group.html", "sam4s": "sam4s/html/group__udi__hid__mouse__group.html", "samd21": "samd21/html/group__udi__hid__mouse__group.html", "samr21": "samr21/html/group__udi__hid__mouse__group.html", "uc3a": "uc3a/html/group__udi__hid__mouse__group.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__hid__mouse__group.html", "uc3b": "uc3b/html/group__udi__hid__mouse__group.html", "uc3c": "uc3c/html/group__udi__hid__mouse__group.html", "uc3d": "uc3d/html/group__udi__hid__mouse__group.html", "uc3l": "uc3l/html/group__udi__hid__mouse__group.html", "xmegaau": "xmegaau/html/group__udi__hid__mouse__group.html", "xmegab": "xmegab/html/group__udi__hid__mouse__group.html", "xmegac": "xmegac/html/group__udi__hid__mouse__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device HID Mouse for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.hid.device.mouse.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device HID Mouse unit tests for SAM3S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "common.services.usb.class.hid.device.mouse.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#mass_storage", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device Mass Storage Class", "quickstart": {"sam3a": ["sam3a/html/udi_msc_quickstart.html"], "sam3s": ["sam3s/html/udi_msc_quickstart.html"], "sam3sd": ["sam3sd/html/udi_msc_quickstart.html"], "sam3u": ["sam3u/html/udi_msc_quickstart.html"], "sam3x": ["sam3x/html/udi_msc_quickstart.html"], "sam4c": ["sam4c/html/udi_msc_quickstart.html"], "sam4e": ["sam4e/html/udi_msc_quickstart.html"], "sam4l": ["sam4l/html/udi_msc_quickstart.html"], "sam4s": ["sam4s/html/udi_msc_quickstart.html"], "samd21": ["samd21/html/udi_msc_quickstart.html"], "samr21": ["samr21/html/udi_msc_quickstart.html"], "uc3a": ["uc3a/html/udi_msc_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/udi_msc_quickstart.html"], "uc3b": ["uc3b/html/udi_msc_quickstart.html"], "uc3c": ["uc3c/html/udi_msc_quickstart.html"], "uc3d": ["uc3d/html/udi_msc_quickstart.html"], "uc3l": ["uc3l/html/udi_msc_quickstart.html"], "xmegaau": ["xmegaau/html/udi_msc_quickstart.html"], "xmegab": ["xmegab/html/udi_msc_quickstart.html"], "xmegac": ["xmegac/html/udi_msc_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__msc__group.html", "sam3s": "sam3s/html/group__udi__msc__group.html", "sam3sd": "sam3sd/html/group__udi__msc__group.html", "sam3u": "sam3u/html/group__udi__msc__group.html", "sam3x": "sam3x/html/group__udi__msc__group.html", "sam4c": "sam4c/html/group__udi__msc__group.html", "sam4e": "sam4e/html/group__udi__msc__group.html", "sam4l": "sam4l/html/group__udi__msc__group.html", "sam4s": "sam4s/html/group__udi__msc__group.html", "samd21": "samd21/html/group__udi__msc__group.html", "samr21": "samr21/html/group__udi__msc__group.html", "uc3a": "uc3a/html/group__udi__msc__group.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__msc__group.html", "uc3b": "uc3b/html/group__udi__msc__group.html", "uc3c": "uc3c/html/group__udi__msc__group.html", "uc3d": "uc3d/html/group__udi__msc__group.html", "uc3l": "uc3l/html/group__udi__msc__group.html", "xmegaau": "xmegaau/html/group__udi__msc__group.html", "xmegab": "xmegab/html/group__udi__msc__group.html", "xmegac": "xmegac/html/group__udi__msc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device Mass Storage for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.msc.device.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device Mass Storage for SAM3S-EK with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.msc.device.example.freertos.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device Mass Storage unit tests for SAM3S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "common.services.usb.class.msc.device.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#phdc", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device PHDC", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__phdc__group.html", "sam3s": "sam3s/html/group__udi__phdc__group.html", "sam3sd": "sam3sd/html/group__udi__phdc__group.html", "sam3u": "sam3u/html/group__udi__phdc__group.html", "sam3x": "sam3x/html/group__udi__phdc__group.html", "sam4c": "sam4c/html/group__udi__phdc__group.html", "sam4e": "sam4e/html/group__udi__phdc__group.html", "sam4l": "sam4l/html/group__udi__phdc__group.html", "sam4s": "sam4s/html/group__udi__phdc__group.html", "samd21": "samd21/html/group__udi__phdc__group.html", "samr21": "samr21/html/group__udi__phdc__group.html", "uc3a": "uc3a/html/group__udi__phdc__group.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__phdc__group.html", "uc3b": "uc3b/html/group__udi__phdc__group.html", "uc3c": "uc3c/html/group__udi__phdc__group.html", "uc3d": "uc3d/html/group__udi__phdc__group.html", "uc3l": "uc3l/html/group__udi__phdc__group.html", "xmegaau": "xmegaau/html/group__udi__phdc__group.html", "xmegab": "xmegab/html/group__udi__phdc__group.html", "xmegac": "xmegac/html/group__udi__phdc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.device#vendor_class", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l3", "uc3l4", "xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac", "sam3s", "sam3sd", "sam3u", "sam3x", "sam3a", "sam4s", "sam4l", "sam4e", "samd21", "samr21", "sam4c32e"], "name": "USB Device Vendor Class", "quickstart": {"sam3a": ["sam3a/html/udi_vendor_quickstart.html"], "sam3s": ["sam3s/html/udi_vendor_quickstart.html"], "sam3sd": ["sam3sd/html/udi_vendor_quickstart.html"], "sam3u": ["sam3u/html/udi_vendor_quickstart.html"], "sam3x": ["sam3x/html/udi_vendor_quickstart.html"], "sam4c": ["sam4c/html/udi_vendor_quickstart.html"], "sam4e": ["sam4e/html/udi_vendor_quickstart.html"], "sam4l": ["sam4l/html/udi_vendor_quickstart.html"], "sam4s": ["sam4s/html/udi_vendor_quickstart.html"], "samd21": ["samd21/html/udi_vendor_quickstart.html"], "samr21": ["samr21/html/udi_vendor_quickstart.html"], "uc3a": ["uc3a/html/udi_vendor_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/udi_vendor_quickstart.html"], "uc3b": ["uc3b/html/udi_vendor_quickstart.html"], "uc3c": ["uc3c/html/udi_vendor_quickstart.html"], "uc3d": ["uc3d/html/udi_vendor_quickstart.html"], "uc3l": ["uc3l/html/udi_vendor_quickstart.html"], "xmegaau": ["xmegaau/html/udi_vendor_quickstart.html"], "xmegab": ["xmegab/html/udi_vendor_quickstart.html"], "xmegac": ["xmegac/html/udi_vendor_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__udi__vendor__group__desc.html", "sam3s": "sam3s/html/group__udi__vendor__group__desc.html", "sam3sd": "sam3sd/html/group__udi__vendor__group__desc.html", "sam3u": "sam3u/html/group__udi__vendor__group__desc.html", "sam3x": "sam3x/html/group__udi__vendor__group__desc.html", "sam4c": "sam4c/html/group__udi__vendor__group__desc.html", "sam4e": "sam4e/html/group__udi__vendor__group__desc.html", "sam4l": "sam4l/html/group__udi__vendor__group__desc.html", "sam4s": "sam4s/html/group__udi__vendor__group__desc.html", "samd21": "samd21/html/group__udi__vendor__group__desc.html", "samr21": "samr21/html/group__udi__vendor__group__desc.html", "uc3a": "uc3a/html/group__udi__vendor__group__desc.html", "uc3a3_a4": "uc3a3_a4/html/group__udi__vendor__group__desc.html", "uc3b": "uc3b/html/group__udi__vendor__group__desc.html", "uc3c": "uc3c/html/group__udi__vendor__group__desc.html", "uc3d": "uc3d/html/group__udi__vendor__group__desc.html", "uc3l": "uc3l/html/group__udi__vendor__group__desc.html", "xmegaau": "xmegaau/html/group__udi__vendor__group__desc.html", "xmegab": "xmegab/html/group__udi__vendor__group__desc.html", "xmegac": "xmegac/html/group__udi__vendor__group__desc.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Device Vendor Class Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.services.usb.class.vendor.device.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3S-EK"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "USB Standard I/O Example for SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "common.utils.stdio.stdio_usb.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM3S-EK.", "id": "sam.drivers.wdt.example.sam3s_ek", "mcus": ["atsam3s4c"], "name": "Watchdog Timer Example on SAM3S-EK", "quickstart": {}, "type": "application", "uri": {"sam3s": "sam.drivers.wdt.example.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam3s_ek", "mcus": ["atsam3s4c"], "name": "WDT unit Test for SAM3S", "quickstart": {}, "type": "unit-test", "uri": {"sam3s": "sam.drivers.wdt.unit_tests.sam3s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Audio"], "description": "Audio Codec Software Driver for the WM8731.", "id": "sam.components.audio.codec.wm8731", "mcus": ["sam3"], "name": "WM8731 Audio Codec", "quickstart": {"sam3a": ["sam3a/html/sam_wm8731_quickstart.html"], "sam3n": ["sam3n/html/sam_wm8731_quickstart.html"], "sam3s": ["sam3s/html/sam_wm8731_quickstart.html"], "sam3sd": ["sam3sd/html/sam_wm8731_quickstart.html"], "sam3u": ["sam3u/html/sam_wm8731_quickstart.html"], "sam3x": ["sam3x/html/sam_wm8731_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__components__audio__codec__wm8731__group.html", "sam3n": "sam3n/html/group__sam__components__audio__codec__wm8731__group.html", "sam3s": "sam3s/html/group__sam__components__audio__codec__wm8731__group.html", "sam3sd": "sam3sd/html/group__sam__components__audio__codec__wm8731__group.html", "sam3u": "sam3u/html/group__sam__components__audio__codec__wm8731__group.html", "sam3x": "sam3x/html/group__sam__components__audio__codec__wm8731__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "ADC example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.adc.adc_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": [], "description": "A simple example using the ADS7843 component and HX8347A lcd controller.", "id": "sam.services.resistive_touch.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "ADS7843 LCD Touch Controller example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.services.resistive_touch.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3U-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Basic FreeRTOS Example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.freertos.sam_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Basic SD/MMC/SDIO card example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.components.memory.sd_mmc.example1.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Chipid example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.chipid.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3U-EK"], "category": [], "description": "Basic Cortex-M3 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm3_cmsis_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "CMSIS Example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.utils.cmsis.cm3_cmsis_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Common API for Clocks Control / Example 1 for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.basic.clock.example1.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Common API for Clocks Control / Example 2 for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.basic.clock.example2.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Common API for Clocks Control / Example 3 for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.basic.clock.example3.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3U-EK"], "category": [], "description": "Basic Cortex-M3 bit banding example.", "id": "sam.utils.cmsis.cm3_bit_banding_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Cortex-M bit banding example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.utils.cmsis.cm3_bit_banding_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller"], "description": "Driver for DMAC Controller (DMAC). It provides functions for configuring and using the on-chip DMAC.", "id": "sam.drivers.dmac", "mcus": ["sam3x", "sam3a", "sam3u", "sam4e"], "name": "DMAC - DMAC Controller", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__sam__driver__dmac__group.html", "sam3u": "sam3u/html/group__sam__driver__dmac__group.html", "sam3x": "sam3x/html/group__sam__driver__dmac__group.html", "sam4e": "sam4e/html/group__sam__driver__dmac__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["DMA Controller"], "description": "Basic example of DMAC on SAM3U-EK.", "id": "sam.drivers.dmac.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "DMAC example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.dmac.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the DMAC driver.", "id": "sam.drivers.dmac.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "DMAC unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.dmac.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Drivers RTC Example for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.rtc.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3U-EK"], "category": [], "description": "FatFS example for SAM3U_EK, the file system will be created on the NAND Flash and the external DataFlash AT45DBX if it's connented.", "id": "common.services.fs.fatfs.access_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "FatFS example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.fs.fatfs.access_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Flash efc unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.services.flash.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Flash Program Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.services.flash.program_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Flash Read Unique Id Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.services.flash.read.unique.id_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "FreeRTOS USART Interface Layer for SAM3U-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.services.freertos_sam_usart.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3U-EK"], "category": [], "description": "Switch between various system clock sources and prescalers at run time.", "id": "sam.applications.getting-started.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Getting Started for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.applications.getting-started.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "GPBR unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.gpbr.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "This driver interfaces the HSMCI (MultiMedia Card Interface) module. It will add functions for SD/MMC card reading, writing and management.", "id": "sam.drivers.hsmci#1", "mcus": ["sam3u", "sam3x"], "name": "High Speed Multimedia Card Interface", "quickstart": {}, "type": "module", "uri": {"sam3u": "sam3u/html/group__sam__drivers__hsmci.html", "sam3x": "sam3x/html/group__sam__drivers__hsmci.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": ["Graphics"], "description": "This example demonstrates how to configure the HX8347A LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.hx8347a.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "HX8347A LCD Controller example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.components.display.hx8347a.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3U-EK"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Low Power demo for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.applications.low_power.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Basic example of MATRIX on SAM3U-EK.", "id": "sam.drivers.matrix.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "MATRIX example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.matrix.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the temperature sensor (MCP980X).", "id": "common.components.sensors.mcp980x.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "MCP980X unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.components.sensors.mcp980x.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": [], "description": "This example demonstrates how to configure MMA7341L accelerometer and check gravity value of three axis by it.", "id": "sam.components.sensor.mma7341l.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "MMA7341L Accelerometer example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.components.sensor.mma7341l.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the mma7341l driver.", "id": "sam.components.sensor.mma7341l.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "mma7341l unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.components.sensor.mma7341l.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "NAND Flash component unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.components.memory.nand_flash.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "NAND Flash component operation. Provides common APIs for SAM devices.", "id": "common.components.memory.nand_flash#3", "mcus": ["sam3u"], "name": "NAND Flash on EBI", "quickstart": {"sam3u": ["sam3u/html/common_components_nand_flash_quickstart.html"]}, "type": "module", "uri": {"sam3u": "sam3u/html/group__common__components__nand__flash__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam3u_ek", "mcus": ["atsam3u4e"], "name": "NAND Flash on EBI Example 1 for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.components.memory.nand_flash.example1.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam3u_ek", "mcus": ["atsam3u4e"], "name": "NAND Flash on EBI Example 2 for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.components.memory.nand_flash.example2.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "NVM example for sam4s16c on SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.drivers.nvm.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3U-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Peripheral Control FreeRTOS Example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.freertos.peripheral_control.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Peripheral DMA Controller Example on SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.pdc.pdc_uart_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "PMC clock failure detection example for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M3 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "PMC clock switching for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.pmc.pmc_clock_switching_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "PMC unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.pmc.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Clocks"], "description": "This example will show how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "PWM LED example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.pwm.pwm_led_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on SAM3U-EK.", "id": "sam.drivers.pwm.pwm_sync_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "PWM SYNC example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.pwm.pwm_sync_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "PWM unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.pwm.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "RSTC unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.rstc.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Basic example of RTT on SAM3U-EK.", "id": "sam.drivers.rtt.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "RTT example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.rtt.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "SD/MMC card example for SAM3U_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.components.memory.sd_mmc.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam3u_ek", "mcus": ["atsam3u4e"], "name": "SD/MMC card example with FatFs for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.components.memory.sd_mmc.example2.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.basic.usart_spi_master_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Memory"], "description": "A simple example shows how to configure the Static Memory Controller (SMC) for PSRAM, and do write and read operations to check the configuration.", "id": "sam.drivers.ebi.smc.smc_psram_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Smc Controller example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.ebi.smc.smc_psram_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with DMAC function.", "id": "sam.drivers.spi.spi_dmac_slave_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "SPI DMAC Slave Example for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.spi.spi_dmac_slave_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "SPI Example for SAM3U", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.spi.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "SPI unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.spi.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "SSC unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.ssc.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "SUPC unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.supc.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#13", "mcus": ["sam3u"], "name": "System Clock Control - SAM3U implementation", "quickstart": {"sam3u": ["sam3u/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam3u": "sam3u/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "TC Capture Waveform Example on SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.tc.tc_capture_waveform_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "TWI SLAVE Example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.twi.twi_slave_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": ["Communication", "Sensors"], "description": "This example program demonstrates how to use MCP980X module to control the MCP9800/1/2/3 and retrieve ambient temperature.", "id": "common.components.sensors.mcp980x.twi_temp_sensor_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "TWI Temperature Sensor Example on SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.components.sensors.mcp980x.twi_temp_sensor_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USART Hardware Handshaking Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.usart.usart_hard_handshaking_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USART IrDA Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.usart.usart_irda_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USART ISO7816 Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.usart.usart_iso7816_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USART RS485 Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.usart.usart_rs485_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USART Serial Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.usart.usart_serial_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USART Synchronous Example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.usart.usart_synchronous_example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Composite Device CDC and MSC for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.composite.device.example.cdc_msc.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Composite Device HID keyboard and MSC for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Composite Device HID mouse and MSC for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.composite.device.example.hidms_msc.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device CDC Example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.cdc.device.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device CDC multiple Example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.cdc.device.example2.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device CDC unit tests for SAM3U-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.services.usb.class.cdc.device.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device HID Generic for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.hid.device.generic.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device HID Keyboard for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.hid.device.keyboard.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device HID Keyboard unit tests for SAM3U-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device HID Mouse for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.hid.device.mouse.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device HID Mouse unit tests for SAM3U-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.services.usb.class.hid.device.mouse.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device Mass Storage for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.msc.device.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device Mass Storage for SAM3U-EK with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.msc.device.example.freertos.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device Mass Storage unit tests for SAM3U-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "common.services.usb.class.msc.device.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3U-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "USB Device Vendor Class Example for SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "common.services.usb.class.vendor.device.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM3U-EK.", "id": "sam.drivers.wdt.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "Watchdog Timer Example on SAM3U-EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.drivers.wdt.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.sam3u_ek", "mcus": ["atsam3u4e"], "name": "WDT unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.drivers.wdt.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": [], "description": "A simple example for the WM8731 by playing back a WAV file.", "id": "sam.components.audio.codec.wm8731.example.sam3u_ek", "mcus": ["atsam3u4e"], "name": "WM8731 example for SAM3U_EK", "quickstart": {}, "type": "application", "uri": {"sam3u": "sam.components.audio.codec.wm8731.example.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3U-EK"], "category": [], "description": "Unit test application for the WM8731 module.", "id": "sam.components.audio.codec.wm8731.unit_tests.sam3u_ek", "mcus": ["atsam3u4e"], "name": "WM8731 unit test for SAM3U_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3u": "sam.components.audio.codec.wm8731.unit_tests.sam3u_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "ADC example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.adc.adc_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "ADC example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.adc.adc_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "ADC Temperature Sensor example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.adc.adc_temp_sensor_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "ADC Temperature Sensor example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.adc.adc_temp_sensor_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "ADC threshold wake-up example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.adc.adc_threshold_wakeup_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "ADC threshold wake-up example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.adc.adc_threshold_wakeup_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "A simple example using the ADS7843 component and HX8347A lcd controller.", "id": "sam.services.resistive_touch.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "ADS7843 LCD Touch Controller example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.services.resistive_touch.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Memory"], "description": "Provide an application example using the Atmel EEPROM AT24C component. The EEPROM requires an I2C bus as a low level communication interface. This interface can be implemented using TWI controller for SAM devices.", "id": "common.components.memory.eeprom.at24cxx.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "AT24CXX EEPROM example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.components.memory.eeprom.at24cxx.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the at24cxx driver.", "id": "common.components.memory.eeprom.at24cxx.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "at24cxx unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.components.memory.eeprom.at24cxx.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3X-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Basic FreeRTOS Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.freertos.sam_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Basic SD/MMC/SDIO card example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.components.memory.sd_mmc.example1.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The CAN controller provides all the features required to implement the serial communication protocol CAN defined by Robert Bosch GmbH.", "id": "sam.drivers.can", "mcus": ["sam3x", "sam4e"], "name": "CAN - Controller Area Network", "quickstart": {"sam3x": ["sam3x/html/sam_can_quickstart.html"], "sam4e": ["sam4e/html/sam_can_quickstart.html"]}, "type": "module", "uri": {"sam3x": "sam3x/html/group__sam__drivers__can__group.html", "sam4e": "sam4e/html/group__sam__drivers__can__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example demostrate basic functions of CAN controller.", "id": "sam.components.can.can_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "CAN Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.components.can.can_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "The CAN controller provides all the features required to implement the serial communication protocol CAN defined by Robert Bosch GmbH.", "id": "sam.drivers.can.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "CAN unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.can.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Chipid example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.chipid.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Chipid example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.chipid.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["Arduino Due/X"], "category": [], "description": "Basic Cortex-M3 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm3_cmsis_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "CMSIS Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.utils.cmsis.cm3_cmsis_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3X-EK"], "category": [], "description": "Basic Cortex-M3 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm3_cmsis_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "CMSIS Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.utils.cmsis.cm3_cmsis_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["Arduino Due/X"], "category": [], "description": "The demonstration program makes two buttons as the NVIC trigger. Each button would trigger one LED flash. When an NVIC interrupt preemptive happened, both the LEDs are on.", "id": "sam.utils.cmsis.cm3_nvic_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "CMSIS NVIC example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.utils.cmsis.cm3_nvic_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3X-EK"], "category": [], "description": "The demonstration program makes two buttons as the NVIC trigger. Each button would trigger one LED flash. When an NVIC interrupt preemptive happened, both the LEDs are on.", "id": "sam.utils.cmsis.cm3_nvic_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "CMSIS NVIC example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.utils.cmsis.cm3_nvic_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Common API for Clocks Control / Example 1 for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.clock.example1.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Common API for Clocks Control / Example 1 for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.clock.example1.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Common API for Clocks Control / Example 2 for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.clock.example2.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Common API for Clocks Control / Example 2 for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.clock.example2.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Common API for Clocks Control / Example 3 for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.clock.example3.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": [], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Common API for Controlling a TWI Module / Master Mode Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.twi.master.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Common API for Controlling a TWI Module / Master Mode Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.twi.master.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Toggles output port pins controlling LED D3 and LED D4", "id": "common.services.ioport.example1.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Common IOPORT service example 1 for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.ioport.example1.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Toggles output pin connected to LED D4", "id": "common.services.ioport.example2.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Common IOPORT service example 2 for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.ioport.example2.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Example that reads button BP5 and outputs it on LED D4.", "id": "common.services.ioport.example3.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Common IOPORT service example 3 for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.ioport.example3.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["Arduino Due/X"], "category": [], "description": "Basic Cortex-M3 bit banding example.", "id": "sam.utils.cmsis.cm3_bit_banding_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Cortex-M bit banding example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.utils.cmsis.cm3_bit_banding_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3X-EK"], "category": [], "description": "Basic Cortex-M3 bit banding example.", "id": "sam.utils.cmsis.cm3_bit_banding_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Cortex-M bit banding example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.utils.cmsis.cm3_bit_banding_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "DAC Sinewave Example on Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.dacc.sinewave_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "DAC Sinewave Example on SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.dacc.sinewave_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["DMA Controller"], "description": "Basic example of DMAC on SAM3X-EK.", "id": "sam.drivers.dmac.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "DMAC example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.dmac.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the DMAC driver.", "id": "sam.drivers.dmac.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "DMAC unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.dmac.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Drivers RTC Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.rtc.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Drivers RTC Example for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.rtc.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "This example demonstrates the True Random Number Generator (TRNG) provided on SAM3X/SAM4C/SAM4CP microcontrollers. It enables the user to set an alarm and watch it being triggered when the timer reaches the corresponding value.", "id": "sam.drivers.trng.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Drivers TRNG Example for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.trng.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Ethernet example with ethernet MAC, process simple ethernet packets.", "id": "sam.drivers.emac.emac_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "EMAC example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.emac.emac_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the EMAC driver.", "id": "sam.drivers.emac.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "EMAC unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.emac.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Provides the interface to configure and use the EMAC peripheral.", "id": "sam.drivers.emac", "mcus": ["sam3x"], "name": "Ethernet MAC (EMAC)", "quickstart": {"sam3x": ["sam3x/html/emac_quickstart.html"]}, "type": "module", "uri": {"sam3x": "sam3x/html/group__emac__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Communication"], "description": "Driver for DM9161A Ethernet Physical Layer Transceiver device. Provides functions for initializing and controlling the ethernet physical.", "id": "sam.components.ethernet_phy.dm9161a", "mcus": ["sam3x"], "name": "Ethernet Physical Transceiver (DM9161A)", "quickstart": {}, "type": "module", "uri": {"sam3x": "sam3x/html/group__dm9161a__ethernet__phy__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3X-EK"], "category": [], "description": "FatFS example for SAM3X_EK, the file system will be created on the internal RAM, NAND Flash and the external DataFlash AT45DBX if it's connented.", "id": "common.services.fs.fatfs.access_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "FatFS example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.fs.fatfs.access_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3X-EK"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "FatFS example for SAM3X_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.fs.fatfs.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Flash efc unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.services.flash.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Flash efc unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.services.flash.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Flash Program Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.services.flash.program_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Flash Program Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.services.flash.program_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Flash Read Unique Id Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.services.flash.read.unique.id_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Flash Read Unique Id Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.services.flash.read.unique.id_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the FreeRTOS TWI interface layer.", "id": "common.services.freertos_sam_twi.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "FreeRTOS TWI Interface Layer for SAM3X-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.freertos_sam_twi.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "FreeRTOS USART Interface Layer for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.freertos_sam_usart.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "FreeRTOS USART Interface Layer for SAM3X-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.freertos_sam_usart.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3X-EK"], "category": [], "description": "Basic web server and basic TFTP server applicaitons with DHCP enabled through the lwIP TCP/IP stack and FreeRTOS of SAM port.", "id": "common.services.freertos.sam_lwip_dhcp_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "FreeRTOS with lwIP Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.freertos.sam_lwip_dhcp_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["Arduino Due/X"], "category": [], "description": "Getting started example for SAM3X.", "id": "sam.applications.getting-started.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Getting Started for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.applications.getting-started.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3X-EK"], "category": [], "description": "Getting started example for sam3x.", "id": "sam.applications.getting-started.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Getting Started for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.applications.getting-started.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "GPBR unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.gpbr.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "GPBR unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.gpbr.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Graphics"], "description": "This example demonstrates how to configure the HX8347A LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.hx8347a.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "HX8347A LCD Controller example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.components.display.hx8347a.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "LIN software stack for SAM that supports initializing the LIN bus and to transmit/receive  messages.", "id": "sam.services.network.lin", "mcus": ["sam3x"], "name": "LIN software stack", "quickstart": {"sam3x": ["sam3x/html/sam_lin_quickstart.html"]}, "type": "module", "uri": {"sam3x": "sam3x/html/group__sam__service__network__lin__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "Basic example supporting Master and Slave Modes, using the LIN Software Stack. Requires the two SAM3X-EK boards and two USART-DB boards.", "id": "sam.services.lin.mngt_example.sam3x", "mcus": ["atsam3x8h"], "name": "LIN Stack Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.services.lin.mngt_example.sam3x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for LIN service.", "id": "sam.services.network.lin.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "LIN unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.services.network.lin.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3X-EK"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Low Power demo for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.applications.low_power.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).", "id": "thirdparty.lwip.raw_basic_http_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "lwIP TCP/IP Stack basic HTTP example using Raw API for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "thirdparty.lwip.raw_basic_http_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Basic example of MATRIX on Arduino Due/X.", "id": "sam.drivers.matrix.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "MATRIX example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.matrix.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Basic example of MATRIX on SAM3X-EK.", "id": "sam.drivers.matrix.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "MATRIX example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.matrix.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "NAND Flash component unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.components.memory.nand_flash.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "NAND Flash component operation. Provides common APIs for SAM devices.", "id": "common.components.memory.nand_flash#4", "mcus": ["sam3x"], "name": "NAND Flash on EBI", "quickstart": {"sam3x": ["sam3x/html/common_components_nand_flash_quickstart.html"]}, "type": "module", "uri": {"sam3x": "sam3x/html/group__common__components__nand__flash__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam3x_ek", "mcus": ["atsam3x8h"], "name": "NAND Flash on EBI Example 1 for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.components.memory.nand_flash.example1.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam3x_ek", "mcus": ["atsam3x8h"], "name": "NAND Flash on EBI Example 2 for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.components.memory.nand_flash.example2.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["Arduino Due/X"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Peripheral Control FreeRTOS Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.freertos.peripheral_control.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3X-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Peripheral Control FreeRTOS Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.freertos.peripheral_control.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Peripheral DMA Controller Example on Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pdc.pdc_uart_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Peripheral DMA Controller Example on SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pdc.pdc_uart_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.alternate_function_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "PIO Alternate Function Example for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pio.alternate_function_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "PMC clock failure detection example for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M3 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "PMC clock switching for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pmc.pmc_clock_switching_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "PMC unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.pmc.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "PMC unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.pmc.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Clocks"], "description": "This example shows how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "PWM LED example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pwm.pwm_led_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Clocks"], "description": "This example shows how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "PWM LED example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pwm.pwm_led_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on Arduino Due/X.", "id": "sam.drivers.pwm.pwm_sync_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "PWM SYNC example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pwm.pwm_sync_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on SAM3X-EK.", "id": "sam.drivers.pwm.pwm_sync_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "PWM SYNC example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.pwm.pwm_sync_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "PWM unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.pwm.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "PWM unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.pwm.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3X-EK"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the board of Atmel SAM devices.", "id": "common.services.qtouch.generic.sam.qtouch.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "QTouch Method Example Application on SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.qtouch.generic.sam.qtouch.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "RSTC unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.rstc.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "RSTC unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.rstc.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Basic example of RTT on SAM3X-EK.", "id": "sam.drivers.rtt.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "RTT example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.rtt.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Basic example of RTT on SAM3X-EK.", "id": "sam.drivers.rtt.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "RTT example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.rtt.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "SAM SDRAMC driver with the sleep mananger support.", "id": "sam.drivers.sdramc", "mcus": ["atsam3x8h"], "name": "SAM SDRAMC Driver", "quickstart": {"sam3x": ["sam3x/html/sam_sdramc_quickstart.html"]}, "type": "module", "uri": {"sam3x": "sam3x/html/group__sam__drivers__sdramc__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SD/MMC card example for SAM3X_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.components.memory.sd_mmc.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SD/MMC card example with FatFs for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.components.memory.sd_mmc.example2.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "The SDRAMC configuration for the MT48LC16M16A2 SDRAM from Mircon.", "id": "sam.components.memory.sdram.mt48lc16m16a2", "mcus": ["atsam3x8h"], "name": "SDRAMC configuration for MT48LC16M16A2", "quickstart": {}, "type": "module", "uri": {"sam3x": "sam3x/html/group__group__sam__components__memory__sdram__mt48lc16m16a2.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": [], "description": "SDRAM example for MT48LC16M16A2.", "id": "sam.components.memory.sdram.mt48lc16m16a2.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SDRAMC example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.components.memory.sdram.mt48lc16m16a2.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test for SAM SDRAMC driver. Micron MT48LC16M16A2 SDRAM is used.", "id": "sam.drivers.sdramc.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SDRAMC unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.sdramc.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.basic.usart_spi_master_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Implementation for the common SPI API using both standard SPI peripheral and USART peripheral in SPI mode.", "id": "common.services.basic.spi_master#usart_and_standard_spi", "mcus": ["xmega", "uc3", "sam", "megarf"], "name": "SPI - Common USART SPI Master and Standard SPI", "quickstart": {"mega": ["mega/html/common_spi_master_quickstart.html"], "sam3a": ["sam3a/html/common_spi_master_quickstart.html"], "sam3x": ["sam3x/html/common_spi_master_quickstart.html"], "sam4c": ["sam4c/html/common_spi_master_quickstart.html"], "sam4cm": ["sam4cm/html/common_spi_master_quickstart.html"], "sam4l": ["sam4l/html/common_spi_master_quickstart.html"], "uc3a": ["uc3a/html/common_spi_master_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/common_spi_master_quickstart.html"], "uc3b": ["uc3b/html/common_spi_master_quickstart.html"], "uc3c": ["uc3c/html/common_spi_master_quickstart.html"], "uc3l": ["uc3l/html/common_spi_master_quickstart.html"], "xmegaa": ["xmegaa/html/common_spi_master_quickstart.html"], "xmegad": ["xmegad/html/common_spi_master_quickstart.html"], "xmegae": ["xmegae/html/common_spi_master_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__spi__group.html", "sam3a": "sam3a/html/group__spi__group.html", "sam3x": "sam3x/html/group__spi__group.html", "sam4c": "sam4c/html/group__spi__group.html", "sam4cm": "sam4cm/html/group__spi__group.html", "sam4l": "sam4l/html/group__spi__group.html", "uc3a": "uc3a/html/group__spi__group.html", "uc3a3_a4": "uc3a3_a4/html/group__spi__group.html", "uc3b": "uc3b/html/group__spi__group.html", "uc3c": "uc3c/html/group__spi__group.html", "uc3l": "uc3l/html/group__spi__group.html", "xmegaa": "xmegaa/html/group__spi__group.html", "xmegad": "xmegad/html/group__spi__group.html", "xmegae": "xmegae/html/group__spi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with DMAC function.", "id": "sam.drivers.spi.spi_dmac_slave_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SPI DMAC Slave Example for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.spi.spi_dmac_slave_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "SPI Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.spi.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SPI Example for SAM3X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.spi.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "SPI unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.spi.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SPI unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.spi.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "SSC unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.ssc.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SSC unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.ssc.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "SUPC unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.supc.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#11", "mcus": ["sam3x", "sam3a"], "name": "System Clock Control - SAM3X/A implementation", "quickstart": {"sam3a": ["sam3a/html/sysclk_quickstart.html"], "sam3x": ["sam3x/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__clk__group.html", "sam3x": "sam3x/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "TC Capture Waveform Example on Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.tc.tc_capture_waveform_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "TC Capture Waveform Example on SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.tc.tc_capture_waveform_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the TRNG driver.", "id": "sam.drivers.trng.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "TRNG unit Test for SAM3U", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.trng.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "The application demonstrates how to use the SAM TWI driver to access an external serial EEPROM chip.", "id": "sam.drivers.twi.twi_eeprom_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "TWI EEPROM Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.twi.twi_eeprom_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "TWI SLAVE Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.twi.twi_slave_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example demonstrates how to use DMAC to implement USART peripherals function in serial mode.", "id": "sam.drivers.usart.usart_dmac_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USART DMAC Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_dmac_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USART Hardware Handshaking Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_hard_handshaking_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USART IrDA Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_irda_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USART ISO7816 Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_iso7816_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USART RS485 Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_rs485_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USART Serial Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_serial_example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USART Serial Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_serial_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USART Synchronous Example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.usart.usart_synchronous_example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Composite Device CDC and MSC for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.composite.device.example.cdc_msc.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Composite Device CDC and MSC for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.composite.device.example.cdc_msc.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Composite Device HID keyboard and MSC for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.device.example.hidkbd_msc.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Composite Device HID keyboard and MSC for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.device.example.hids_cdc_msc.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Composite Device HID mouse and MSC for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.device.example.hidms_msc.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Composite Device HID mouse and MSC for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.device.example.hidms_msc.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device CDC Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.cdc.device.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device CDC Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.cdc.device.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device CDC multiple Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.cdc.device.example2.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device CDC multiple Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.cdc.device.example2.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device CDC unit tests for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.cdc.device.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device CDC unit tests for SAM3X-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.cdc.device.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device HID Generic for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.device.generic.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device HID Generic for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.device.generic.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device HID Keyboard for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.device.keyboard.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device HID Keyboard for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.device.keyboard.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device HID Keyboard unit tests for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.hid.device.keyboard.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device HID Keyboard unit tests for SAM3X-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device HID Mouse for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.device.mouse.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device HID Mouse for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.device.mouse.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device HID Mouse unit tests for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.hid.device.mouse.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device HID Mouse unit tests for SAM3X-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.hid.device.mouse.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device Mass Storage for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.msc.device.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device Mass Storage for Arduino Due/X with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.msc.device.example.freertos.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device Mass Storage for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.msc.device.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device Mass Storage for SAM3X-EK with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.msc.device.example.freertos.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device Mass Storage unit tests for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.msc.device.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device Mass Storage unit tests for SAM3X-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.class.msc.device.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Device Vendor Class Example for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.vendor.device.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Device Vendor Class Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.vendor.device.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Dual Role (Device and Host) HID mouse for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.dual.mouse.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Host CDC for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.cdc.host.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Host CDC for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.cdc.host.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.host#cdc", "mcus": ["uc3a", "uc3a3_a4", "uc3b0", "uc3c", "sam3x", "sam3a", "sam4l", "samd21", "samr21", "sam4c32e"], "name": "USB Host Communication Device Class", "quickstart": {"sam3a": ["sam3a/html/uhi_cdc_quickstart.html"], "sam3x": ["sam3x/html/uhi_cdc_quickstart.html"], "sam4c": ["sam4c/html/uhi_cdc_quickstart.html"], "sam4l": ["sam4l/html/uhi_cdc_quickstart.html"], "samd21": ["samd21/html/uhi_cdc_quickstart.html"], "samr21": ["samr21/html/uhi_cdc_quickstart.html"], "uc3a": ["uc3a/html/uhi_cdc_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/uhi_cdc_quickstart.html"], "uc3b": ["uc3b/html/uhi_cdc_quickstart.html"], "uc3c": ["uc3c/html/uhi_cdc_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__uhi__cdc__group.html", "sam3x": "sam3x/html/group__uhi__cdc__group.html", "sam4c": "sam4c/html/group__uhi__cdc__group.html", "sam4l": "sam4l/html/group__uhi__cdc__group.html", "samd21": "samd21/html/group__uhi__cdc__group.html", "samr21": "samr21/html/group__uhi__cdc__group.html", "uc3a": "uc3a/html/group__uhi__cdc__group.html", "uc3a3_a4": "uc3a3_a4/html/group__uhi__cdc__group.html", "uc3b": "uc3b/html/group__uhi__cdc__group.html", "uc3c": "uc3c/html/group__uhi__cdc__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.sam3x_ek_host", "mcus": ["atsam3x8h"], "name": "USB Host core tests on SAM3X-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "common.services.usb.host.tests.targets.sam3x_ek_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.host#hid_mouse", "mcus": ["uc3a", "uc3a3_a4", "uc3b0", "uc3c", "sam3x", "sam3a", "sam4l", "samd21", "samr21", "sam4c32e"], "name": "USB Host HID mouse", "quickstart": {"sam3a": ["sam3a/html/uhi_hid_mouse_quickstart.html"], "sam3x": ["sam3x/html/uhi_hid_mouse_quickstart.html"], "sam4c": ["sam4c/html/uhi_hid_mouse_quickstart.html"], "sam4l": ["sam4l/html/uhi_hid_mouse_quickstart.html"], "samd21": ["samd21/html/uhi_hid_mouse_quickstart.html"], "samr21": ["samr21/html/uhi_hid_mouse_quickstart.html"], "uc3a": ["uc3a/html/uhi_hid_mouse_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/uhi_hid_mouse_quickstart.html"], "uc3b": ["uc3b/html/uhi_hid_mouse_quickstart.html"], "uc3c": ["uc3c/html/uhi_hid_mouse_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__uhi__hid__mouse__group.html", "sam3x": "sam3x/html/group__uhi__hid__mouse__group.html", "sam4c": "sam4c/html/group__uhi__hid__mouse__group.html", "sam4l": "sam4l/html/group__uhi__hid__mouse__group.html", "samd21": "samd21/html/group__uhi__hid__mouse__group.html", "samr21": "samr21/html/group__uhi__hid__mouse__group.html", "uc3a": "uc3a/html/group__uhi__hid__mouse__group.html", "uc3a3_a4": "uc3a3_a4/html/group__uhi__hid__mouse__group.html", "uc3b": "uc3b/html/group__uhi__hid__mouse__group.html", "uc3c": "uc3c/html/group__uhi__hid__mouse__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Host HID mouse for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.hid.host.mouse.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.host#mass_storage", "mcus": ["uc3a", "uc3a3_a4", "uc3b0", "uc3c", "sam3x", "sam3a", "sam4l", "samd21", "samr21", "sam4c32e"], "name": "USB Host Mass Storage Class", "quickstart": {"sam3a": ["sam3a/html/uhi_msc_mem_quickstart.html"], "sam3x": ["sam3x/html/uhi_msc_mem_quickstart.html"], "sam4c": ["sam4c/html/uhi_msc_mem_quickstart.html"], "sam4l": ["sam4l/html/uhi_msc_mem_quickstart.html"], "samd21": ["samd21/html/uhi_msc_mem_quickstart.html"], "samr21": ["samr21/html/uhi_msc_mem_quickstart.html"], "uc3a": ["uc3a/html/uhi_msc_mem_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/uhi_msc_mem_quickstart.html"], "uc3b": ["uc3b/html/uhi_msc_mem_quickstart.html"], "uc3c": ["uc3c/html/uhi_msc_mem_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__uhi__msc__mem__group.html", "sam3x": "sam3x/html/group__uhi__msc__mem__group.html", "sam4c": "sam4c/html/group__uhi__msc__mem__group.html", "sam4l": "sam4l/html/group__uhi__msc__mem__group.html", "samd21": "samd21/html/group__uhi__msc__mem__group.html", "samr21": "samr21/html/group__uhi__msc__mem__group.html", "uc3a": "uc3a/html/group__uhi__msc__mem__group.html", "uc3a3_a4": "uc3a3_a4/html/group__uhi__msc__mem__group.html", "uc3b": "uc3b/html/group__uhi__msc__mem__group.html", "uc3c": "uc3c/html/group__uhi__msc__mem__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example2.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB host MSC and HID mouse for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.host.example2.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example2.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB host MSC FatFS and HID mouse for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.composite.host.example2.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Arduino Due/X"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example2.arduino_due_x", "mcus": ["atsam3x8e"], "name": "USB Host MSC with FatFS for Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.msc.host.example2.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example2.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Host MSC with FatFS for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.msc.host.example2.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.host#multiple_classes", "mcus": ["uc3a", "uc3a3_a4", "uc3b0", "uc3c", "sam3x", "sam3a", "sam4l", "samd21", "samr21", "sam4c32e"], "name": "USB Host Multiple classes", "quickstart": {}, "type": "module", "uri": {"sam3a": "sam3a/html/group__uhi__group.html", "sam3x": "sam3x/html/group__uhi__group.html", "sam4c": "sam4c/html/group__uhi__group.html", "sam4l": "sam4l/html/group__uhi__group.html", "samd21": "samd21/html/group__uhi__group.html", "samr21": "samr21/html/group__uhi__group.html", "uc3a": "uc3a/html/group__uhi__group.html", "uc3a3_a4": "uc3a3_a4/html/group__uhi__group.html", "uc3b": "uc3b/html/group__uhi__group.html", "uc3c": "uc3c/html/group__uhi__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.host#vendor", "mcus": ["uc3a", "uc3a3_a4", "uc3b0", "uc3c", "sam3x", "sam3a", "sam4l", "samd21", "samr21", "sam4c32e"], "name": "USB Host Vendor", "quickstart": {"sam3a": ["sam3a/html/uhi_vendor_quickstart.html"], "sam3x": ["sam3x/html/uhi_vendor_quickstart.html"], "sam4c": ["sam4c/html/uhi_vendor_quickstart.html"], "sam4l": ["sam4l/html/uhi_vendor_quickstart.html"], "samd21": ["samd21/html/uhi_vendor_quickstart.html"], "samr21": ["samr21/html/uhi_vendor_quickstart.html"], "uc3a": ["uc3a/html/uhi_vendor_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/uhi_vendor_quickstart.html"], "uc3b": ["uc3b/html/uhi_vendor_quickstart.html"], "uc3c": ["uc3c/html/uhi_vendor_quickstart.html"]}, "type": "module", "uri": {"sam3a": "sam3a/html/group__uhi__vendor__group.html", "sam3x": "sam3x/html/group__uhi__vendor__group.html", "sam4c": "sam4c/html/group__uhi__vendor__group.html", "sam4l": "sam4l/html/group__uhi__vendor__group.html", "samd21": "samd21/html/group__uhi__vendor__group.html", "samr21": "samr21/html/group__uhi__vendor__group.html", "uc3a": "uc3a/html/group__uhi__vendor__group.html", "uc3a3_a4": "uc3a3_a4/html/group__uhi__vendor__group.html", "uc3b": "uc3b/html/group__uhi__vendor__group.html", "uc3c": "uc3c/html/group__uhi__vendor__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3X-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Vendor implementation.", "id": "common.services.usb.class.vendor.host.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB host Vendor for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.services.usb.class.vendor.host.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3X-EK"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "USB Standard I/O Example for SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "common.utils.stdio.stdio_usb.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": ["Timers"], "description": "Basic example of watchdog timer on Arduino Due/X.", "id": "sam.drivers.wdt.example.arduino_due_x", "mcus": ["atsam3x8e"], "name": "Watchdog Timer Example on Arduino Due/X", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.wdt.example.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM3X-EK.", "id": "sam.drivers.wdt.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "Watchdog Timer Example on SAM3X-EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.drivers.wdt.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Arduino Due/X"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.arduino_due_x", "mcus": ["atsam3x8e"], "name": "WDT unit Test for Arduino Due/X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.wdt.unit_tests.arduino_due_x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "WDT unit Test for SAM3X", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.drivers.wdt.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": [], "description": "A simple example for the WM8731 by playing back a WAV file.", "id": "sam.components.audio.codec.wm8731.example.sam3x_ek", "mcus": ["atsam3x8h"], "name": "WM8731 example for SAM3X_EK", "quickstart": {}, "type": "application", "uri": {"sam3x": "sam.components.audio.codec.wm8731.example.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3X-EK"], "category": [], "description": "Unit test application for the WM8731 module.", "id": "sam.components.audio.codec.wm8731.unit_tests.sam3x_ek", "mcus": ["atsam3x8h"], "name": "WM8731 unit test for SAM3X_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3x": "sam.components.audio.codec.wm8731.unit_tests.sam3x_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": ["Clocks", "Peripheral Event System", "Timers"], "description": "Example application to calibrate the 8MHz internal RC clock source and set up a USART for the Embedded Debugger.", "id": "sam0.applications.osc8_calib.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "8MHz Oscillator Calibration Application", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.osc8_calib.samd21_xplained_pro/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03242", "name": "AT03242"}], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "", "id": "sam0.drivers.ac#callback", "mcus": ["sam0"], "name": "AC - Analog Comparator (Callback APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_ac_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_ac_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_ac_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__ac__group.html", "samd21": "samd21/html/group__asfdoc__sam0__ac__group.html", "samr21": "samr21/html/group__asfdoc__sam0__ac__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03243", "name": "AT03243"}], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "", "id": "sam0.drivers.adc#callback", "mcus": ["sam0"], "name": "ADC - Analog-to-Digital Converter (Callback APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_adc_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_adc_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_adc_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__adc__group.html", "samd21": "samd21/html/group__asfdoc__sam0__adc__group.html", "samr21": "samr21/html/group__asfdoc__sam0__adc__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03244", "name": "AT03244"}], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "", "id": "sam0.drivers.dac.appnote", "mcus": ["samd20", "samd21"], "name": "Application note for Digital-to-Analog(DAC)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_dac_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_dac_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__dac__group.html", "samd21": "samd21/html/group__asfdoc__sam0__dac__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT07627", "name": "AT07627"}], "asf_type": "applications", "boards": [""], "category": ["Communication", "Communication"], "description": "Complete driver API reference manual.", "id": "sam0.applications.asf_programmers_manual.atsamd21", "mcus": ["unspecified-samd21"], "name": "ASF Manual (SAM D21)", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.asf_programmers_manual.atsamd21/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Sensors"], "description": "Driver for the AT30TSE75X Series Temperature Sensor.", "id": "sam0.components.sensor.at30tse75x", "mcus": ["sam0"], "name": "AT30TSE75X Temperature Sensor", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_at30tse75x_qs.html"], "samd21": ["samd21/html/asfdoc_sam0_at30tse75x_qs.html"], "samr21": ["samr21/html/asfdoc_sam0_at30tse75x_qs.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__at30tse75x__group.html", "samd21": "samd21/html/group__asfdoc__sam0__at30tse75x__group.html", "samr21": "samr21/html/group__asfdoc__sam0__at30tse75x__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Communication", "Wireless"], "description": "This module is used by default in a single processor approach and by NCP(Network Co-Processor) for a two processor approach.This module includes the whole IEEE 802.15.4 MAC Stack including the MAC ,TAL and PAL Layer source code and should be included only for MAC applications or if the Highest Stack Layer is MAC.The \"AVR2025-TAL\" module need not be added if this module is included since it pulls that module automaticlly,If TFA features needs to be added ,the \"AVR2025-TFA\" module needs to be added and the same transceiver selected in this module should be selected .For applications requiring Serial I/O communication the \"Serial I/o-Host\" or \"Serial I/O-NCP\" module should be included along with his module.", "id": "thirdparty.wireless.avr2025_mac#source", "mcus": ["atxmega256a3u", "atxmega256a3bu", "atxmega256a3", "uc3a3_a4", "sam4l", "sam4s", "sam4e", "sam0", "atmega256rfr2", "atmega2564rfr2", "atmega128rfa1"], "name": "AVR2025 - IEEE 802.15.4 MAC Stack v3.1.1", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__mac.html", "sam4e": "sam4e/html/group__group__mac.html", "sam4l": "sam4l/html/group__group__mac.html", "sam4s": "sam4s/html/group__group__mac.html", "samd20": "samd20/html/group__group__mac.html", "samd21": "samd21/html/group__group__mac.html", "samr21": "samr21/html/group__group__mac.html", "uc3a3_a4": "uc3a3_a4/html/group__group__mac.html", "xmegaa": "xmegaa/html/group__group__mac.html", "xmegaau": "xmegaau/html/group__group__mac.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "The Transceiver Abstraction Layer (TAL) implements the transceiver specific functionalities.This module is necessary for  TAL applications,i.e when the Highest Stack Layer is TAL .The transceiver to be used is  selected with the help of this module.When a application requires TFA(Transceiver Feature Access)features to be included and the Highest Layer is TAL the \"AVR2025 - TFA\" module should be included instead of this module since the TFA module inturn includes this TAL module.For MAC and Other Higher Layer applications this module will be automatically added for eg.This module is a sub module of AVR2025 - IEEE 802.15.4 MAC or AVR2102 - RF4Control.", "id": "thirdparty.wireless.avr2025_mac.source.tal", "mcus": ["atxmega256a3u", "atxmega256a3bu", "atxmega256a3", "uc3a3_a4", "sam4l", "sam4s", "sam4e", "sam0", "atmega256rfr2", "atmega2564rfr2", "atmega128rfa1"], "name": "AVR2025 - TAL", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__tal.html", "sam4e": "sam4e/html/group__group__tal.html", "sam4l": "sam4l/html/group__group__tal.html", "sam4s": "sam4s/html/group__group__tal.html", "samd20": "samd20/html/group__group__tal.html", "samd21": "samd21/html/group__group__tal.html", "samr21": "samr21/html/group__group__tal.html", "uc3a3_a4": "uc3a3_a4/html/group__group__tal.html", "xmegaa": "xmegaa/html/group__group__tal.html", "xmegaau": "xmegaau/html/group__group__tal.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "The Additional hardware features provided by the ATMEL Transceivers are handled by the Transciever Feature Access(TFA) module.Including this module automatically includes the necessary TAL module also, hence it is not necessary to use the AVR2025-TAL Module while using this one.For MAC and RF4Control Applications that requires TFA features the same transceiver that was selected in those modules should also be selected here.", "id": "thirdparty.wireless.avr2025_mac.source.tfa", "mcus": ["atxmega256a3u", "atxmega256a3bu", "atxmega256a3", "uc3a3_a4", "sam4l", "sam4s", "sam4e", "sam0", "atmega256rfr2", "atmega2564rfr2", "atmega128rfa1"], "name": "AVR2025 - TFA", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__tfa.html", "sam4e": "sam4e/html/group__group__tfa.html", "sam4l": "sam4l/html/group__group__tfa.html", "sam4s": "sam4s/html/group__group__tfa.html", "samd20": "samd20/html/group__group__tfa.html", "samd21": "samd21/html/group__group__tfa.html", "samr21": "samr21/html/group__group__tfa.html", "uc3a3_a4": "uc3a3_a4/html/group__group__tfa.html", "xmegaa": "xmegaa/html/group__group__tfa.html", "xmegaau": "xmegaau/html/group__group__tfa.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "Serial Interface Module acts as a interface for  converting stream of command bytes to corresponding MAC Api's", "id": "thirdparty.wireless.avr2025_mac.addons.serial_if", "mcus": ["atxmega256a3u", "atxmega256a3bu", "atxmega256a3", "uc3a3_a4", "sam4l", "sam4s", "sam4e", "sam0", "atmega256rfr2", "atmega2564rfr2", "atmega128rfa1"], "name": "AVR2025-MAC Serial Interface Module", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__mac__serial__if.html", "sam4e": "sam4e/html/group__group__mac__serial__if.html", "sam4l": "sam4l/html/group__group__mac__serial__if.html", "sam4s": "sam4s/html/group__group__mac__serial__if.html", "samd20": "samd20/html/group__group__mac__serial__if.html", "samd21": "samd21/html/group__group__mac__serial__if.html", "samr21": "samr21/html/group__group__mac__serial__if.html", "uc3a3_a4": "uc3a3_a4/html/group__group__mac__serial__if.html", "xmegaa": "xmegaa/html/group__group__mac__serial__if.html", "xmegaau": "xmegaau/html/group__group__mac__serial__if.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Communication", "Wireless"], "description": "Light Weight Mesh Stack", "id": "thirdparty.wireless.avr2130_lwmesh", "mcus": ["atxmega256a3u", "atmega256rfr2", "atmega2564rfr2", "atmega128rfa1", "atxmega256a3bu", "sam0", "sam4e", "sam4s", "sam4l"], "name": "AVR2130 - LW MESH v1.2.1", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__lwmesh.html", "sam4e": "sam4e/html/group__group__lwmesh.html", "sam4l": "sam4l/html/group__group__lwmesh.html", "sam4s": "sam4s/html/group__group__lwmesh.html", "samd20": "samd20/html/group__group__lwmesh.html", "samd21": "samd21/html/group__group__lwmesh.html", "samr21": "samr21/html/group__group__lwmesh.html", "xmegaau": "xmegaau/html/group__group__lwmesh.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D21 Xplained Pro"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC card. This example is interesting to start a specific development on SD/MMC card without a file system.", "id": "common2.components.memory.sd_mmc.example1.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Basic SD/MMC card example for SAMD21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common2.components.memory.sd_mmc.example1.samd21_xplained_pro/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03789", "name": "AT03789"}], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Driver for the SAM D20/D21/R21 Brown Out Detector(s). Provides a unified interface for the configuration and management of the BOD modules, including the threshold voltages and desired hardware actions.", "id": "sam0.drivers.bod", "mcus": ["samd20", "samd21", "samr21"], "name": "BOD - Brown Out Detector", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_bod_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_bod_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_bod_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__bod__group.html", "samd21": "samd21/html/group__asfdoc__sam0__bod__group.html", "samr21": "samr21/html/group__asfdoc__sam0__bod__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Service for calculating 32-bit CRC according to IEEE 802.3 for either single or multiple data blocks, regardless of size and address alignment.", "id": "common.services.crc32", "mcus": ["sam0"], "name": "CRC-32 calculation", "quickstart": {"samd20": ["samd20/html/common_services_crc32_quickstart.html"], "samd21": ["samd21/html/common_services_crc32_quickstart.html"], "samr21": ["samr21/html/common_services_crc32_quickstart.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__common__services__crc32.html", "samd21": "samd21/html/group__common__services__crc32.html", "samr21": "samr21/html/group__common__services__crc32.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Thread-safe, buffered debug print service for use with FreeRTOS, with output via SERCOM UART.\nMay also be used without FreeRTOS, but will then not be thread-safe nor have efficient waiting when buffer is full.\nTested with FreeRTOS v7.4.2.", "id": "common.services.freertos.dbg_print", "mcus": ["samd20", "samd21"], "name": "Debug Print (FreeRTOS)", "quickstart": {"samd20": ["samd20/html/asfdoc_common_freertos_dbg_print_exqsg.html"], "samd21": ["samd21/html/asfdoc_common_freertos_dbg_print_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__common__freertos__dbg__print__group.html", "samd21": "samd21/html/group__asfdoc__common__freertos__dbg__print__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Systick based delay routines.", "id": "common2.services.delay#systick", "mcus": ["sam0"], "name": "Delay routines", "quickstart": {}, "type": "module", "uri": {"samd21": "samd21/html/group__group__common__services__delay.html", "samr21": "samr21/html/group__group__common__services__delay.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT07683", "name": "AT07683"}], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for the SAM D21/R21 Direct Memory Access Controller. Provides a unified interface for the configuration and management of the DMAC module.", "id": "sam0.drivers.dma", "mcus": ["samd21", "samr21"], "name": "DMAC - Direct Memory Access Controller", "quickstart": {"samd21": ["samd21/html/asfdoc_sam0_dma_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_dma_exqsg.html"]}, "type": "module", "uri": {"samd21": "samd21/html/group__asfdoc__sam0__dma__group.html", "samr21": "samr21/html/group__asfdoc__sam0__dma__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication"], "description": "EDBG I2C Information Interface Demo.", "id": "sam0.applications.edbg_i2c_info_interface.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "EDBG I2C Information Interface Demo for SAM D21", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.edbg_i2c_info_interface.samd21_xplained_pro/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03265", "name": "AT03265"}], "asf_type": "services", "boards": [], "category": ["Memory"], "description": "EEPROM Emulator service for SAM D20/D21/R21, providing a EEPROM-like safe non-volatile data storage in FLASH memory for user application configuration data.", "id": "sam0.services.eeprom_emulator", "mcus": ["sam0"], "name": "EEPROM Emulator Service", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_eeprom_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_eeprom_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_eeprom_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__eeprom__group.html", "samd21": "samd21/html/group__asfdoc__sam0__eeprom__group.html", "samr21": "samr21/html/group__asfdoc__sam0__eeprom__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03245", "name": "AT03245"}], "asf_type": "drivers", "boards": [], "category": ["Peripheral Event System"], "description": "", "id": "sam0.drivers.events#hook", "mcus": ["samd20", "samd21", "samr21"], "name": "EVSYS - Event System with interupt hooks support", "quickstart": {"samd21": ["samd21/html/asfdoc_samd20_events_exqsg.html", "samd21/html/asfdoc_sam0_events_exqsg.html"], "samr21": ["samr21/html/asfdoc_samd20_events_exqsg.html", "samr21/html/asfdoc_sam0_events_exqsg.html"]}, "type": "module", "uri": {"samd21": "samd21/html/group__asfdoc__sam0__events__group.html", "samr21": "samr21/html/group__asfdoc__sam0__events__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03246", "name": "AT03246"}], "asf_type": "drivers", "boards": [], "category": ["Interrupt"], "description": "", "id": "sam0.drivers.extint#callback", "mcus": ["samd20", "samd21", "samr21"], "name": "EXTINT - External Interrupt (Callback APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_samd0_extint_exqsg.html"], "samd21": ["samd21/html/asfdoc_samd0_extint_exqsg.html"], "samr21": ["samr21/html/asfdoc_samd0_extint_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__extint__group.html", "samd21": "samd21/html/group__asfdoc__sam0__extint__group.html", "samr21": "samr21/html/group__asfdoc__sam0__extint__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Generates the output binary to use with the USB Host MSC Bootloader application for SAM D21.", "id": "sam0.applications.usb_fw_gen.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Firmware Generator for USB Host MSC Bootloader with FatFS for SAMD21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.usb_fw_gen.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "", "id": "thirdparty.os.freertos.version#8.0.1", "mcus": ["sam0"], "name": "FreeRTOS - Kernel 8.0.1", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__group__common__services__os__freertos.html", "samd21": "samd21/html/group__group__common__services__os__freertos.html", "samr21": "samr21/html/group__group__common__services__os__freertos.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Simple FreeRTOS demo application which demonstrates tasks, queues and semaphores. This demo requires the OLED1 Xplained Pro.", "id": "common.services.freertos.oled1_xpro_example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "FreeRTOS demo using OLED1 Xplained Pro, for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.freertos.oled1_xpro_example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Simple FreeRTOS demo application which demonstrates tasks, queues and semaphores, using lowpower tickless features of FreeRTOS. This demo requires the OLED1 Xplained Pro.", "id": "common.services.freertos.oled1_tickless_xpro_example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "FreeRTOS tickless demo using OLED1 Xplained Pro, for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.freertos.oled1_tickless_xpro_example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "The Getting Started example will help new users get familiar with SAM D21/R21 Xplained Pro.", "id": "sam0.applications.getting-started.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Getting Started for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.getting-started.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "A simple menu system for the monochrome graphic library.", "id": "common2.services.gfx_mono.menu", "mcus": ["sam0"], "name": "GFX Monochrome - Menu System", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__common2__gfx__mono__menu.html", "samd21": "samd21/html/group__asfdoc__common2__gfx__mono__menu.html", "samr21": "samr21/html/group__asfdoc__common2__gfx__mono__menu.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "A graphical library optimized for monochrome LCD displays.", "id": "common2.services.gfx_mono", "mcus": ["sam0"], "name": "GFX Monochrome - Monochrome Graphic Library", "quickstart": {"samd20": ["samd20/html/asfdoc_common2_gfx_mono_quickstart.html"], "samd21": ["samd21/html/asfdoc_common2_gfx_mono_quickstart.html"], "samr21": ["samr21/html/asfdoc_common2_gfx_mono_quickstart.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__common2__gfx__mono.html", "samd21": "samd21/html/group__asfdoc__common2__gfx__mono.html", "samr21": "samr21/html/group__asfdoc__common2__gfx__mono.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "A simple spinner/spin control for the monochrome graphic library.", "id": "common2.services.gfx_mono.spinctrl", "mcus": ["sam0"], "name": "GFX Monochrome - Spinner/Spin control widget", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__common2__gfx__mono__spinctrl.html", "samd21": "samd21/html/group__asfdoc__common2__gfx__mono__spinctrl.html", "samr21": "samr21/html/group__asfdoc__common2__gfx__mono__spinctrl.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "System font for the monochrome graphical library. This driver provides a low-level static system font to use with displays. It is a light weight implementation graphical fonts, with limited flexibility. Excellent for printing system messages and debug output to a display. Is also typically used in less fancy graphical applications, where selections of fonts is not important, but rather low flash and RAM footprint.", "id": "common2.services.gfx_mono.font", "mcus": ["sam0"], "name": "GFX Monochrome - System Font", "quickstart": {"samd20": ["samd20/html/asfdoc_common2_gfx_mono_font_quickstart.html"], "samd21": ["samd21/html/asfdoc_common2_gfx_mono_font_quickstart.html"], "samr21": ["samr21/html/asfdoc_common2_gfx_mono_font_quickstart.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__common2__gfx__mono__sysfont.html", "samd21": "samd21/html/group__asfdoc__common2__gfx__mono__sysfont.html", "samr21": "samr21/html/group__asfdoc__common2__gfx__mono__sysfont.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "Memory"], "description": "I2C Slave Bootloader for SAM D20/D21/R21.", "id": "sam0.applications.i2c_slave_bootloader.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "I2C Slave bootloader for SAM D21", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.i2c_slave_bootloader.samd21_xplained_pro/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT07451", "name": "AT07451"}], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "", "id": "sam0.drivers.i2s#callback", "mcus": ["samd21"], "name": "I2S - Inter-IC Sound Controller (Callback APIs)", "quickstart": {"samd21": ["samd21/html/asfdoc_sam0_i2s_exqsg.html"]}, "type": "module", "uri": {"samd21": "samd21/html/group__asfdoc__sam0__i2s__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "IOPORT - General purpose I/O driver that includes functions for various I/O operations (set direction, set/get pin value, toggle pins etc.) Common API for XMEGA, UC3 and SAM.", "id": "common.services.ioport#5", "mcus": ["samd20", "samd21"], "name": "IOPORT - General purpose I/O service", "quickstart": {"samd20": ["samd20/html/ioport_quickstart.html"], "samd21": ["samd21/html/ioport_quickstart.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__ioport__group.html", "samd21": "samd21/html/group__ioport__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": ["CPU", "I/O", "Interrupt"], "description": "Example application to toggle the board LED when a button is pressed, using various device drivers.", "id": "sam0.applications.led_toggle.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "LED Toggle Application", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.led_toggle.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Communication", "Wireless"], "description": "The LWMEsh based WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo_module", "mcus": ["atxmega256a3u", "atmega256rfr2", "atmega2564rfr2", "atmega128rfa1", "atxmega256a3bu", "sam0", "sam4e", "sam4s", "sam4l"], "name": "LWMesh-WSNDemo Application", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__wsndemo.html", "sam4e": "sam4e/html/group__group__wsndemo.html", "sam4l": "sam4l/html/group__group__wsndemo.html", "sam4s": "sam4s/html/group__group__wsndemo.html", "samd20": "samd20/html/group__group__wsndemo.html", "samd21": "samd21/html/group__group__wsndemo.html", "samr21": "samr21/html/group__group__wsndemo.html", "xmegaau": "xmegaau/html/group__group__wsndemo.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03247", "name": "AT03247"}], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for the SAM D20/D21/R21 Non-Volatile Memory controller. Provides a unified interface for the erasing, reading and writing of data to and from the various non-volatile memories of the device, including executable FLASH memory and user configuration pages.", "id": "sam0.drivers.nvm", "mcus": ["samd20", "samd21", "samr21"], "name": "NVM - Non-Volatile Memory", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_nvm_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_nvm_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_nvm_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__nvm__group.html", "samd21": "samd21/html/group__asfdoc__sam0__nvm__group.html", "samr21": "samr21/html/group__asfdoc__sam0__nvm__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03229", "name": "AT03229"}], "asf_type": "drivers", "boards": [], "category": ["CPU"], "description": "Driver for the SAM D20/D21/R21 Peripheral Access Controller. Provides a unified interface for the locking and unlocking of peripherals on the device peripheral busses, to protect them against inadvertent writes due to application errors.", "id": "sam0.drivers.pac", "mcus": ["samd20", "samd21", "samr21"], "name": "PAC - Peripheral Access Controller", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_pac_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_pac_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_pac_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__pac__group.html", "samd21": "samd21/html/group__asfdoc__sam0__pac__group.html", "samr21": "samr21/html/group__asfdoc__sam0__pac__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Communication", "Wireless"], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.component", "mcus": ["atxmega256a3u", "atxmega256a3bu", "atxmega256a3", "uc3a3_a4", "sam4l", "sam4s", "sam4e", "sam0", "atmega256rfr2", "atmega2564rfr2", "atmega128rfa1"], "name": "Performance Analyzer Application", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__perf__analyzer.html", "sam4e": "sam4e/html/group__group__perf__analyzer.html", "sam4l": "sam4l/html/group__group__perf__analyzer.html", "sam4s": "sam4s/html/group__group__perf__analyzer.html", "samd20": "samd20/html/group__group__perf__analyzer.html", "samd21": "samd21/html/group__group__perf__analyzer.html", "samr21": "samr21/html/group__group__perf__analyzer.html", "uc3a3_a4": "uc3a3_a4/html/group__group__perf__analyzer.html", "xmegaa": "xmegaa/html/group__group__perf__analyzer.html", "xmegaau": "xmegaau/html/group__group__perf__analyzer.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03248", "name": "AT03248"}], "asf_type": "drivers", "boards": [], "category": ["I/O"], "description": "Driver for the SAM D20/D21/R21 PORT module. Provides a unified interface for the configuration and management of the physical device GPIO pins, including input/output state control.", "id": "sam0.drivers.port", "mcus": ["samd20", "samd21", "samr21"], "name": "PORT - GPIO Pin Control", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_port_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_port_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_port_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__port__group.html", "samd21": "samd21/html/group__asfdoc__sam0__port__group.html", "samr21": "samr21/html/group__asfdoc__sam0__port__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "", "id": "sam.services.qtouch.devspecific.sam0.samd#samd21", "mcus": ["samd21"], "name": "QTouch Library for SAMD20/D21", "quickstart": {}, "type": "module", "uri": {"samd21": "samd21/html/group__group__thirdparty__qtouch__devspecific__sam0__samd.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03266", "name": "AT03266"}], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "sam0.drivers.rtc#calendar_callback", "mcus": ["samd20", "samd21", "samr21"], "name": "RTC - Real Time Counter in Calendar Mode (Callback APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_rtc_calendar_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_rtc_calendar_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_rtc_calendar_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__rtc__calendar__group.html", "samd21": "samd21/html/group__asfdoc__sam0__rtc__calendar__group.html", "samr21": "samr21/html/group__asfdoc__sam0__rtc__calendar__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03249", "name": "AT03249"}], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "", "id": "sam0.drivers.rtc#count_callback", "mcus": ["samd20", "samd21", "samr21"], "name": "RTC - Real Time Counter in Count Mode (Callback APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_rtc_count_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_rtc_count_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_rtc_count_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__rtc__count__group.html", "samd21": "samd21/html/group__asfdoc__sam0__rtc__count__group.html", "samr21": "samr21/html/group__asfdoc__sam0__rtc__count__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "SAM D20/D21 implementation of AT25DFx SerialFlash driver with vectored master SPI.", "id": "common2.components.memory.serial_flash.at25dfx#vectored_master_spi#sam0", "mcus": ["samd20", "samd21"], "name": "SAM D20/D21 implementation of AT25DFx SerialFlash with vectored master SPI", "quickstart": {"samd20": ["samd20/html/asfdoc_common2_at25dfx_exqsg.html"], "samd21": ["samd21/html/asfdoc_common2_at25dfx_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__common2__at25dfx__group.html", "samd21": "samd21/html/group__asfdoc__common2__at25dfx__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "This examples configures the ADC as a sleepwalking peripheral, using the RTC for conversion timing, to monitor the input voltage, and alert the application when the voltage goes below a predefined voltage. The ADC is setup to do hardware averaging to smooth the resulting voltage readings.", "id": "sam0.applications.vcc_monitor.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "SAM D21 ADC VCC Monitor Example", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.vcc_monitor.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common2.services.delay.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "SAM D21 Xplained Pro Delay Service Example", "quickstart": {}, "type": "application", "uri": {"samd21": "common2.services.delay.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "SAMD20/D21 is running with QTouch library enabled.", "id": "sam.applications.samd_qtouch_mutlcap_example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "SAMD21 QTouch Mutual Capacitance Example on SAMD21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "sam.applications.samd_qtouch_mutlcap_example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "SAMD20/D21 is running with QTouch library enabled.", "id": "sam.applications.samd_qtouch_selfcap_example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "SAMD21 QTouch Self Capacitance Example on SAMD21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "sam.applications.samd_qtouch_selfcap_example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D21 Xplained Pro"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common2.components.memory.sd_mmc.example2.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "SD/MMC card example with FatFs for SAMD21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common2.components.memory.sd_mmc.example2.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "SD/MMC stack for SD / MMC / SDIO cards. SPI interface is supported. This includes the basic functions to install, read and write a SD/SDIO/MMC card. This module in standalone is used mainly for SDIO application.", "id": "common2.components.memory.sd_mmc#spi", "mcus": ["sam0"], "name": "SD/MMC stack on SPI interface", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__sd__mmc__stack__group.html", "samd21": "samd21/html/group__sd__mmc__stack__group.html", "samr21": "samr21/html/group__sd__mmc__stack__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "SPI master driver for the SAM D20/D21/R21 SERCOM module with vectored I/O, also known as scatter/gather I/O. Vectored I/O means that the driver can transfer bytes to and/or from a series of non-contiguous buffers in a single transaction, without the need to split it up into one transaction per buffer.\nThis driver requires interrupts to be enabled.", "id": "sam0.drivers.sercom.spi_master_vec", "mcus": ["samd20", "samd21", "samr21"], "name": "SERCOM SPI - Serial Peripheral Interface (Master Mode, Vectored I/O)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_sercom_spi_master_vec_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_sercom_spi_master_vec_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_sercom_spi_master_vec_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__sercom__spi__master__vec__group.html", "samd21": "samd21/html/group__asfdoc__sam0__sercom__spi__master__vec__group.html", "samr21": "samr21/html/group__asfdoc__sam0__sercom__spi__master__vec__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03255", "name": "AT03255"}], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "", "id": "sam0.drivers.sercom.spi#polled", "mcus": ["sam0"], "name": "SERCOM SPI - Serial Peripheral Interface (Polled APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_sercom_spi_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_sercom_spi_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_sercom_spi_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__sercom__spi__group.html", "samd21": "samd21/html/group__asfdoc__sam0__sercom__spi__group.html", "samr21": "samr21/html/group__asfdoc__sam0__sercom__spi__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03256", "name": "AT03256"}], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "", "id": "sam0.drivers.sercom.usart#callback", "mcus": ["samd20", "samd21", "samr21"], "name": "SERCOM USART - Serial Communications (Callback APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_sercom_usart_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_sercom_usart_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_sercom_usart_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__sercom__usart__group.html", "samd21": "samd21/html/group__asfdoc__sam0__sercom__usart__group.html", "samr21": "samr21/html/group__asfdoc__sam0__sercom__usart__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "Enables Support for  UART communication", "id": "thirdparty.wireless.addons.sio2host#uart#sam0", "mcus": ["sam0"], "name": "Serial I/O - Host using UART", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__group__sio2host__uart.html", "samd21": "samd21/html/group__group__sio2host__uart.html", "samr21": "samr21/html/group__group__sio2host__uart.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "Enables Support for  UART communication", "id": "thirdparty.wireless.addons.sio2ncp#uart#1", "mcus": ["sam0"], "name": "Serial I/O - NCP Using UART", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__group__sio2ncp__uart.html", "samd21": "samd21/html/group__group__sio2ncp__uart.html", "samr21": "samr21/html/group__group__sio2ncp__uart.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Power Management"], "description": "The sleep manager provides functions for centralized management of sleep modes. Common API for SAM, UC3 and XMEGA.", "id": "common.services.basic.sleepmgr#5", "mcus": ["samd20", "samd21", "samr21"], "name": "Sleep manager - SAMD implementation", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__sleepmgr__group.html", "samd21": "samd21/html/group__sleepmgr__group.html", "samr21": "samr21/html/group__sleepmgr__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": ["Analog Conversion", "Audio", "Peripheral Event System", "Timers"], "description": "Plays a embedded raw sound recording using the DAC of the SAM D20/D21 devices.", "id": "sam0.applications.dac_sound_player.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Sound Player for the SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.dac_sound_player.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the SSD1306 OLED controller through 4-wire SPI. Note: Controller inside display UG-2832HSWEG04 OLED (128 x 32, Monochrome). This display is available on SAM D20/D21/R21 Xplained Pro", "id": "common2.components.display.ssd1306", "mcus": ["sam0"], "name": "SSD1306 OLED controller", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__ssd1306__oled__controller__group.html", "samd21": "samd21/html/group__ssd1306__oled__controller__group.html", "samr21": "samr21/html/group__ssd1306__oled__controller__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common2.components.display.ssd1306.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "SSD1306 OLED Controller example for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common2.components.display.ssd1306.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Common standard serial I/O management driver that implements a stdio serial interface on SAM devices.", "id": "sam0.utils.stdio.stdio_serial", "mcus": ["samd20", "samd21", "samr21"], "name": "Standard serial I/O (stdio)", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__group__common__utils__stdio__stdio__serial.html", "samd21": "samd21/html/group__group__common__utils__stdio__stdio__serial.html", "samr21": "samr21/html/group__group__common__utils__stdio__stdio__serial.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Driver for the SAM D21 Clock management units. Provides a unified interface for the configuration and management of the various clocks in the device, including the bus and generic peripheral clocks.", "id": "sam0.drivers.system.clock#samd21", "mcus": ["samd21"], "name": "SYSTEM - Clock Management for SAMD21", "quickstart": {"samd21": ["samd21/html/asfdoc_sam0_system_clock_exqsg.html"]}, "type": "module", "uri": {"samd21": "samd21/html/group__asfdoc__sam0__system__clock__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03260", "name": "AT03260"}], "asf_type": "drivers", "boards": [], "category": ["CPU", "Clocks", "I/O"], "description": "Driver for the SAM D20/D21/R21 core system modules. Provides a unified interface for the configuration and management of the core device functionality required for a functional system.", "id": "sam0.drivers.system", "mcus": ["samd20", "samd21", "samr21"], "name": "SYSTEM - Core System Driver", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__system__group.html", "samd21": "samd21/html/group__asfdoc__sam0__system__group.html", "samr21": "samr21/html/group__asfdoc__sam0__system__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03262", "name": "AT03262"}], "asf_type": "drivers", "boards": [], "category": ["I/O"], "description": "Driver for the SAM D20/D21/R21 Pin Multiplexer. Provides a unified interface for the configuration and routing of physical device I/O pins to peripherals within the device.", "id": "sam0.drivers.system.pinmux", "mcus": ["sam0"], "name": "SYSTEM - I/O Pin Multiplexer", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_system_pinmux_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_system_pinmux_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_system_pinmux_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__system__pinmux__group.html", "samd21": "samd21/html/group__asfdoc__sam0__system__pinmux__group.html", "samr21": "samr21/html/group__asfdoc__sam0__system__pinmux__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03261", "name": "AT03261"}], "asf_type": "drivers", "boards": [], "category": ["Interrupt"], "description": "Driver for the SAM D21 Interrupt System. Provides a unified interface for the configuration and management interrupts within the device, including the enabling, disabling and entering, leaving of critical sections.", "id": "sam0.drivers.system.interrupt#samd21", "mcus": ["samd21"], "name": "SYSTEM - Interrupt Driver", "quickstart": {"samd21": ["samd21/html/asfdoc_sam0_system_interrupt_exqsg.html"]}, "type": "module", "uri": {"samd21": "samd21/html/group__asfdoc__sam0__system__interrupt__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03263", "name": "AT03263"}], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "", "id": "sam0.drivers.tc#polled", "mcus": ["sam0"], "name": "TC - Timer Counter (Polled APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_tc_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_tc_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_tc_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__tc__group.html", "samd21": "samd21/html/group__asfdoc__sam0__tc__group.html", "samr21": "samr21/html/group__asfdoc__sam0__tc__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT07058", "name": "AT07058"}], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "", "id": "sam0.drivers.tcc#callback", "mcus": ["samd21", "samr21"], "name": "TCC - Timer Counter for Control Applications (Callback APIs)", "quickstart": {"samd21": ["samd21/html/asfdoc_sam0_tcc_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_tcc_exqsg.html"]}, "type": "module", "uri": {"samd21": "samd21/html/group__asfdoc__sam0__tcc__group.html", "samr21": "samr21/html/group__asfdoc__sam0__tcc__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": ["Graphics"], "description": "Example application to play Tic-tac-toe on the OLED1 Xplained Pro extension wing.", "id": "sam0.applications.tictactoe.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Tic-Tac-Toe Application", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.tictactoe.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Core functions for the unit test framework.", "id": "common.utils.unit_test#sam0", "mcus": ["sam0"], "name": "Unit test framework - SAM0 implementation", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__test__suite__group.html", "samd21": "samd21/html/group__test__suite__group.html", "samr21": "samr21/html/group__test__suite__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the AC module testing all functionality against hardware.", "id": "sam0.drivers.ac.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 AC driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.ac.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the ADC module testing all functionality against hardware.", "id": "sam0.drivers.adc.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 ADC Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.adc.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the EEPROM emulator service testing all functionality against hardware.", "id": "sam0.services.eeprom_emulator.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 EEPROM emulator service", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.services.eeprom_emulator.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the Event System module testing all functionality against hardware.", "id": "sam0.drivers.events.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 Event system driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.events.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the external interrupt module testing all functionality against hardware.", "id": "sam0.drivers.extint.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 External Interrupt Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.extint.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the I2S module testing all functionality against hardware.", "id": "sam0.drivers.i2s.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 I2S Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.i2s.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the NVM module.", "id": "sam0.drivers.nvm.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 NVM Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.nvm.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the SERCOM SPI interface module testing all functionality against hardware.", "id": "sam0.drivers.sercom.spi.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 SPI Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.sercom.spi.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the TC interface module testing all functionality against hardware.", "id": "sam0.drivers.tc.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 TC Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.tc.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the TCC interface module testing all functionality against hardware.", "id": "sam0.drivers.tcc.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 TCC Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.tcc.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the SERCOM USART interface module testing all functionality against hardware.", "id": "sam0.drivers.sercom.usart.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 USART Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.sercom.usart.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "Unit test for the Watchdog driver", "id": "sam0.drivers.wdt.unit_test.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAM D21 WDT Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "sam0.drivers.wdt.unit_test.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D21 Xplained Pro"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC card.", "id": "common2.components.memory.sd_mmc.unit_tests.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "Unit Tests for the SAMD21 SD/MMC driver", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "common2.components.memory.sd_mmc.unit_tests.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.", "id": "common.services.basic.serial#5", "mcus": ["sam0"], "name": "USART - Serial interface- SAM implementation for devices with only USART", "quickstart": {"samd20": ["samd20/html/serial_quickstart.html"], "samd21": ["samd21/html/serial_quickstart.html"], "samr21": ["samr21/html/serial_quickstart.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__serial__group.html", "samd21": "samd21/html/group__serial__group.html", "samr21": "samr21/html/group__serial__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Composite Device CDC serial and MSC for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.composite.device.example.cdc_msc.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Composite Device HID keyboard and MSC for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.composite.device.example.hidkbd_msc.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.composite.device.example.hids_cdc_msc.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Composite Device HID mouse and MSC for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.composite.device.example.hidms_msc.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device CDC Example for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.cdc.device.example.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device CDC unit tests for SAM D21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "common.services.usb.class.cdc.device.unit_tests.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device HID Generic for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.hid.device.generic.example.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device HID Keyboard for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.hid.device.keyboard.example.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device HID Keyboard unit tests for SAM D21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "common.services.usb.class.hid.device.keyboard.unit_tests.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device HID Mouse for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.hid.device.mouse.example.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device HID Mouse unit tests for SAM D21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "common.services.usb.class.hid.device.mouse.unit_tests.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Device Mass Storage for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.msc.device.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.samd21_xpro", "mcus": ["atsamd21j18a"], "name": "USB Device Mass Storage unit tests for SAM D21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "common.services.usb.class.msc.device.unit_tests.samd21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Device PHDC for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.phdc.device.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Device Vendor Class Example for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.vendor.device.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Dual Role (Device and Host) HID mouse for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.hid.dual.mouse.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Host CDC for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.cdc.host.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.samd21_xplained_pro_host", "mcus": ["atsamd21j18a"], "name": "USB Host core tests on SAM D21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samd21": "common.services.usb.host.tests.targets.samd21_xplained_pro_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Host HID Mouse for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.hid.host.mouse.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": [], "description": "USB Host MSC Bootloader application for SAM D21 for safe and secure firmware upgrade.", "id": "sam0.applications.usb_bootloader.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Host MSC Bootloader with FatFS for SAMD21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.usb_bootloader.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example2.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Host MSC FatFS and HID Mouse for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.composite.host.example2.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example2.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Host MSC with FatFS for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.msc.host.example2.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Vendor implementation.", "id": "common.services.usb.class.vendor.host.example.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "USB Host Vendor for SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "common.services.usb.class.vendor.host.example.samd21_xplained_pro/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03264", "name": "AT03264"}], "asf_type": "drivers", "boards": [], "category": ["CPU", "Clocks", "Timers"], "description": "", "id": "sam0.drivers.wdt#callback", "mcus": ["sam0"], "name": "WDT - Watchdog Timer (Callback APIs)", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_wdt_exqsg.html"], "samd21": ["samd21/html/asfdoc_sam0_wdt_exqsg.html"], "samr21": ["samr21/html/asfdoc_sam0_wdt_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__wdt__group.html", "samd21": "samd21/html/group__asfdoc__sam0__wdt__group.html", "samr21": "samr21/html/group__asfdoc__sam0__wdt__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D21 Xplained Pro"], "category": ["Clocks", "Peripheral Event System", "Timers"], "description": "Hardware based XOSC32K external 32KHz crystal oscillator runtime failure detector SAM D20/D21/R21 devices.", "id": "sam0.applications.xosc32k_fail_detector.samd21_xplained_pro", "mcus": ["atsamd21j18a"], "name": "XOSC32K Failure Detector for the SAM D21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd21": "sam0.applications.xosc32k_fail_detector.samd21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["Clocks", "Peripheral Event System", "Timers"], "description": "Example application to calibrate the 8MHz internal RC clock source and set up a USART for the Embedded Debugger.", "id": "sam0.applications.osc8_calib.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "8MHz Oscillator Calibration Application", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.osc8_calib.samd20_xplained_pro/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03665", "name": "AT03665"}], "asf_type": "applications", "boards": [""], "category": ["Communication", "Communication"], "description": "Complete driver API reference manual.", "id": "sam0.applications.asf_programmers_manual.atsamd20", "mcus": ["unspecified-samd20"], "name": "ASF Manual (SAM D20)", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.asf_programmers_manual.atsamd20/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common2.components.memory.data_flash.at45dbx.example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "AT45DBX DataFlash example for SAMD20", "quickstart": {}, "type": "application", "uri": {"samd20": "common2.components.memory.data_flash.at45dbx.example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D20 Xplained Pro"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC card. This example is interesting to start a specific development on SD/MMC card without a file system.", "id": "common2.components.memory.sd_mmc.example1.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Basic SD/MMC card example for SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "common2.components.memory.sd_mmc.example1.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Loop based delay routines.", "id": "common2.services.delay#cycle", "mcus": ["sam0"], "name": "Delay routines", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__group__common__services__delay.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Communication"], "description": "Provides the interface to configure and use the KSZ8851SNL MAC.", "id": "sam0.components.ethernet_phy.ksz8851snl", "mcus": ["samd20"], "name": "Ethernet Physical Transceiver (ksz8851snl)", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__ksz8851snl__phy__controller__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03245", "name": "AT03245"}], "asf_type": "drivers", "boards": [], "category": ["Peripheral Event System"], "description": "", "id": "sam0.drivers.events#polled", "mcus": ["samd20", "samd21", "samr21"], "name": "EVSYS - Event System", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_events_exqsg.html", "samd20/html/asfdoc_samd20_events_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__events__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Simple FreeRTOS demo application which demonstrates tasks, queues and semaphores. This demo requires the OLED1 Xplained Pro.", "id": "common.services.freertos.oled1_xpro_example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "FreeRTOS demo using OLED1 Xplained Pro, for SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "common.services.freertos.oled1_xpro_example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Simple FreeRTOS demo application which demonstrates tasks, queues and semaphores, using lowpower tickless features of FreeRTOS. This demo requires the OLED1 Xplained Pro.", "id": "common.services.freertos.oled1_tickless_xpro_example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "FreeRTOS tickless demo using OLED1 Xplained Pro, for SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "common.services.freertos.oled1_tickless_xpro_example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Memory"], "description": "I2C Slave Bootloader for SAM D20/D21/R21.", "id": "sam0.applications.i2c_slave_bootloader.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "I2C Slave bootloader for SAM D20", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.i2c_slave_bootloader.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["CPU", "I/O", "Interrupt"], "description": "Example application to toggle the board LED when a button is pressed, using various device drivers.", "id": "sam0.applications.led_toggle.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "LED Toggle Application", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.led_toggle.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication"], "description": "Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support). This example uses the Ethernet extension (Micrel KSZ8851SNL PHY) on EXT1 for the MAC support.", "id": "thirdparty.lwip.raw_basic_http_example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "lwIP TCP/IP Stack basic HTTP example using Raw API for SAMD20 Xplained Pro (with Micrel KSZ8851SNL PHY)", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.lwip.raw_basic_http_example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "LWMesh-EDDemo Application:AT86RF233 REB-SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.samd20_xplained_pro_rf212b", "mcus": ["atsamd20j18"], "name": "LWMesh-Peer2Peer Application:AT86RF212B-SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.samd20_xplained_pro_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "LWMesh-Peer2Peer Application:AT86RF233-SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Tester app is designed to be used as a generic network processor and also performs automated testing for the stack.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.tester.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "LWMesh-Tester Application:AT86RF233-SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2130_lwmesh.apps.tester.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.samd20_xplained_pro_rf212b", "mcus": ["atsamd20j18"], "name": "LWMesh-WsnDemo Application:AT86RF212B-SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.samd20_xplained_pro_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "LWMesh-WsnDemo Application:AT86RF233-SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC Beacon Application Coordinator AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC Beacon Application Coordinator AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC Beacon Application Device AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC Beacon Application Device AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC No Beacon Application Coordinator AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC No Beacon Application Coordinator AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC No Beacon Application Device AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC No Beacon Application Device AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface Beacon FFD  AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface Beacon FFD  AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface Beacon RFD  AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface Beacon RFD  AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - No Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_ffd.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface NoBeacon FFD  AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_ffd.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - No Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_ffd.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface NoBeacon FFD  AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_ffd.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - No Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_rfd.ncp.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface NoBeacon RFD  AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_rfd.ncp.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - No Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_rfd.ncp.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "MAC Serial Interface NoBeacon RFD  AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_rfd.ncp.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samd20_rf212b_zb_xpro", "mcus": ["atsamd20j18"], "name": "Performance Analyzer Application AT86RF212B Zigbit(Carrier)-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samd20_rf212b_zb_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samd20_reb233_xpro", "mcus": ["atsamd20j18"], "name": "Performance Analyzer Application AT86RF233 REB-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samd20_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samd20_xplained_pro_rf233", "mcus": ["atsamd20j18"], "name": "Performance Analyzer Application AT86RF233-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samd20_xplained_pro_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "", "id": "sam.services.qtouch.devspecific.sam0.samd#samd20", "mcus": ["samd20"], "name": "QTouch Library for SAMD20/D21", "quickstart": {}, "type": "module", "uri": {"samd20": "samd20/html/group__group__thirdparty__qtouch__devspecific__sam0__samd.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "This examples configures the ADC as a sleepwalking peripheral, using the RTC for conversion timing, to monitor the input voltage, and alert the application when the voltage goes below a predefined voltage. The ADC is setup to do hardware averaging to smooth the resulting voltage readings.", "id": "sam0.applications.vcc_monitor.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SAM D20 ADC VCC Monitor Example", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.vcc_monitor.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common2.services.delay.example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SAM D20 Xplained Pro Delay Service Example", "quickstart": {}, "type": "application", "uri": {"samd20": "common2.services.delay.example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "SAMD20/D21 is running with QTouch library enabled.", "id": "sam.applications.samd_qtouch_mutlcap_example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SAMD20 QTouch Mutual Capacitance Example on SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "sam.applications.samd_qtouch_mutlcap_example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "SAMD20/D21 is running with QTouch library enabled.", "id": "sam.applications.samd_qtouch_selfcap_example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SAMD20 QTouch Self Capacitance Example on SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "sam.applications.samd_qtouch_selfcap_example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D20 Xplained Pro"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common2.components.memory.sd_mmc.example2.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SD/MMC card example with FatFs for SAMD20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "common2.components.memory.sd_mmc.example2.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Wireless", "Communication", "Wireless"], "description": "Serial Bridge acts as a bridge for performing serial communication between host and ncp", "id": "thirdparty.wireless.addons.serial_bridge.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Serial Bridge Application-SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "thirdparty.wireless.addons.serial_bridge.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["Analog Conversion", "Audio", "Peripheral Event System", "Timers"], "description": "Plays a embedded raw sound recording using the DAC of the SAM D20/D21 devices.", "id": "sam0.applications.dac_sound_player.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Sound Player for the SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.dac_sound_player.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Memory"], "description": "SPI Master Bootloader for SAM D20. AT45DBX dataflash component is used as SPI slave.", "id": "sam0.applications.spi_master_bootloader.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SPI Master bootloader for SAM D20", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.spi_master_bootloader.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["Communication", "Memory"], "description": "SPI Slave Bootloader for SAM D20. An external SPI Master programmer is required.", "id": "sam0.applications.spi_slave_bootloader.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SPI Slave bootloader for SAM D20", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.spi_slave_bootloader.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common2.components.display.ssd1306.example.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "SSD1306 OLED Controller example for SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "common2.components.display.ssd1306.example.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Driver for the SAM D20 Clock management units. Provides a unified interface for the configuration and management of the various clocks in the device, including the bus and generic peripheral clocks.", "id": "sam0.drivers.system.clock#samd20", "mcus": ["samd20"], "name": "SYSTEM - Clock Management for SAMD20", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_system_clock_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__system__clock__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03261", "name": "AT03261"}], "asf_type": "drivers", "boards": [], "category": ["Interrupt"], "description": "Driver for the SAM D20 Interrupt System. Provides a unified interface for the configuration and management interrupts within the device, including the enabling, disabling and entering, leaving of critical sections.", "id": "sam0.drivers.system.interrupt#samd20", "mcus": ["samd20"], "name": "SYSTEM - Interrupt Driver", "quickstart": {"samd20": ["samd20/html/asfdoc_sam0_system_interrupt_exqsg.html"]}, "type": "module", "uri": {"samd20": "samd20/html/group__asfdoc__sam0__system__interrupt__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["Graphics"], "description": "Example application to play Tic-tac-toe on the OLED1 Xplained Pro extension wing.", "id": "sam0.applications.tictactoe.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Tic-Tac-Toe Application", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.tictactoe.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the AC module testing all functionality against hardware.", "id": "sam0.drivers.ac.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 AC driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.ac.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the ADC module testing all functionality against hardware.", "id": "sam0.drivers.adc.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 ADC Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.adc.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the EEPROM emulator service testing all functionality against hardware.", "id": "sam0.services.eeprom_emulator.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 EEPROM emulator service", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.services.eeprom_emulator.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the Event System module testing all functionality against hardware.", "id": "sam0.drivers.events.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 Event system driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.events.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the external interrupt module testing all functionality against hardware.", "id": "sam0.drivers.extint.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 External Interrupt Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.extint.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the NVM module.", "id": "sam0.drivers.nvm.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 NVM Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.nvm.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the SERCOM SPI interface module testing all functionality against hardware.", "id": "sam0.drivers.sercom.spi.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 SPI Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.sercom.spi.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the TC interface module testing all functionality against hardware.", "id": "sam0.drivers.tc.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 TC Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.tc.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the SERCOM USART interface module testing all functionality against hardware.", "id": "sam0.drivers.sercom.usart.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 USART Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.sercom.usart.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM D20 Xplained Pro"], "category": [], "description": "Unit test for the Watchdog driver", "id": "sam0.drivers.wdt.unit_test.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAM D20 WDT Driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "sam0.drivers.wdt.unit_test.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM D20 Xplained Pro"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC card.", "id": "common2.components.memory.sd_mmc.unit_tests.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "Unit Tests for the SAMD20 SD/MMC driver", "quickstart": {}, "type": "unit-test", "uri": {"samd20": "common2.components.memory.sd_mmc.unit_tests.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM D20 Xplained Pro"], "category": ["Clocks", "Peripheral Event System", "Timers"], "description": "Hardware based XOSC32K external 32KHz crystal oscillator runtime failure detector SAM D20/D21/R21 devices.", "id": "sam0.applications.xosc32k_fail_detector.samd20_xplained_pro", "mcus": ["atsamd20j18"], "name": "XOSC32K Failure Detector for the SAM D20 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samd20": "sam0.applications.xosc32k_fail_detector.samd20_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "The Analog to Digital Converter is able to capture analog signals and transform them into digital format.", "id": "sam.drivers.adc#2", "mcus": ["sam4n", "samg"], "name": "ADC - Analog-to-digital Converter", "quickstart": {"sam4n": ["sam4n/html/sam_adc2_quickstart.html"], "samg": ["samg/html/sam_adc2_quickstart.html"]}, "type": "module", "uri": {"sam4n": "sam4n/html/group__sam__drivers__adc2__group.html", "samg": "samg/html/group__sam__drivers__adc2__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Analog Conversion"], "description": "Enhanced resolution example of ADC on SAM4N-XPlained-Pro.", "id": "sam.drivers.adc.adc_enhanced_resolution_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "ADC Enhanced Resolution Example on SAM4N-XPlained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.adc.adc_enhanced_resolution_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "ADC Temperature Sensor Example on SAM4N-XPlained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.adc.adc_temp_sensor_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test for SAM ADC driver.", "id": "sam.drivers.adc.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "ADC unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.adc.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4N Xplained Pro"], "category": ["Memory"], "description": "Unit test application for the at30tse75x driver.", "id": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "AT30TSE unit tests for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Basic FreeRTOS Example for SAM4N-XPLAINED-PRO", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.freertos.sam_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4N Xplained Pro"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Basic SD/MMC/SDIO card example for SAM4N Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.components.memory.sd_mmc.example1.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Boot application located at flash + 32KB.", "id": "sam.applications.starter_kit_bootloader_demo.bootloader.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Bootloader for Starter Kit Bootloader Demo for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.applications.starter_kit_bootloader_demo.bootloader.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Chipid example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.chipid.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "CMSIS Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.utils.cmsis.cm4_cmsis_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Common API for Clocks Control / Example 1 for SAM4N", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.basic.clock.example1.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Common API for Clocks Control / Example 2 for SAM4N", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.basic.clock.example2.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Common API for Clocks Control / Example 3 for SAM4N", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.basic.clock.example3.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM devices.", "id": "common.services.basic.sleepmgr.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Common API for Sleep Management  / Example for SAM4N-XPLAINED-PRO", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.basic.sleepmgr.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Common IOPORT service example 1 for SAM4N", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.ioport.example1.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Toggles output pin controlling LED0", "id": "common.services.ioport.example2.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Common IOPORT service example 2 for SAM4N", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.ioport.example2.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Common IOPORT service example 3 for SAM4N", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.ioport.example3.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Basic Cortex-M4 bit banding example.", "id": "sam.utils.cmsis.cm4_bit_banding_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Cortex-M Bit Banding Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.utils.cmsis.cm4_bit_banding_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "DAC Sinewave Example on SAM4N-XPlained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.dacc.sinewave_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Drivers RTC Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.rtc.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "Driver for the AT30TSE75X EEPROM memory. It provides functions for initialization and read/write operations.", "id": "common.components.memory.eeprom.at30tse75x", "mcus": ["sam4sd32", "sam4n", "sam4c", "sam4cm", "samg"], "name": "EEPROM AT30TSE75X", "quickstart": {}, "type": "module", "uri": {"sam4c": "sam4c/html/group__common__components__memory__eeprom__at30tse75x__group.html", "sam4cm": "sam4cm/html/group__common__components__memory__eeprom__at30tse75x__group.html", "sam4n": "sam4n/html/group__common__components__memory__eeprom__at30tse75x__group.html", "sam4s": "sam4s/html/group__common__components__memory__eeprom__at30tse75x__group.html", "samg": "samg/html/group__common__components__memory__eeprom__at30tse75x__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "FatFS example for SAM4N Xplained Pro, the file system will be created on the external DataFlash AT45DBX.", "id": "common.services.fs.fatfs.access_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "FatFS example for SAM4N Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.fs.fatfs.access_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "FatFS unit tests for SAM4N Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "common.services.fs.fatfs.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Flash EFC unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.services.flash.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Flash Program Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.services.flash.program_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Flash Read Unique Id Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.services.flash.read.unique.id_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "The demonstration program makes the on-board LED blink at a fixed rate.", "id": "sam.applications.getting-started.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Getting Started for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.applications.getting-started.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "GPBR unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.gpbr.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4N Xplained Pro"], "category": ["Memory"], "description": "Provide an application example using the Atmel AT30TSE75x temperature sensor. The sensor requires an I2C bus as a low level communication interface. This interface can be implemented using TWI controller for SAM devices.", "id": "common.components.memory.eeprom.at30tse75x.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "I/O1 EEPROM and Temperature Sensor Example for SAM4N Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.components.memory.eeprom.at30tse75x.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Low Power Demo for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.applications.low_power.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "This demo for the SAM4N Xplained Pro features the following extensions: IO1, OLED1.", "id": "sam.applications.starter_kit_bootloader_demo.main.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Main Application for Starter Kit Bootloader Demo for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.applications.starter_kit_bootloader_demo.main.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Basic example of MATRIX on SAM4N_XPLAINED_PRO.", "id": "sam.drivers.matrix.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "MATRIX Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.matrix.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Peripheral DMA Controller Example on SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.pdc.pdc_uart_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM4N when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "PMC Clock Failure Detection Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M4 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "PMC Clock Switching for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.pmc.pmc_clock_switching_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "PMC unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.pmc.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "PWM unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.pwm.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "RSTC unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.rstc.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Basic example of RTT on SAM4N Xplained Pro.", "id": "sam.drivers.rtt.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "RTT example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.rtt.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USART.", "id": "common.utils.stdio.stdio_serial.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SAM4N Xplained Pro Serial Standard I/O Example", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.utils.stdio.stdio_serial.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4N Xplained Pro"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SD/MMC card example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "common.components.memory.sd_mmc.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4N Xplained Pro"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SD/MMC card example with FatFs for SAM4N Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.components.memory.sd_mmc.example2.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4N Xplained Pro"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM4N Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.services.basic.usart_spi_master_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Smart card service API for communicating with smart card using ISO7816 protocol.", "id": "sam.services.smart_card#ioport", "mcus": ["sam4e", "sam4n", "sam4c", "sam4cm"], "name": "Smart Card - ISO7816 smart card using IOPORT", "quickstart": {}, "type": "module", "uri": {"sam4c": "sam4c/html/group__sam__services__smart__card__group.html", "sam4cm": "sam4cm/html/group__sam__services__smart__card__group.html", "sam4e": "sam4e/html/group__sam__services__smart__card__group.html", "sam4n": "sam4n/html/group__sam__services__smart__card__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SPI Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.spi.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SPI PDC Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.spi.spi_pdc_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SPI unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.spi.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common.components.display.ssd1306.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SSD1306 OLED Controller example for SAM4N-XPLAINED-PRO", "quickstart": {}, "type": "application", "uri": {"sam4n": "common.components.display.ssd1306.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "SUPC unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.supc.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#19", "mcus": ["sam4n"], "name": "System Clock Control - SAM4N implementation", "quickstart": {"sam4n": ["sam4n/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam4n": "sam4n/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "TC Capture Waveform Example on SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.tc.tc_capture_waveform_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use the SAM TWI driver to access an external serial EEPROM chip.", "id": "sam.drivers.twi.twi_eeprom_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "TWI EEPROM Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.twi.twi_eeprom_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "TWI SLAVE Example for SAM4N-Xplained_Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.twi.twi_slave_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "USART ISO7816 Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.usart.usart_iso7816_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "USART Synchronous Example for SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.usart.usart_synchronous_example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4N-Xplained-Pro.", "id": "sam.drivers.wdt.example.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "Watchdog Timer Example on SAM4N-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"sam4n": "sam.drivers.wdt.example.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4N Xplained Pro"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4n_xplained_pro", "mcus": ["atsam4n16c"], "name": "WDT unit Test for SAM4N-Xplained-Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4n": "sam.drivers.wdt.unit_tests.sam4n_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "ADC example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.adc.adc_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "ADC threshold wake-up example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.adc.adc_threshold_wakeup_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3N-EK"], "category": ["Memory"], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The SerialFlash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "AT25DFx example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3N-EK"], "category": [], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The dataflash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "AT25DFx example for SAM3N_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "common.components.memory.serial_flash.at25dfx.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3N-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Basic FreeRTOS Example for SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.freertos.sam_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3N-EK"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Basic SD/MMC/SDIO card example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.components.memory.sd_mmc.example1.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Chipid example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.chipid.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3N-EK"], "category": [], "description": "Basic Cortex-M3 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm3_cmsis_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "CMSIS Example for SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.utils.cmsis.cm3_cmsis_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Common API for Clocks Control / Example 1 for SAM3N", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.basic.clock.example1.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Common API for Clocks Control / Example 2 for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.basic.clock.example2.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Common API for Clocks Control / Example 3 for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.basic.clock.example3.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Common IOPORT service example 3 for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.ioport.example3.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3N-EK"], "category": [], "description": "Basic Cortex-M3 bit banding example.", "id": "sam.utils.cmsis.cm3_bit_banding_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Cortex-M bit banding example for SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.utils.cmsis.cm3_bit_banding_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "DAC Sinewave Example on SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.dacc.sinewave_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Drivers RTC Example for SAM3N", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.rtc.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3N-EK"], "category": [], "description": "FatFS example for SAM3N_EK, the file system will be created on the external DataFlash. An external DataFlash AT45DBX is required for this example.", "id": "common.services.fs.fatfs.access_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "FatFS example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.fs.fatfs.access_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Flash efc unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.services.flash.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Flash Program Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.services.flash.program_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Flash Read Unique Id Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.services.flash.read.unique.id_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for the FreeRTOS SPI interface layer.", "id": "common.services.freertos_sam_spi.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "FreeRTOS SPI Interface Layer for SAM3N-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "common.services.freertos_sam_spi.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "FreeRTOS USART Interface Layer for SAM3N-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "common.services.freertos_sam_usart.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3N-EK"], "category": [], "description": "The demonstration program makes two LEDs on the board blink at a fixed rate. The blinking can be stopped using two buttons (one for each LED).", "id": "sam.applications.getting-started.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Getting Started for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.applications.getting-started.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "GPBR unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.drivers.gpbr.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3N-EK"], "category": [], "description": "This example demonstrates how to configure lcd controller ili9225 to control the LCD on the board.", "id": "sam.components.display.ili9225.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "ILI9225 LCD Controller example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.components.display.ili9225.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3N-EK"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Low Power demo for SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.applications.low_power.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Basic example of MATRIX on SAM3N-EK.", "id": "sam.drivers.matrix.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "MATRIX example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.matrix.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "NVM example for sam4s16c on SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.drivers.nvm.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3N-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Peripheral Control FreeRTOS Example for SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.freertos.peripheral_control.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Peripheral DMA Controller Example on SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.pdc.pdc_uart_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.alternate_function_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "PIO Alternate Function Example for SAM3N", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.pio.alternate_function_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "PMC clock failure detection example for SAM3N", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M3 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "PMC clock switching for SAM3N", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.pmc.pmc_clock_switching_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "PMC unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.drivers.pmc.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Clocks"], "description": "This example will show how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "PWM LED example for SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.pwm.pwm_led_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "PWM unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.drivers.pwm.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3N-EK"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the board of Atmel SAM devices.", "id": "common.services.qtouch.generic.sam.qtouch.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "QTouch Method Example Application on SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.qtouch.generic.sam.qtouch.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "RSTC unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.drivers.rstc.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Basic example of RTT on SAM3N-EK.", "id": "sam.drivers.rtt.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "RTT example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.rtt.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3N-EK"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "SD/MMC card example for SAM3N_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "common.components.memory.sd_mmc.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3N-EK"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam3n_ek", "mcus": ["atsam3n4c"], "name": "SD/MMC card example with FatFs for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.components.memory.sd_mmc.example2.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.basic.usart_spi_master_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.spi.master_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Shared SAM3 API for SPI Master Mode / Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "common.services.basic.spi.master_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "SPI Example for SAM3N", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.spi.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "SPI PDC Example for SAM3N", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.spi.spi_pdc_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "SPI unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.drivers.spi.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "SUPC unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.drivers.supc.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#12", "mcus": ["sam3n"], "name": "System Clock Control - SAM3N implementation", "quickstart": {"sam3n": ["sam3n/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam3n": "sam3n/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "TC Capture Waveform Example on SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.tc.tc_capture_waveform_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "TWI SLAVE Example for SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.twi.twi_slave_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "USART Hardware Handshaking Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.usart.usart_hard_handshaking_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "USART IrDA Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.usart.usart_irda_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "USART ISO7816 Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.usart.usart_iso7816_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "USART RS485 Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.usart.usart_rs485_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "USART Serial Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.usart.usart_serial_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "USART Synchronous Example for SAM3N_EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.usart.usart_synchronous_example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM3N-EK.", "id": "sam.drivers.wdt.example.sam3n_ek", "mcus": ["atsam3n4c"], "name": "Watchdog Timer Example on SAM3N-EK", "quickstart": {}, "type": "application", "uri": {"sam3n": "sam.drivers.wdt.example.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3N-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam3n_ek", "mcus": ["atsam3n4c"], "name": "WDT unit Test for SAM3N", "quickstart": {}, "type": "unit-test", "uri": {"sam3n": "sam.drivers.wdt.unit_tests.sam3n_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Analog Conversion"], "description": "Enhanced resolution example of ADC on SAMG53 Xplained Pro.", "id": "sam.drivers.adc.adc_enhanced_resolution_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "ADC Enhanced Resolution Example on SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.adc.adc_enhanced_resolution_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Basic FreeRTOS Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.freertos.sam_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAMG53 Xplained Pro"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Basic SD/MMC/SDIO card example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.components.memory.sd_mmc.example1.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Chipid example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.chipid.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "CMSIS Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.cm4_cmsis_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Common API for Clocks Control / Example 1 for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.basic.clock.example1.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Common API for Clocks Control / Example 2 for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.basic.clock.example2.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Common API for Clocks Control / Example 3 for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.basic.clock.example3.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM devices.", "id": "common.services.basic.sleepmgr.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Common API for Sleep Management  / Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.basic.sleepmgr.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Common IOPORT service example 1 for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.ioport.example1.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Toggles output pin controlling LED0", "id": "common.services.ioport.example2.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Common IOPORT service example 2 for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.ioport.example2.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Common IOPORT service example 3 for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.ioport.example3.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Drivers RTC Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.rtc.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Flash Program Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.services.flash.program_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Flash Read Unique Id Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.services.flash.read.unique.id_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "TWIHS interface abstraction layer to the FreeRTOS kernel.", "id": "common.services.layer.freertos.twihs#0", "mcus": ["samg"], "name": "FreeRTOS - TWIHS Interface Layer", "quickstart": {}, "type": "module", "uri": {"samg": "samg/html/group__freertos__twihs__peripheral__control__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "The demonstration program makes the on-board LED blink at a fixed rate.", "id": "sam.applications.getting-started.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Getting Started for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.applications.getting-started.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAMG53 Xplained Pro"], "category": ["Memory"], "description": "Provide an application example using the Atmel AT30TSE75x temperature sensor. The sensor requires an I2C bus as a low level communication interface. This interface can be implemented using TWI controller for SAM devices.", "id": "common.components.memory.eeprom.at30tse75x.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "I/O1 EEPROM and Temperature Sensor Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.components.memory.eeprom.at30tse75x.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Driver for the I2SC - Inter-IC Sound Controller module. I2SC provides a 5-wire, bidirectional, synchronous, digital audio link with off-chip audio devices: ISDI, ISDO, IWS, ISCK and IMCK pins.", "id": "sam.drivers.i2sc", "mcus": ["samg53", "samg54"], "name": "I2SC - Inter-IC Sound Controller", "quickstart": {}, "type": "module", "uri": {"samg": "samg/html/group__group__sam__drivers__i2sc.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "low_power.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Low Power Demo for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "low_power.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Basic example of MATRIX on SAMG53_XPLAINED_PRO.", "id": "sam.drivers.matrix.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "MATRIX Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.matrix.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The Memory-to-Memory module allows the PDC perform memory to memory transfer without CPU intervention.", "id": "sam.drivers.mem2mem", "mcus": ["samg"], "name": "MEM2MEM - Memory to Memory", "quickstart": {"samg": ["samg/html/sam_m2m_quickstart.html"]}, "type": "module", "uri": {"samg": "samg/html/group__sam__drivers__m2m__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "The example shows how to use Memory-to-Memory (MEM2MEM) to transfer data from memory to memory via PDC.", "id": "sam.drivers.mem2mem.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Memory to Memory Transfer Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.mem2mem.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Audio"], "description": "This example demonstrates the use of the PDMIC module and reads data from a PDM microphone.", "id": "sam.drivers.pdm.pdm_example1.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "PDM Example 1 on SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.pdm.pdm_example1.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The Pulse Density Modulation Interface Controller (PDMIC) is a PDM interface controller and decoder that is compatible with mono/stereo PDM format. It integrates a clock generator driving the PDM microphones and embeds filters which decimate the incoming bitstream to obtain most common audio rates.", "id": "sam.drivers.pdm", "mcus": ["samg53", "samg54"], "name": "PDMIC - Pulse Density Modulation Interface Controller", "quickstart": {"samg": ["samg/html/sam_pdm_quickstart.html"]}, "type": "module", "uri": {"samg": "samg/html/group__sam__drivers__pdm__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Peripheral Control FreeRTOS Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.services.freertos.peripheral_control.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Peripheral DMA Controller Example on SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.pdc.pdc_uart_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Basic example of RTT on SAMG53 Xplained Pro.", "id": "sam.drivers.rtt.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "RTT example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.rtt.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Basic Cortex-M4 bit banding example.", "id": "sam.utils.cmsis.cm4_bit_banding_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "RTT example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.cm4_bit_banding_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP class marks Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP convolution Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP dotproduct Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP FFT bin Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP FIR Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP graphic equalizer Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP matrix Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP Signal Converge Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP Sin Cos Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SAM4 DSP Variance Example for SAMG53-Xplained-Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAMG53 Xplained Pro"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SD/MMC card example with FatFs for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "common.components.memory.sd_mmc.example2.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SPI Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.spi.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "SPI PDC Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.spi.spi_pdc_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#21", "mcus": ["samg"], "name": "System Clock Control - SAMG implementation", "quickstart": {"samg": ["samg/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"samg": "samg/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "TC Capture Waveform Example on SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.tc.tc_capture_waveform_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The Two-wire Interface (TWIHS) interconnects components on a unique two-wire bus, made up of one clock line and one data line with speeds of up to 400 Kbits per second and 3.4 Mbit/s for slave, based on a byte-oriented transfer format. It can be used with any Atmel Two-wire Interface bus Serial EEPROM and I2C compatible device such as Real Time Clock (RTC), Dot Matrix/Graphic LCD Controllers and Temperature Sensor, to name but a few. The TWIHS is programmable as a master or a slave with sequential or single-byte access. Multiple master capability is supported.", "id": "sam.drivers.twihs", "mcus": ["samg"], "name": "TWI - Two-wire Interface High Speed", "quickstart": {}, "type": "module", "uri": {"samg": "samg/html/group__sam__drivers__twihs__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use the SAM TWI driver to access an external serial EEPROM chip.", "id": "sam.drivers.twi.twi_eeprom_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "TWI EEPROM Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.twi.twi_eeprom_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "TWI SLAVE Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.twi.twi_slave_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "TWI Two-Wire Interface High Speed service. Common API.", "id": "common.services.basic.twihs#0", "mcus": ["samg"], "name": "TWIHS - Two-Wire Interface High Speed- SAM implementation", "quickstart": {"samg": ["samg/html/twihs_quickstart.html"]}, "type": "module", "uri": {"samg": "samg/html/group__twihs__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWIHS peripheral in slave mode.", "id": "sam.drivers.twihs.twihs_slave_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "TWIHS SLAVE Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.twihs.twihs_slave_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": [], "description": "This example shows the sleepwalking function of UART.", "id": "sam.drivers.uart.uart_sleepwalking_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "UART Sleepwalking Example on SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.uart.uart_sleepwalking_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "USART Synchronous Example for SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.usart.usart_synchronous_example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAMG53 Xplained Pro"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAMG53 Xplained Pro.", "id": "sam.drivers.wdt.example.samg53_xplained_pro", "mcus": ["atsamg53n19"], "name": "Watchdog Timer Example on SAMG53 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samg": "sam.drivers.wdt.example.samg53_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Calendar service Provides functionality to convert UNIX timestamps to dates and back. Also provides functionality for calculating the time difference between dates and converting timestamps to dates with different time zones and back.", "id": "common.services.calendar", "mcus": ["avr"], "name": "Calendar functionality", "quickstart": {"mega": ["mega/html/calendar_quickstart.html"], "tiny": ["tiny/html/calendar_quickstart.html"], "uc3a": ["uc3a/html/calendar_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/calendar_quickstart.html"], "uc3b": ["uc3b/html/calendar_quickstart.html"], "uc3c": ["uc3c/html/calendar_quickstart.html"], "uc3d": ["uc3d/html/calendar_quickstart.html"], "uc3l": ["uc3l/html/calendar_quickstart.html"], "xmegaa": ["xmegaa/html/calendar_quickstart.html"], "xmegaau": ["xmegaau/html/calendar_quickstart.html"], "xmegab": ["xmegab/html/calendar_quickstart.html"], "xmegac": ["xmegac/html/calendar_quickstart.html"], "xmegad": ["xmegad/html/calendar_quickstart.html"], "xmegae": ["xmegae/html/calendar_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__calendar__group.html", "tiny": "tiny/html/group__calendar__group.html", "uc3a": "uc3a/html/group__calendar__group.html", "uc3a3_a4": "uc3a3_a4/html/group__calendar__group.html", "uc3b": "uc3b/html/group__calendar__group.html", "uc3c": "uc3c/html/group__calendar__group.html", "uc3d": "uc3d/html/group__calendar__group.html", "uc3l": "uc3l/html/group__calendar__group.html", "xmegaa": "xmegaa/html/group__calendar__group.html", "xmegaau": "xmegaau/html/group__calendar__group.html", "xmegab": "xmegab/html/group__calendar__group.html", "xmegac": "xmegac/html/group__calendar__group.html", "xmegad": "xmegad/html/group__calendar__group.html", "xmegae": "xmegae/html/group__calendar__group.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": ["Interrupt"], "description": "Driver for global enabling and disabling of interrupts.", "id": "common.utils.interrupt#mega", "mcus": ["mega", "tiny"], "name": "Interrupt management - megaAVR and tinyAVR implementation", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__interrupt__group.html", "tiny": "tiny/html/group__interrupt__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Driver for the Analog Comparator (AC). It provides functions for configuring and using the on-chip AC.", "id": "xmega.drivers.ac", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "AC - Analog Comparator", "quickstart": {"xmegaa": ["xmegaa/html/xmega_ac_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_ac_quickstart.html"], "xmegab": ["xmegab/html/xmega_ac_quickstart.html"], "xmegac": ["xmegac/html/xmega_ac_quickstart.html"], "xmegad": ["xmegad/html/xmega_ac_quickstart.html"], "xmegae": ["xmegae/html/xmega_ac_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__analog__comparator__group.html", "xmegaau": "xmegaau/html/group__analog__comparator__group.html", "xmegab": "xmegab/html/group__analog__comparator__group.html", "xmegac": "xmegac/html/group__analog__comparator__group.html", "xmegad": "xmegad/html/group__analog__comparator__group.html", "xmegae": "xmegae/html/group__analog__comparator__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "xmega.drivers.adc#0", "mcus": ["xmegaa", "xmegaau"], "name": "ADC - XMEGA A/AU Implementation", "quickstart": {"xmegaa": ["xmegaa/html/adc_quickstart.html"], "xmegaau": ["xmegaau/html/adc_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__adc__group.html", "xmegaau": "xmegaau/html/group__adc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Analog Conversion"], "description": "Offset and gain calibration for single-ended measurements using ADC with an external voltage supply, displayed on screen.", "id": "xmega.drivers.adc.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "ADC Calibration example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.adc.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Analog Conversion"], "description": "Interrupt-based 12-bit ADC conversion using the internal 1 V voltage reference. Channel 0 of the ADC is configured for single-ended measurements from the internal temperature sensor, and output on the display.", "id": "xmega.drivers.adc.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "ADC Internal temperature sensor example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.adc.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "XMEGA ADC Demo application for XMEGA-A3BU Xplained.It shows how to use oversampling technique to increase the resolution of ADC. More information can be found from application note 'Atmel AVR1629:XMEGA ADC Oversampling' which is available in Atmel website.", "id": "xmega.applications.xmega_adc_oversampling_demo.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "ADC Oversampliong Demo application for XMEGA A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega_adc_oversampling_demo.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Analog Conversion"], "description": "This simple example shows how to use the new scan feature found in the XMEGA devices. Interrupt-based 12-bit ADC conversion using the internal 1 V voltage reference. Channel 0 of the ADC is configured for single-ended measurements from the internal temperature sensor.", "id": "xmega.drivers.adc.example3.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "ADC Scan example for XMEGA-A3BU Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.adc.example3.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Cryptography"], "description": "Driver for the AES (Advanced Encryption standard) crypto module. The AES crypto module performs encryption and decryption according to the Advanced Encryption Standard (FIPS-197). The module supports a 128-bit key and datablock.", "id": "xmega.drivers.aes", "mcus": ["xmegaa", "xmegaau", "xmegab", "atxmega384c3"], "name": "AES - Advanced Encryption Standard", "quickstart": {"xmegaa": ["xmegaa/html/xmega_aes_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_aes_quickstart.html"], "xmegab": ["xmegab/html/xmega_aes_quickstart.html"], "xmegac": ["xmegac/html/xmega_aes_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__aes__group.html", "xmegaau": "xmegaau/html/group__aes__group.html", "xmegab": "xmegab/html/group__aes__group.html", "xmegac": "xmegac/html/group__aes__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "", "id": "xmega.drivers.aes.unit_tests.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "AES driver unit tests on XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "xmega.drivers.aes.unit_tests.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "AT45DBX DataFlash example for atxmega256a3bu on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.components.memory.data_flash.at45dbx.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.stk600-rc044x_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "AT45DBX DataFlash example for STK600-RC044X", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.components.memory.data_flash.at45dbx.example.stk600-rc044x_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.stk600-rc064x_atxmega256a3u", "mcus": ["atxmega256a3u"], "name": "AT45DBX DataFlash example for STK600-RC064X", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.components.memory.data_flash.at45dbx.example.stk600-rc064x_atxmega256a3u/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "The pre-compiled QTouch Library, common and include files for AVR 8-bit devices. For more information on the QTouch Library, goto www.atmel.com/qtouchlib. For support queries, email touch@atmel.com.", "id": "config.common.services.qtouch.generic.avr8.xmega_a3bu_xplained.method#qtouch_method", "mcus": ["xmegaa3bu"], "name": "Atmel QTouch Library 4.4 - XMEGA-A3BU Xplained", "quickstart": {}, "type": "module", "uri": {"xmegaau": "xmegaau/html/group__group__common__services__qtouch.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "This module is responsible for encoding and decoding the serial bytes to/from Host into corresponding RF4Control APIs .", "id": "thirdparty.wireless.avr2102_rf4control.addons.serial_interface", "mcus": ["sam4l", "at32uc3a3256s", "atmega256rfr2", "atxmega256a3bu", "atxmega256a3u", "atsam4lc4c", "atsamr21g18a"], "name": "AVR2102 -Serial Interface support for RF4CE", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__sif__rf4ce.html", "sam4l": "sam4l/html/group__group__sif__rf4ce.html", "samr21": "samr21/html/group__group__sif__rf4ce.html", "uc3a3_a4": "uc3a3_a4/html/group__group__sif__rf4ce.html", "xmegaau": "xmegaau/html/group__group__sif__rf4ce.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Wireless", "Communication"], "description": "ZRC controller library for XMEGA256A3BU controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.zrc.ctr#3", "mcus": ["atxmega256a3bu", "atxmega256a3u", "atsamr21g18a", "atsam4lc4c", "atmega256rfr2", "at32uc3a3256s"], "name": "AVR2102-ZRC LIB For atxmega256a3bu Controller", "quickstart": {}, "type": "module", "uri": {"xmegaau": "xmegaau/html/group__group__rf4control.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics", "Touch"], "description": "Example application demonstrating a calculator using the widget toolkit.", "id": "common.applications.mxt143e_xplained_calc_demo.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Calculator example for the XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.applications.mxt143e_xplained_calc_demo.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["CPU"], "description": "Chip Reset Cause Access. Provides functions for getting and clearing the chip reset source. XMEGA implementation of common API.", "id": "common.services.basic.cpu#0", "mcus": ["xmega"], "name": "Chip Reset Cause Access - XMEGA implementation", "quickstart": {"xmegaa": ["xmegaa/html/reset_cause_quickstart.html"], "xmegaau": ["xmegaau/html/reset_cause_quickstart.html"], "xmegab": ["xmegab/html/reset_cause_quickstart.html"], "xmegac": ["xmegac/html/reset_cause_quickstart.html"], "xmegad": ["xmegad/html/reset_cause_quickstart.html"], "xmegae": ["xmegae/html/reset_cause_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__reset__cause__group.html", "xmegaau": "xmegaau/html/group__reset__cause__group.html", "xmegab": "xmegab/html/group__reset__cause__group.html", "xmegac": "xmegac/html/group__reset__cause__group.html", "xmegad": "xmegad/html/group__reset__cause__group.html", "xmegae": "xmegae/html/group__reset__cause__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Example demonstrating the use of Class B tests in a simulated application.", "id": "xmega.applications.xmega_a3bu_xplained_classb.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Class B example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega_a3bu_xplained_classb.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Common API for Clocks Control / Example 1 for XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.basic.clock.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Common API for Clocks Control / Example 2 for XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.basic.clock.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Unit test application for the common NVM driver.", "id": "common.drivers.nvm.unit_tests.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Common NVM driver unit tests for atxmega256a3bu on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.drivers.nvm.unit_tests.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["CPU"], "description": "Driver for CPU specific features. It provides functions for writing the CCP (Configuration Change Protection) register according to the timed sequence in the AVR XMEGA manual. Functions for getting the system reset cause and to do a soft reset of the microcontroller are also provided.", "id": "xmega.drivers.cpu", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "CPU specific features", "quickstart": {"xmegaa": ["xmegaa/html/xmega_ccp_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_ccp_quickstart.html"], "xmegab": ["xmegab/html/xmega_ccp_quickstart.html"], "xmegac": ["xmegac/html/xmega_ccp_quickstart.html"], "xmegad": ["xmegad/html/xmega_ccp_quickstart.html"], "xmegae": ["xmegae/html/xmega_ccp_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__ccp__group.html", "xmegaau": "xmegaau/html/group__ccp__group.html", "xmegab": "xmegab/html/group__ccp__group.html", "xmegac": "xmegac/html/group__ccp__group.html", "xmegad": "xmegad/html/group__ccp__group.html", "xmegae": "xmegae/html/group__ccp__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Cyclic Redundancy Check module driver.", "id": "xmega.drivers.crc", "mcus": ["xmegaau", "xmegab", "xmegac", "xmegae"], "name": "Cyclic Redundancy Check module driver", "quickstart": {"xmegaau": ["xmegaau/html/xmega_crc_quickstart.html"], "xmegab": ["xmegab/html/xmega_crc_quickstart.html"], "xmegac": ["xmegac/html/xmega_crc_quickstart.html"], "xmegae": ["xmegae/html/xmega_crc_quickstart.html"]}, "type": "module", "uri": {"xmegaau": "xmegaau/html/group__crc__group.html", "xmegab": "xmegab/html/group__crc__group.html", "xmegac": "xmegac/html/group__crc__group.html", "xmegae": "xmegae/html/group__crc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Driver for the Digital to Analog Converter (DAC). It provides functions for configuring and using the DAC and its channels.", "id": "xmega.drivers.dac", "mcus": ["xmegaa1", "xmegaa1u", "xmegaa3", "xmegaa3u", "xmegaa3b", "xmegaa3bu", "xmegaa4", "xmegaa4u", "xmegae"], "name": "DAC - Digital to Analog Converter", "quickstart": {"xmegaa": ["xmegaa/html/dac_quickstart.html"], "xmegaau": ["xmegaau/html/dac_quickstart.html"], "xmegae": ["xmegae/html/dac_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__dac__group.html", "xmegaau": "xmegaau/html/group__dac__group.html", "xmegae": "xmegae/html/group__dac__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Loop based delay routines. Provides microseconds, milliseconds and second delays. Common API for SAM, UC3 and XMEGA.", "id": "common.services.delay#xmega", "mcus": ["xmega"], "name": "Delay routines", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__group__common__services__delay.html", "xmegaau": "xmegaau/html/group__group__common__services__delay.html", "xmegab": "xmegab/html/group__group__common__services__delay.html", "xmegac": "xmegac/html/group__group__common__services__delay.html", "xmegad": "xmegad/html/group__group__common__services__delay.html", "xmegae": "xmegae/html/group__group__common__services__delay.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Demo application for XMEGA-A3BU with monocrome display drivers, temperature and light sensor readout.", "id": "xmega.applications.xmega_a3bu_xplained_demo.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Demo application for XMEGA A3BU-Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega_a3bu_xplained_demo.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Cryptography"], "description": "Driver for the DES (Data Encryption Standard) crypto  module. It provides functions for DES, 3DES and CBC DES encryption and decryption.", "id": "xmega.drivers.des", "mcus": ["xmegaa", "xmegaau", "xmegab"], "name": "DES - Data Encryption Standard", "quickstart": {"xmegaa": ["xmegaa/html/xmega_des_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_des_quickstart.html"], "xmegab": ["xmegab/html/xmega_des_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__des__group.html", "xmegaau": "xmegaau/html/group__des__group.html", "xmegab": "xmegab/html/group__des__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Test all functions of the XMEGA DES driver.", "id": "xmega.drivers.des.unit_tests.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "DES driver unit tests on XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "xmega.drivers.des.unit_tests.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller"], "description": "Driver for the Direct Memory Access (DMA) controller. It provides functions for configuring and using the DMA controller. The DMA controller can transfer data between memories and peripherals with minimal CPU intervention.", "id": "xmega.drivers.dma", "mcus": ["xmegaa", "xmegaau", "xmegab"], "name": "DMA - Direct Memory Access", "quickstart": {"xmegaa": ["xmegaa/html/xmega_dma_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_dma_quickstart.html"], "xmegab": ["xmegab/html/xmega_dma_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__dma__group.html", "xmegaau": "xmegaau/html/group__dma__group.html", "xmegab": "xmegab/html/group__dma__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["DMA Controller"], "description": "Start a DMA transfer between two internal memory areas and upon completion verifies this by comparing those areas.", "id": "xmega.drivers.dma.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "DMA Example for XMEGA-B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.dma.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["DMA Controller"], "description": "Perform a range of test on the DMA module.", "id": "xmega.drivers.dma.unit_tests.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "DMA unit tests for XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "xmega.drivers.dma.unit_tests.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to read the device and the production signatures and output them on LEDs.", "id": "xmega.drivers.nvm.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Drivers NVM Example 1 for XMEGA A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.nvm.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to EEPROM memory : erase, write, read access and output status the display.", "id": "xmega.drivers.nvm.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Drivers NVM Example 2 for XMEGA A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.nvm.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to FLASH memory : erase, write, read access to application table and boot sections and output status on LEDs.", "id": "xmega.drivers.nvm.example3.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Drivers NVM Example 3 for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.nvm.example3.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to fuse and lock bits memory : read FUSEBYTE2, read and write lock bits.", "id": "xmega.drivers.nvm.example4.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Drivers NVM Example 4 for XMEGA A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.nvm.example4.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Interrupt"], "description": "Use the XMEGA PMIC to define Interrupt Service Routines (ISRs), to enable globally interrupts or individual interrupt levels, to demonstrate interruptability of lower interrupt levels.", "id": "xmega.drivers.pmic.example.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Drivers PMIC Example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.pmic.example.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for the External Bus Interface (EBI). Provides functions for connecting and accessing external peripheral and memory using the EBI.", "id": "xmega.drivers.ebi", "mcus": ["xmegaa1", "xmegaa1u"], "name": "EBI - External Bus Interface", "quickstart": {"xmegaa": ["xmegaa/html/xmega_ebi_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_ebi_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__ebi__group.html", "xmegaau": "xmegaau/html/group__ebi__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics"], "description": "Example showing how to use spinners.", "id": "common.services.gfx_mono.example.spinctrl.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Example for GFX Monochrome spinner widget on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.gfx_mono.example.spinctrl.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics"], "description": "Example showing how to use the system font driver to display text strings on a monochrome display.", "id": "common.services.gfx_mono.example.sysfont.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Example for GFX Monochrome System Font driver on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.gfx_mono.example.sysfont.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "An example application using both CRC-16 and CRC-32 using the I/O interface.", "id": "xmega.drivers.crc.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Example1 for CRC driver on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.crc.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "An example application performing CRC on FLASH memory.", "id": "xmega.drivers.crc.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Example2 for CRC driver on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.crc.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "An example application performing CRC on a DMA transaction.", "id": "xmega.drivers.crc.example3.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Example3 for CRC driver on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.crc.example3.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "FatFS example for XMEGA-A1 Xplained, the file system will be created on the external SDRAM.", "id": "common.services.fs.fatfs.access_example.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "FatFS example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.fs.fatfs.access_example.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "A simple menu system for the monochrome graphic library.", "id": "common.services.gfx_mono.menu", "mcus": ["xmega"], "name": "GFX Monochrome - Menu System", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__gfx__mono__menu.html", "xmegaau": "xmegaau/html/group__gfx__mono__menu.html", "xmegab": "xmegab/html/group__gfx__mono__menu.html", "xmegac": "xmegac/html/group__gfx__mono__menu.html", "xmegad": "xmegad/html/group__gfx__mono__menu.html", "xmegae": "xmegae/html/group__gfx__mono__menu.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "A graphical library optimized for monochrome LCD displays.", "id": "common.services.gfx_mono", "mcus": ["xmega"], "name": "GFX Monochrome - Monochrome Graphic Library", "quickstart": {"xmegaa": ["xmegaa/html/gfx_mono_quickstart.html"], "xmegaau": ["xmegaau/html/gfx_mono_quickstart.html"], "xmegab": ["xmegab/html/gfx_mono_quickstart.html"], "xmegac": ["xmegac/html/gfx_mono_quickstart.html"], "xmegad": ["xmegad/html/gfx_mono_quickstart.html"], "xmegae": ["xmegae/html/gfx_mono_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__gfx__mono.html", "xmegaau": "xmegaau/html/group__gfx__mono.html", "xmegab": "xmegab/html/group__gfx__mono.html", "xmegac": "xmegac/html/group__gfx__mono.html", "xmegad": "xmegad/html/group__gfx__mono.html", "xmegae": "xmegae/html/group__gfx__mono.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "A simple spinner/spin control for the monochrome graphic library.", "id": "common.services.gfx_mono.spinctrl", "mcus": ["xmega"], "name": "GFX Monochrome - Spinner/Spin control widget", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__gfx__mono__spinctrl.html", "xmegaau": "xmegaau/html/group__gfx__mono__spinctrl.html", "xmegab": "xmegab/html/group__gfx__mono__spinctrl.html", "xmegac": "xmegac/html/group__gfx__mono__spinctrl.html", "xmegad": "xmegad/html/group__gfx__mono__spinctrl.html", "xmegae": "xmegae/html/group__gfx__mono__spinctrl.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "System font for the monochrome graphical library. This driver provides a low-level static system font to use with displays. It is a light weight implementation graphical fonts, with limited flexibility. Excellent for printing system messages and debug output to a display. Is also typically used in less fancy graphical applications, where selections of fonts is not important, but rather low flash and RAM footprint.", "id": "common.services.gfx_mono.font", "mcus": ["xmega"], "name": "GFX Monochrome - System Font", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__gfx__mono__sysfont.html", "xmegaau": "xmegaau/html/group__gfx__mono__sysfont.html", "xmegab": "xmegab/html/group__gfx__mono__sysfont.html", "xmegac": "xmegac/html/group__gfx__mono__sysfont.html", "xmegad": "xmegad/html/group__gfx__mono__sysfont.html", "xmegae": "xmegae/html/group__gfx__mono__sysfont.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "Driver for general purpose I/O pins. Provides functions for initializing IO pins as input or output, and for reading, or setting/clearing/toggling pins. Common API. Deprecated; use common IOPORT service instead.", "id": "common.services.basic.gpio#0", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "GPIO - General purpose Input/Output", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__gpio__group.html", "xmegaau": "xmegaau/html/group__gpio__group.html", "xmegab": "xmegab/html/group__gpio__group.html", "xmegac": "xmegac/html/group__gpio__group.html", "xmegad": "xmegad/html/group__gpio__group.html", "xmegae": "xmegae/html/group__gpio__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Graphic Library example for the XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.gfx.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Memory"], "description": "Due to shortcomings of the GCC compiler for 8-bit AVR, custom functions are needed for access to data beyond the 64 kB boundary, i.e., addresses that are larger than 16-bit. This module supplies functions for copying a number of bytes between huge and 64 kB data memory space, and is needed solely for code compatibility across compilers. Common API.", "id": "common.services.basic.hugemem", "mcus": ["xmega"], "name": "Huge Memory Interface", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__hugemem__group.html", "xmegaau": "xmegaau/html/group__hugemem__group.html", "xmegab": "xmegab/html/group__hugemem__group.html", "xmegac": "xmegac/html/group__hugemem__group.html", "xmegad": "xmegad/html/group__hugemem__group.html", "xmegae": "xmegae/html/group__hugemem__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "A simple example for verifying that the ILI9341 low level driver works", "id": "common.components.display_controller.ili9341.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "ILI9341 Display Controller Example for A3BU-XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.components.display_controller.ili9341.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": ["Interrupt"], "description": "Driver for global enabling and disabling of interrupts.", "id": "common.utils.interrupt#xmega", "mcus": ["xmega"], "name": "Interrupt management - XMEGA implementation", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__interrupt__group.html", "xmegaau": "xmegaau/html/group__interrupt__group.html", "xmegab": "xmegab/html/group__interrupt__group.html", "xmegac": "xmegac/html/group__interrupt__group.html", "xmegad": "xmegad/html/group__interrupt__group.html", "xmegae": "xmegae/html/group__interrupt__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "IOPORT - General purpose I/O driver that includes functions for various I/O operations (set direction, set/get pin value, toggle pins etc.) Common API for XMEGA, UC3 and SAM.", "id": "common.services.ioport#0", "mcus": ["xmega", "xmegae", "xmegad", "xmegac", "xmegab", "xmegaau", "xmegaa"], "name": "IOPORT - General purpose I/O service", "quickstart": {"xmegaa": ["xmegaa/html/ioport_quickstart.html"], "xmegaau": ["xmegaau/html/ioport_quickstart.html"], "xmegab": ["xmegab/html/ioport_quickstart.html"], "xmegac": ["xmegac/html/ioport_quickstart.html"], "xmegad": ["xmegad/html/ioport_quickstart.html"], "xmegae": ["xmegae/html/ioport_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__ioport__group.html", "xmegaau": "xmegaau/html/group__ioport__group.html", "xmegab": "xmegab/html/group__ioport__group.html", "xmegac": "xmegac/html/group__ioport__group.html", "xmegad": "xmegad/html/group__ioport__group.html", "xmegae": "xmegae/html/group__ioport__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "This is the low level interface driver for HX8347A display controller. This driver is most commonly used in a combination with a display driver.", "id": "common.components.display_controller.hx8347a", "mcus": ["xmega"], "name": "LCD - HX8347A Display Controller", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__hx8347a__group.html", "xmegaau": "xmegaau/html/group__hx8347a__group.html", "xmegab": "xmegab/html/group__hx8347a__group.html", "xmegac": "xmegac/html/group__hx8347a__group.html", "xmegad": "xmegad/html/group__hx8347a__group.html", "xmegae": "xmegae/html/group__hx8347a__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "Provides a simple LED Chaser application with defined timing interval in ms between each LED.", "id": "common.applications.led_chaser.stk600-xmega256a3u", "mcus": ["atxmega256a3u"], "name": "LED Chaser Example for stk600-ATxmega256A3U", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.applications.led_chaser.stk600-xmega256a3u/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "Provides a simple LED Chaser application with defined timing interval in ms between each LED.", "id": "common.applications.led_chaser.stk600-xmega32a4u", "mcus": ["atxmega32a4u"], "name": "LED Chaser Example for stk600-ATxmega32A4U", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.applications.led_chaser.stk600-xmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "This demo sets up for low power consumption and steps through all power modes.", "id": "xmega.applications.low_power_demo_xmega.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Low Power Demo Application for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.low_power_demo_xmega.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atxmega256a3bu_xplained_rf231", "mcus": ["atxmega256a3bu"], "name": "LWMesh-EDDemo Application:AT86RF231-AtXmega256A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atxmega256a3bu_xplained_rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "LWMesh-EDDemo Application:AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3bu_xplained_rf212", "mcus": ["atxmega256a3bu"], "name": "LWMesh-Peer2Peer Application:AT86RF212-AtXmega256A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3bu_xplained_rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "LWMesh-Peer2Peer Application:AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3bu_xplained_rf231", "mcus": ["atxmega256a3bu"], "name": "LWMesh-Peer2Peer Application:AT86RF231-AtXmega256A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3bu_xplained_rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "LWMesh-Peer2Peer Application:AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "The LWMesh Tester app is designed to be used as a generic network processor and also performs automated testing for the stack.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.tester.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "LWMesh-Tester Application:AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.tester.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3bu_xplained_rf212", "mcus": ["atxmega256a3bu"], "name": "LWMesh-WsnDemo Application:AT86RF212-AtXmega256A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3bu_xplained_rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "LWMesh-WsnDemo Application:AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3bu_xplained_rf231", "mcus": ["atxmega256a3bu"], "name": "LWMesh-WsnDemo Application:AT86RF231-AtXmega256A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3bu_xplained_rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "LWMesh-WsnDemo Application:AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC Beacon Application Coordinator AT86RF212-XMEGA-A3BU Xplained ", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Beacon Application Coordinator AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC Beacon Application Coordinator AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Beacon Application Coordinator AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC Beacon Application Device AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Beacon Application Device AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC Beacon Application Device AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Beacon Application Device AT86RF233 -XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC No Beacon Application Coordinator AT86RF212-XMEGA-A3BU Xplained ", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC No Beacon Application Coordinator AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC No Beacon Application Coordinator AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC No Beacon Application Coordinator AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC No Beacon Application Device AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC No Beacon Application Device AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC No Beacon Application Device AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC No Beacon Application Device AT86RF233 -XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The MAC NoBeacon Sleep application demonstrates transceiver sleep feature .The device wakes from sleep every 2 seconds and transmits data to the coordinator.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC NoBeacon Sleep Application AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "The MAC NoBeacon Sleep application demonstrates transceiver sleep feature .The device wakes from sleep every 2 seconds and transmits data to the coordinator.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC NoBeacon Sleep Application AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "The MAC NoBeacon Sleep application demonstrates transceiver sleep feature .The device wakes from sleep every 2 seconds and transmits data to the coordinator.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC NoBeacon Sleep Application AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "The MAC NoBeacon Sleep application demonstrates transceiver sleep feature .The device wakes from sleep every 2 seconds and transmits data to the coordinator.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC NoBeacon Sleep Application AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface Beacon FFD AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon FFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon FFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface Beacon FFD AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf233_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon FFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon FFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface Beacon RFD AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon RFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon RFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface Beacon RFD AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf233_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon RFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface Beacon RFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface NoBeacon FFD AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon FFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon FFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface NoBeacon FFD AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf233_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon FFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon FFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface NoBeacon RFD AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon RFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon RFD AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "MAC Serial Interface NoBeacon RFD AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf233_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon RFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "MAC Serial Interface NoBeacon RFD AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics"], "description": "Monochrome graphic library graphic primitives example. Draw graphics shapes to a connected LCD display or framebuffer", "id": "common.services.gfx_mono.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Monochrome graphic library example for XMEGA A3BU-Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.gfx_mono.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Touch", "USB"], "description": "Reads input from maXTouch and gives touch indication on display.", "id": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "mXT143E Xplained multi-touch demo for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Touch"], "description": "Simple paint application using the MXT143E Xplained top module.", "id": "common.applications.mxt143e_xplained_paint_demo.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "mXT143E Xplained paint demo for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.applications.mxt143e_xplained_paint_demo.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for the Non Volatile Memories (NVM). Provides functions for accessing the program memory, EEPROM, signature row, fuse bits and lock bits.", "id": "xmega.drivers.nvm", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae", "xmega"], "name": "NVM - Non Volatile Memory", "quickstart": {"xmegaa": ["xmegaa/html/xmega_nvm_quickstart.html", "xmegaa/html/common_nvm_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_nvm_quickstart.html", "xmegaau/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__nvm__group.html", "xmegaau": "xmegaau/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "NVM example for atxmega256a3bu on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.drivers.nvm.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.stk600-rc044x_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "NVM example for STK600-RC044X", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.drivers.nvm.example.stk600-rc044x_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.stk600-rc064x_atxmega256a3u", "mcus": ["atxmega256a3u"], "name": "NVM example for STK600-RC064X", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.drivers.nvm.example.stk600-rc064x_atxmega256a3u/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.stk600-rc100x_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "NVM example for STK600-RC100X", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.drivers.nvm.example.stk600-rc100x_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "Performance Analyzer Application AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf212b_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "Performance Analyzer Application AT86RF212B-XMEGA-A3U AT86RF212B Zigbit (USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf212b_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf212b_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "Performance Analyzer Application AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Performance Analyzer Application AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf233_zigbit_ext", "mcus": ["atxmega256a3u"], "name": "Performance Analyzer Application AT86RF233-XMEGA-A3U AT86RF233 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "Performance Analyzer Application AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Interrupt"], "description": "Driver for the Programmable Multilevel Interrupt Controller (PMIC). Provides functions for configuring and using the PMIC.", "id": "xmega.drivers.pmic", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "PMIC - Programmable Multi-level Interrupt Controller", "quickstart": {"xmegaa": ["xmegaa/html/xmega_pmic_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_pmic_quickstart.html"], "xmegab": ["xmegab/html/xmega_pmic_quickstart.html"], "xmegac": ["xmegac/html/xmega_pmic_quickstart.html"], "xmegad": ["xmegad/html/xmega_pmic_quickstart.html"], "xmegae": ["xmegae/html/xmega_pmic_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__pmic__group.html", "xmegaau": "xmegaau/html/group__pmic__group.html", "xmegab": "xmegab/html/group__pmic__group.html", "xmegac": "xmegac/html/group__pmic__group.html", "xmegad": "xmegad/html/group__pmic__group.html", "xmegae": "xmegae/html/group__pmic__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Service for basic PWM use that includes API for quick setup of a XMEGA timer/counter as single slope PWM in normal or interrupt mode. For advanced PWM use with direct access to register, please use the XMEGA timer/counter driver.", "id": "xmega.services.pwm", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad"], "name": "PWM service using timer/counter", "quickstart": {"xmegaa": ["xmegaa/html/pwm_quickstart.html"], "xmegaau": ["xmegaau/html/pwm_quickstart.html"], "xmegab": ["xmegab/html/pwm_quickstart.html"], "xmegac": ["xmegac/html/pwm_quickstart.html"], "xmegad": ["xmegad/html/pwm_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__pwm__group.html", "xmegaau": "xmegaau/html/group__pwm__group.html", "xmegab": "xmegab/html/group__pwm__group.html", "xmegac": "xmegac/html/group__pwm__group.html", "xmegad": "xmegad/html/group__pwm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "xmega.drivers.qdec#0", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad"], "name": "Quadrature Decoder - XMEGA A/B/C/D Implementation", "quickstart": {"xmegaa": ["xmegaa/html/xmega_qdec_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_qdec_quickstart.html"], "xmegab": ["xmegab/html/xmega_qdec_quickstart.html"], "xmegac": ["xmegac/html/xmega_qdec_quickstart.html"], "xmegad": ["xmegad/html/xmega_qdec_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__qdec__group.html", "xmegaau": "xmegaau/html/group__qdec__group.html", "xmegab": "xmegab/html/group__qdec__group.html", "xmegac": "xmegac/html/group__qdec__group.html", "xmegad": "xmegad/html/group__qdec__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Button controller application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.button_ctr.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "RF4CE -ZRC button controller application AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.button_ctr.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Button controller application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.button_ctr.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "RF4CE -ZRC button controller application AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.button_ctr.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atxmega256a3u_uart_zigbit_rf212b", "mcus": ["atxmega256a3u"], "name": "RF4CE Network serial interface Application AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atxmega256a3u_uart_zigbit_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atxmega256a3u_usb_zigbit_rf212b", "mcus": ["atxmega256a3u"], "name": "RF4CE Network serial interface Application AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atxmega256a3u_usb_zigbit_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "RF4CE Network serial interface AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "RF4CE Network serial interface AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atxmega256a3u_usb_zigbit_rf233", "mcus": ["atxmega256a3u"], "name": "RF4CE Network serial interface AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atxmega256a3u_usb_zigbit_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.atxmega256a3u_usb_zigbit_rf212b", "mcus": ["atxmega256a3u"], "name": "RF4CE- ZRC Terminal target application AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.atxmega256a3u_usb_zigbit_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "ZID Serial Interface Adaptor application for RF4CE-ZID adaptor-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.aptr.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZID Adaptor serial interface application AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.aptr.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE ZID Adaptor Profile running on the atxmega256a3bu xplained and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.dev.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "RF4CE-ZID Adaptor serial interface AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.dev.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE ZID Adaptor Profile running on the atxmega256a3bu xplained and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.aptr.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "RF4CE-ZID Adaptor serial interface AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.aptr.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "ZID Serial Interface Adaptor application for RF4CE-ZID adaptor-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.dev.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZID Adaptor serial interface AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.serial_if.dev.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "USB HID Adaptor application for RF4CE-ZID adaptor-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.gamepad.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZID HID Gaming Controller Application AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.gamepad.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "ZID Serial Interface Adaptor application for RF4CE-ZID adaptor-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.terminal.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZID Terminal Adaptor application:AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.terminal.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE ZID Device Profile running on the atxmega256a3bu xplained", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.terminal.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Rf4CE-ZID Terminal Device application-XMEGA_A3BU_XPLAINED_RZ600RF231", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.terminal.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "USB HID Adaptor application for RF4CE-ZID adaptor-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.usb_hid.atxmega256a3u_rf233_zigbit_usb", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZID USB Adaptor application AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.usb_hid.atxmega256a3u_rf233_zigbit_usb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "RF4CE-ZRC controller serial interface AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atxmega256a3u_uart_zigbit_rf212b", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZRC controller serial interface AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atxmega256a3u_uart_zigbit_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atxmega256a3u_usb_zigbit_rf212b", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZRC controller serial interface AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atxmega256a3u_usb_zigbit_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "he RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "RF4CE-ZRC controller serial interface AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atxmega256a3u_usb_zigbit_rf233", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZRC controller serial interface AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atxmega256a3u_usb_zigbit_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "RF4CE-ZRC target serial interface AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atxmega256a3u_uart_zigbit_rf212b", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZRC target serial interface AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atxmega256a3u_uart_zigbit_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF212B Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atxmega256a3u_usb_zigbit_rf212b", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZRC target serial interface AT86RF212B-XMEGA-A3U AT86RF212B Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atxmega256a3u_usb_zigbit_rf212b/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "RF4CE-ZRC target serial interface AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atxmega256a3u_usb_zigbit_rf233", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZRC target serial interface AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atxmega256a3u_usb_zigbit_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3U AT86RF233 Zigbit"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.atxmega256a3u_usb_zigbit_rf233", "mcus": ["atxmega256a3u"], "name": "RF4CE-ZRC Terminal target application AT86RF233-XMEGA-A3U AT86RF233 Zigbit(USB)", "quickstart": {}, "type": "application", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.atxmega256a3u_usb_zigbit_rf233/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "RF4CE network library for XMEGA256A3BU controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.nwk#3", "mcus": ["atxmega256a3bu", "atxmega256a3u"], "name": "RF4Control NWK Lib for atxmega256a3bu", "quickstart": {}, "type": "module", "uri": {"xmegaau": "xmegaau/html/group__group__rf4control__nwk.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks", "Timers"], "description": "Driver for the RTC (16-bit Real Time Counter). Provides functions for timeout (alarm), with optional call-back function. Can be clocked from internal 32KHz RC oscillator, or external 32KHz crystal, or a scaled 1kHz clock derived from the 32KHz clock sources. This module is not available in the XMEGA A3B family, which features the RTC32 (32-bit Real Time Counter) instead.", "id": "xmega.drivers.rtc", "mcus": ["xmegaa1", "xmegaa1u", "xmegaa3", "xmegaa3u", "xmegaa4", "xmegaa4u", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "RTC - Real Time Counter", "quickstart": {"xmegaa": ["xmegaa/html/xmega_rtc_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_rtc_quickstart.html"], "xmegab": ["xmegab/html/xmega_rtc_quickstart.html"], "xmegac": ["xmegac/html/xmega_rtc_quickstart.html"], "xmegad": ["xmegad/html/xmega_rtc_quickstart.html"], "xmegae": ["xmegae/html/xmega_rtc_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__rtc__group.html", "xmegaau": "xmegaau/html/group__rtc__group.html", "xmegab": "xmegab/html/group__rtc__group.html", "xmegac": "xmegac/html/group__rtc__group.html", "xmegad": "xmegad/html/group__rtc__group.html", "xmegae": "xmegae/html/group__rtc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks", "Timers"], "description": "Driver for the RTC32 (32-bit Real Time Counter). Provides functions for timeout (alarm) of very long duration. Optional call-back function. Requires external 32kHz crystal. Can be used in combination with the RTC battery back-up feature. This module is only available in the XMEGA A3B family.", "id": "xmega.drivers.rtc32", "mcus": ["xmegaa3b", "xmegaa3bu"], "name": "RTC32 - Real Time Counter 32", "quickstart": {"xmegaa": ["xmegaa/html/xmega_rtc32_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_rtc32_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__rtc32__group.html", "xmegaau": "xmegaau/html/group__rtc32__group.html"}}, {"appnote": [], "asf_type": "boards", "boards": [], "category": ["Sensors"], "description": "ATAVRSBIN1 Sensors Xplained extension board definitions and runtime initialization support.", "id": "board.sensors_xplained.inertial_1", "mcus": ["xmega", "uc3"], "name": "Sensors - ATAVRSBIN1 Sensor Board", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__common__boards__sensors__xplained.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__boards__sensors__xplained.html", "uc3b": "uc3b/html/group__group__common__boards__sensors__xplained.html", "uc3c": "uc3c/html/group__group__common__boards__sensors__xplained.html", "uc3l": "uc3l/html/group__group__common__boards__sensors__xplained.html", "xmegaa": "xmegaa/html/group__group__common__boards__sensors__xplained.html", "xmegaau": "xmegaau/html/group__group__common__boards__sensors__xplained.html", "xmegab": "xmegab/html/group__group__common__boards__sensors__xplained.html", "xmegac": "xmegac/html/group__group__common__boards__sensors__xplained.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Sensors"], "description": "The sensor device service provides high-level interfaces and binary driver libraries for sensor devices on systems built around AVR microcontrollers. Common API for UC3, XMEGA, and AVR MEGA.", "id": "common.services.sensors#xmega", "mcus": ["xmega"], "name": "Sensors - Sensor Device Stack - XMEGA implementation", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__group__common__services__sensors.html", "xmegaau": "xmegaau/html/group__group__common__services__sensors.html", "xmegab": "xmegab/html/group__group__common__services__sensors.html", "xmegac": "xmegac/html/group__group__common__services__sensors.html", "xmegad": "xmegad/html/group__group__common__services__sensors.html", "xmegae": "xmegae/html/group__group__common__services__sensors.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "Enables Support for  UART communication", "id": "thirdparty.wireless.addons.sio2ncp#uart#0", "mcus": ["xmega", "uc3", "sam4l", "megarf"], "name": "Serial I/O - NCP Using UART", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__sio2ncp__uart.html", "sam4l": "sam4l/html/group__group__sio2ncp__uart.html", "uc3a": "uc3a/html/group__group__sio2ncp__uart.html", "uc3a3_a4": "uc3a3_a4/html/group__group__sio2ncp__uart.html", "uc3b": "uc3b/html/group__group__sio2ncp__uart.html", "uc3c": "uc3c/html/group__group__sio2ncp__uart.html", "uc3d": "uc3d/html/group__group__sio2ncp__uart.html", "uc3l": "uc3l/html/group__group__sio2ncp__uart.html", "xmegaa": "xmegaa/html/group__group__sio2ncp__uart.html", "xmegaau": "xmegaau/html/group__group__sio2ncp__uart.html", "xmegab": "xmegab/html/group__group__sio2ncp__uart.html", "xmegac": "xmegac/html/group__group__sio2ncp__uart.html", "xmegad": "xmegad/html/group__group__sio2ncp__uart.html", "xmegae": "xmegae/html/group__group__sio2ncp__uart.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Driver for the sleep controller. Provides functions to configure the sleep mode used, enable and disable sleep functionality, and enter sleep mode. To enter any of the sleep modes the sleep functionality needs to be enabled.", "id": "xmega.drivers.sleep", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "Sleep Controller driver", "quickstart": {"xmegaa": ["xmegaa/html/xmega_sleep_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_sleep_quickstart.html"], "xmegab": ["xmegab/html/xmega_sleep_quickstart.html"], "xmegac": ["xmegac/html/xmega_sleep_quickstart.html"], "xmegad": ["xmegad/html/xmega_sleep_quickstart.html"], "xmegae": ["xmegae/html/xmega_sleep_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__sleep__group.html", "xmegaau": "xmegaau/html/group__sleep__group.html", "xmegab": "xmegab/html/group__sleep__group.html", "xmegac": "xmegac/html/group__sleep__group.html", "xmegad": "xmegad/html/group__sleep__group.html", "xmegae": "xmegae/html/group__sleep__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Power Management"], "description": "The sleep manager provides functions for centralized management of sleep modes. Common API for UC3 and XMEGA.", "id": "common.services.basic.sleepmgr#1", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "Sleep manager - XMEGA A/AU/B/D implementation", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__sleepmgr__group.html", "xmegaau": "xmegaau/html/group__sleepmgr__group.html", "xmegab": "xmegab/html/group__sleepmgr__group.html", "xmegac": "xmegac/html/group__sleepmgr__group.html", "xmegad": "xmegad/html/group__sleepmgr__group.html", "xmegae": "xmegae/html/group__sleepmgr__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Implementation for the common SPI API using the standard SPI peripheral.", "id": "common.services.basic.spi_master#standard_spi", "mcus": ["xmega", "uc3", "sam", "megarf"], "name": "SPI - Common Standard SPI", "quickstart": {"sam4e": ["sam4e/html/common_spi_master_quickstart.html"], "sam4s": ["sam4s/html/common_spi_master_quickstart.html"], "xmegaau": ["xmegaau/html/common_spi_master_quickstart.html"]}, "type": "module", "uri": {"sam4e": "sam4e/html/group__spi__group.html", "sam4s": "sam4s/html/group__spi__group.html", "xmegaau": "xmegaau/html/group__spi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the Serial Peripheral Interface (SPI). Provides functions for configuring and using the SPI.", "id": "xmega.drivers.spi", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "SPI - Serial Peripheral Interface", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__group__xmega__drivers__spi.html", "xmegaau": "xmegaau/html/group__group__xmega__drivers__spi.html", "xmegab": "xmegab/html/group__group__xmega__drivers__spi.html", "xmegac": "xmegac/html/group__group__xmega__drivers__spi.html", "xmegad": "xmegad/html/group__group__xmega__drivers__spi.html", "xmegae": "xmegae/html/group__group__xmega__drivers__spi.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Unit test application for the SPI driver.", "id": "xmega.drivers.spi.unit_tests.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "SPI driver unit tests on XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "xmega.drivers.spi.unit_tests.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the ST7565R LCD controller. Note: Controller inside display LCD NHD-C12832A1Z-FSW-FBW (128 x 32, Monochrome). This display is available on XMEGA-A3BU Xplained.", "id": "common.components.display.st7565r", "mcus": ["xmega"], "name": "ST7565R LCD controller", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__st7565r__lcd__controller__group.html", "xmegaau": "xmegaau/html/group__st7565r__lcd__controller__group.html", "xmegab": "xmegab/html/group__st7565r__lcd__controller__group.html", "xmegac": "xmegac/html/group__st7565r__lcd__controller__group.html", "xmegad": "xmegad/html/group__st7565r__lcd__controller__group.html", "xmegae": "xmegae/html/group__st7565r__lcd__controller__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "A simple example for verifying that the ST7565R low level driver works.", "id": "common.components.display.st7565r.example.a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "ST7565R LCD Controller example for A3BU-Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.components.display.st7565r.example.a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": ["Communication"], "description": "Common standard serial I/O management driver that implements a stdio serial interface on AVR devices.", "id": "common.utils.stdio.stdio_serial#xmega", "mcus": ["xmega"], "name": "Standard serial I/O (stdio) - XMEGA implementation", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__group__common__utils__stdio__stdio__serial.html", "xmegaau": "xmegaau/html/group__group__common__utils__stdio__stdio__serial.html", "xmegab": "xmegab/html/group__group__common__utils__stdio__stdio__serial.html", "xmegac": "xmegac/html/group__group__common__utils__stdio__stdio__serial.html", "xmegad": "xmegad/html/group__group__common__utils__stdio__stdio__serial.html", "xmegae": "xmegae/html/group__group__common__utils__stdio__stdio__serial.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#9", "mcus": ["xmegaa1u", "xmegaa3u", "xmegaa3bu", "xmegaa4u", "xmegab", "xmegac"], "name": "System Clock Control - XMEGA A1U/A3U/A3BU/A4U/B/C implementation", "quickstart": {"xmegaau": ["xmegaau/html/sysclk_quickstart.html"], "xmegab": ["xmegab/html/sysclk_quickstart.html"], "xmegac": ["xmegac/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"xmegaau": "xmegaau/html/group__clk__group.html", "xmegab": "xmegab/html/group__clk__group.html", "xmegac": "xmegac/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "Driver for the Timer/Counters (TC). Provides functions for configuring and using the 16-bit TC.", "id": "xmega.drivers.tc", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad"], "name": "TC - Timer Counter", "quickstart": {"xmegaa": ["xmegaa/html/xmega_tc_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_tc_quickstart.html"], "xmegab": ["xmegab/html/xmega_tc_quickstart.html"], "xmegac": ["xmegac/html/xmega_tc_quickstart.html"], "xmegad": ["xmegad/html/xmega_tc_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__tc__group.html", "xmegaau": "xmegaau/html/group__tc__group.html", "xmegab": "xmegab/html/group__tc__group.html", "xmegac": "xmegac/html/group__tc__group.html", "xmegad": "xmegad/html/group__tc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : configures one TC module in normal mode and uses three TC interrupts (overflow, Capture/Compare Channels A and B).", "id": "xmega.drivers.tc.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "TC Example 1 for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.tc.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Timers"], "description": "Timeout service example 1. This example demonstrates how to use the periodic timeout feature to toggle two LED's with different frequency.", "id": "xmega.services.timeout.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Timeout example 1 for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.services.timeout.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Timers"], "description": "This example shows how to use the \\ref tc_timeout_group to implement a software debounce filter on a button input.", "id": "xmega.services.timeout.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Timeout example 2 for Xmega A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.services.timeout.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Timers"], "description": "Timeout service for XMEGA that uses the RTC driver as time source in order to have a system tick. Multiple timeout channels supported. Internal 32kHz oscillator or external 32kHz crystal oscillator can be used as clock source. Includes possibility to set singleshot and periodic timeouts.", "id": "xmega.services.timeout#0", "mcus": ["xmegaa1", "xmegaa1u", "xmegaa3", "xmegaa3u", "xmegaa4", "xmegaa4u", "xmegad", "xmegae", "xmegaa3bu", "xmegaa3b"], "name": "Timeout Service XMEGA", "quickstart": {"xmegaa": ["xmegaa/html/timeout_quickstart.html"], "xmegaau": ["xmegaau/html/timeout_quickstart.html"], "xmegad": ["xmegad/html/timeout_quickstart.html"], "xmegae": ["xmegae/html/timeout_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__timeout__group.html", "xmegaau": "xmegaau/html/group__timeout__group.html", "xmegad": "xmegad/html/group__timeout__group.html", "xmegae": "xmegae/html/group__timeout__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "TWI Two-Wire Interface service. Common API.", "id": "common.services.basic.twi#0", "mcus": ["xmega"], "name": "TWI - Two-Wire Interface - XMEGA implementation", "quickstart": {"xmegaa": ["xmegaa/html/twi_quickstart.html"], "xmegaau": ["xmegaau/html/twi_quickstart.html"], "xmegab": ["xmegab/html/twi_quickstart.html"], "xmegac": ["xmegac/html/twi_quickstart.html"], "xmegad": ["xmegad/html/twi_quickstart.html"], "xmegae": ["xmegae/html/twi_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__twi__group.html", "xmegaau": "xmegaau/html/group__twi__group.html", "xmegab": "xmegab/html/group__twi__group.html", "xmegac": "xmegac/html/group__twi__group.html", "xmegad": "xmegad/html/group__twi__group.html", "xmegae": "xmegae/html/group__twi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "", "id": "xmega.drivers.twi#slave", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "TWI - Two-wire Slave Interface", "quickstart": {"xmegaa": ["xmegaa/html/xmega_twi_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_twi_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__group__xmega__drivers__twi.html", "xmegaau": "xmegaau/html/group__group__xmega__drivers__twi.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Test all function of XMega CRC driver.", "id": "xmega.drivers.crc.unit_test.stk600_atxmegaa3u", "mcus": ["atxmega256a3u"], "name": "Unit test for XMega CRC module driver", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "xmega.drivers.crc.unit_test.stk600_atxmegaa3u/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Core functions for the unit test framework.", "id": "common.utils.unit_test#xmega", "mcus": ["xmega"], "name": "Unit test framework - XMEGA implementation", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__test__suite__group.html", "xmegaau": "xmegaau/html/group__test__suite__group.html", "xmegab": "xmegab/html/group__test__suite__group.html", "xmegac": "xmegac/html/group__test__suite__group.html", "xmegad": "xmegad/html/group__test__suite__group.html", "xmegae": "xmegae/html/group__test__suite__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Unit Tests for IEEE 802.15.4 MAC ensure the good functionality of this module by testing one by one the main features of the MAC component.", "id": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for IEEE 802.15.4 MAC AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Unit Tests for IEEE 802.15.4 MAC ensure the good functionality of this module by testing one by one the main features of the MAC component.", "id": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for IEEE 802.15.4 MAC AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Unit Tests for LWMesh ensure the good functionality of this module by testing the basic functionality of the stack.", "id": "thirdparty.wireless.avr2130_lwmesh.unit_tests.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for LWMesh Stack AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.unit_tests.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Unit Tests for LWMesh ensure the good functionality of this module by testing the basic functionality of the stack.", "id": "thirdparty.wireless.avr2130_lwmesh.unit_tests.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for LWMesh Stack AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2130_lwmesh.unit_tests.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Unit Tests for RF4Control ensure the good functionality of this module by testing one by one the main features of the  component.", "id": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for RF4Control AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Unit Tests for RF4Control ensure the good functionality of this module by testing one by one the main features of the  component.", "id": "thirdparty.wireless.avr2102_rf4control.lib.zid.unit_tests.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for RF4Control AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.lib.zid.unit_tests.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Unit Tests for RF4Control ensure the good functionality of this module by testing one by one the main features of the  component.", "id": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for RF4Control AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "xmega.drivers.ebi.unit_tests.common", "mcus": ["xmega"], "name": "Unit Tests for the XMEGA EBI Driver", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__ebi__tests__group.html", "xmegaau": "xmegaau/html/group__ebi__tests__group.html", "xmegab": "xmegab/html/group__ebi__tests__group.html", "xmegac": "xmegac/html/group__ebi__tests__group.html", "xmegad": "xmegad/html/group__ebi__tests__group.html", "xmegae": "xmegae/html/group__ebi__tests__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TAL ensure the good functionality of this module by testing one by one the main features of the TAL component.", "id": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for Transceiver Abstraction Layer(TAL) AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TAL ensure the good functionality of this module by testing one by one the main features of the TAL component.", "id": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for Transceiver Abstraction Layer(TAL) AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TFA ensure the good functionality of this module by testing one by one the main features of the TFA component.", "id": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.xmega_a3bu_xplained_rz600rf212", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for Transceiver Feature Access(TFA) AT86RF212-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.xmega_a3bu_xplained_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TFA ensure the good functionality of this module by testing one by one the main features of the TFA component.", "id": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.xmega_a3bu_xplained_rz600rf231", "mcus": ["atxmega256a3bu"], "name": "Unit Tests for Transceiver Feature Access(TFA) AT86RF231-XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.xmega_a3bu_xplained_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.", "id": "common.services.basic.serial#0", "mcus": ["xmega"], "name": "USART - Serial interface - XMEGA implementation", "quickstart": {"xmegaa": ["xmegaa/html/serial_quickstart.html"], "xmegaau": ["xmegaau/html/serial_quickstart.html"], "xmegab": ["xmegab/html/serial_quickstart.html"], "xmegac": ["xmegac/html/serial_quickstart.html"], "xmegad": ["xmegad/html/serial_quickstart.html"], "xmegae": ["xmegae/html/serial_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__serial__group.html", "xmegaau": "xmegaau/html/group__serial__group.html", "xmegab": "xmegab/html/group__serial__group.html", "xmegac": "xmegac/html/group__serial__group.html", "xmegad": "xmegad/html/group__serial__group.html", "xmegae": "xmegae/html/group__serial__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the Universal Synchronous and Asynchronous Serial Receiver and Transmitter (USART). Provides functions for configuring and using the USART in RS232 and SPI mode.", "id": "xmega.drivers.usart#0", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad"], "name": "USART - Universal Synchronous/Asynchronous Receiver/Transmitter", "quickstart": {"xmegaa": ["xmegaa/html/xmega_usart_quickstart.html"], "xmegaau": ["xmegaau/html/xmega_usart_quickstart.html"], "xmegab": ["xmegab/html/xmega_usart_quickstart.html"], "xmegac": ["xmegac/html/xmega_usart_quickstart.html"], "xmegad": ["xmegad/html/xmega_usart_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__usart__group.html", "xmegaau": "xmegaau/html/group__usart__group.html", "xmegab": "xmegab/html/group__usart__group.html", "xmegac": "xmegac/html/group__usart__group.html", "xmegad": "xmegad/html/group__usart__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USART Example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.usart.example.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device CDC Example for ATxmega128a1u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.cdc.device.example.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600_atxmega128a4u", "mcus": ["atxmega128a4u"], "name": "USB Device CDC Example for ATxmega128a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.cdc.device.example.stk600_atxmega128a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600_atxmega256a3bu", "mcus": ["atxmega256a3bu"], "name": "USB Device CDC Example for ATxmega256a3bu on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.cdc.device.example.stk600_atxmega256a3bu/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device CDC Example for ATxmega32a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.cdc.device.example.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device CDC Example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.cdc.device.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device CDC unit tests for ATxmega128a1u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.cdc.device.unit_tests.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device CDC unit tests for ATxmega32a4u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.cdc.device.unit_tests.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device CDC unit tests for XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.cdc.device.unit_tests.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "Touch", "USB"], "description": "Implements a USB Device HID Mouse using the mXT143E Xplained top module as a touch-enabled trackpad. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.components.touch.mxt.example_hid.atxmega256a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device example using the mXT143E Xplained kit as mouse", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.components.touch.mxt.example_hid.atxmega256a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device HID Generic for ATxmega32a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.generic.example.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device HID Keyboard for ATxmega128a1u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega128a4u", "mcus": ["atxmega128a4u"], "name": "USB Device HID Keyboard for ATxmega128a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega128a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega256a3bu", "mcus": ["atxmega256a3bu"], "name": "USB Device HID Keyboard for ATxmega256a3bu on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega256a3bu/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device HID Keyboard for ATxmega32a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device HID Keyboard for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device HID Mouse for ATxmega128a1u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega128a4u", "mcus": ["atxmega128a4u"], "name": "USB Device HID Mouse for ATxmega128a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega128a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega256a3bu", "mcus": ["atxmega256a3bu"], "name": "USB Device HID Mouse for ATxmega256a3bu on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega256a3bu/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device HID Mouse for ATxmega32a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device HID Mouse for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device HID Mouse unit tests for ATxmega128a1u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device HID Mouse unit tests for ATxmega128a1u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega256a3bu", "mcus": ["atxmega256a3bu"], "name": "USB Device HID Mouse unit tests for ATxmega256a3bu on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega256a3bu/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device HID Mouse unit tests for ATxmega32a4u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device HID Mouse unit tests for ATxmega32a4u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device HID Mouse unit tests for XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.hid.device.keyboard.unit_tests.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device HID Mouse unit tests for XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.hid.device.mouse.unit_tests.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device Mass Storage for ATxmega128a1u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.msc.device.example.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.stk600_atxmega128a4u", "mcus": ["atxmega128a4u"], "name": "USB Device Mass Storage for ATxmega128a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.msc.device.example.stk600_atxmega128a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.stk600_atxmega256a3bu", "mcus": ["atxmega256a3bu"], "name": "USB Device Mass Storage for ATxmega256a3bu on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.msc.device.example.stk600_atxmega256a3bu/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device Mass Storage for ATxmega32a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.msc.device.example.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device Mass Storage for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.msc.device.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.stk600_atxmega128a1u", "mcus": ["atxmega128a1u"], "name": "USB Device Mass Storage unit tests for ATxmega128a1u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.msc.device.unit_tests.stk600_atxmega128a1u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.stk600_atxmega128a4u", "mcus": ["atxmega128a4u"], "name": "USB Device Mass Storage unit tests for ATxmega128a4u on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.msc.device.unit_tests.stk600_atxmega128a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device Mass Storage unit tests for XMEGA-A3BU Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaau": "common.services.usb.class.msc.device.unit_tests.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device PHDC for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.phdc.device.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.stk600_atxmega256a3bu", "mcus": ["atxmega256a3bu"], "name": "USB Device Vendor Class example for ATxmega256a3bu on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.vendor.device.example.stk600_atxmega256a3bu/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.stk600_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "USB Device Vendor Class example for ATxmega32a4u on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.vendor.device.example.stk600_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Device Vendor Class example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.vendor.device.example.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation that uses QTouch key. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example2.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB QTouch Device HID Generic Example for ATxmega256A3BU on XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.usb.class.hid.device.generic.example2.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["XMEGA-A3BU Xplained"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.atxmega256a3bu_xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "USB Standard I/O Example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.utils.stdio.stdio_usb.example.atxmega256a3bu_xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Interrupt", "Timers"], "description": "Driver for the Watchdog Timer (WDT). Provides functions for configuring and using the WDT.", "id": "xmega.drivers.wdt", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "WDT - Watchdog Timer", "quickstart": {"xmegaa": ["xmegaa/html/wdt_quickstart.html"], "xmegaau": ["xmegaau/html/wdt_quickstart.html"], "xmegab": ["xmegab/html/wdt_quickstart.html"], "xmegac": ["xmegac/html/wdt_quickstart.html"], "xmegad": ["xmegad/html/wdt_quickstart.html"], "xmegae": ["xmegae/html/wdt_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__wdt__group.html", "xmegaau": "xmegaau/html/group__wdt__group.html", "xmegab": "xmegab/html/group__wdt__group.html", "xmegac": "xmegac/html/group__wdt__group.html", "xmegad": "xmegad/html/group__wdt__group.html", "xmegae": "xmegae/html/group__wdt__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.stk600-rc064x_atxmega256a3u", "mcus": ["atxmega256a3u"], "name": "WDT Example for ATxmega256A3U on STK600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.wdt.example.stk600-rc064x_atxmega256a3u/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.stk600-rc044x_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "WDT Example for ATxmega32A4 on STK600-rc044x", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.wdt.example.stk600-rc044x_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "WDT Example for XMEGA-A3BU Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.wdt.example.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, showing a collection of icon widgets, allowing the user to navigate between the icons and select them using both direct touch and soft button widgets.", "id": "common.services.wtk.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Widget library example 2 for the XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.wtk.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, demonstrating the plot widget, allowing the user to add new plot points to be graphed using a pair of slider and button widgets.", "id": "common.services.wtk.example3.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Widget library example 3 for the XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.wtk.example3.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "Widget library example for the XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.wtk.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A3BU Xplained"], "category": ["Graphics", "Touch"], "description": "Training skeleton code for the application note \"AVR1614: Widget ToolKit - Getting Started\".", "id": "common.services.wtk.training.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "WTK training project for XMEGA-A3BU XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaau": "common.services.wtk.training.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator. A single block is encrypted and decrypted.", "id": "xmega.drivers.aes.example1.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "XMEGA AES XMEGA-A3BU Xplained example1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.aes.example1.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator with interrupts. A single block is encrypted and decrypted using interrupts to control the process flow.", "id": "xmega.drivers.aes.example2.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "XMEGA AES XMEGA-A3BU Xplained example2", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.aes.example2.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator. DMA channel 0 is used to access AES register.", "id": "xmega.drivers.aes.example3.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "XMEGA AES XMEGA-A3BU Xplained example3", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.aes.example3.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A3BU Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA Data Encryption Standard (DES) core instruction. A single block is encrypted and decrypted.", "id": "xmega.drivers.des.example.xmega_a3bu_xplained", "mcus": ["atxmega256a3bu"], "name": "XMEGA DES XMEGA-A3BU Xplained example", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.des.example.xmega_a3bu_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.stk600-rc044x_atxmega32a4u", "mcus": ["atxmega32a4u"], "name": "XMEGA USART Example for stk600-rc044x", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.usart.example.stk600-rc044x_atxmega32a4u/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.stk600-rc064x_atxmega256a3u", "mcus": ["atxmega256a3u"], "name": "XMEGA USART Example for stk600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.drivers.usart.example.stk600-rc064x_atxmega256a3u/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors", "Sensors"], "description": "Demo application for XMEGA-A3BU Xplained obtains electronic compass data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then uses the monochrome display to prompt the user to make a series of manual steps to calibrate the compass to the local geomagnetic field.", "id": "xmega.applications.xmega_a3bu_avrsbin1_calibrate", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with ATAVRSBIN1 Compass Calibration", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega_a3bu_avrsbin1_calibrate/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors", "Sensors"], "description": "Demo application for XMEGA-A3BU Xplained with Atmel Sensors Xplained Inertial 1 (ATAVRSBIN1) accelerometer, gyroscope, and electronic compass sensor readout on the monchrome display.", "id": "xmega.applications.xmega_a3bu_avrsbin1_display", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with ATAVRSBIN1 Data Display", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega_a3bu_avrsbin1_display/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors", "Sensors"], "description": "Demo application for XMEGA-A3BU Xplained obtains sensor data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then plots accelerometer data points on the monochrome display when the board is dropped from some height.", "id": "xmega.applications.xmega_a3bu_avrsbin1_drop", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with ATAVRSBIN1 Drop Detector", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega_a3bu_avrsbin1_drop/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained obtains electronic compass data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then prompts the user to make a series of manual steps to calibrate the compass to the local geomagnetic field.", "id": "xmega.applications.xmega-a3bu_avrsbin1_compass-cal", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsbin1_compass-cal/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained places microcontroller in low-power sleep mode and waits for sensor event to wake up in response to motion detection by the accelerometer.  Configuration options allow use of gyroscope new data for wake up and various other wake/sleep scenarios.  Uses an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).", "id": "xmega.applications.xmega-a3bu_avrsbin1_wake", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsbin1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained obtains sensor data from the accelerometer, gyroscope, and electronic compass devices on an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "xmega.applications.xmega-a3bu_avrsbin1_visualizer", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsbin1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained obtains sensor data from an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1) then displays light and proximity data.", "id": "xmega.applications.xmega-a3bu_avrsblp1_demo", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Light/Prox Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsblp1_demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained obtains sensor data from the light and proximity sensor device on an Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "xmega.applications.xmega-a3bu_avrsblp1_visualizer", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsblp1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) to set proximity sensor detection thresholds and store in non-volatile memory.", "id": "xmega.applications.xmega-a3bu_avrsblp1_calibrate", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsblp1_calibrate/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained places microcontroller in low-power sleep mode and waits for sensor event to wake up in response to detected light and/or proximity.  Configuration options allow setting threshold levels for wake up and various other controls.  Uses an Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1).", "id": "xmega.applications.xmega-a3bu_avrsblp1_wake", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsblp1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A3BU Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A3BU Xplained obtains barometric pressure and temperature sensor data from an Atmel Sensors Xplained Pressure 1 board (ATAVRSBPR1) then prints the scaled and formatted values to an attached serial terminal using the C-library standard I/O functions.", "id": "xmega.applications.xmega-a3bu_avrsbpr1_demo", "mcus": ["atxmega256a3bu"], "name": "XMEGA-A3BU Xplained with Xplained Pressure Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaau": "xmega.applications.xmega-a3bu_avrsbpr1_demo/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACC peripheral.", "id": "sam.drivers.acc.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "ACC Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.acc.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "ADC example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.adc.adc_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "ADC Temperature Sensor example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.adc.adc_temp_sensor_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "ADC threshold wake-up example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.adc.adc_threshold_wakeup_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": [], "description": "A simple example using the ADS7843 component and ILI9325 lcd controller.", "id": "sam.services.resistive_touch.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "ADS7843 LCD Touch Controller example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.services.resistive_touch.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK2"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Basic FreeRTOS Example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.freertos.sam_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Basic SD/MMC/SDIO card example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.components.memory.sd_mmc.example1.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Chipid example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.chipid.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3S-EK2"], "category": [], "description": "Basic Cortex-M3 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm3_cmsis_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "CMSIS Example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.utils.cmsis.cm3_cmsis_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3S-EK2"], "category": [], "description": "The demonstration program makes two buttons as the NVIC trigger. Each button would trigger one LED flash. When an NVIC interrupt preemptive happened, both the LEDs are on.", "id": "sam.utils.cmsis.cm3_nvic_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "CMSIS NVIC example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.utils.cmsis.cm3_nvic_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Common API for Clocks Control / Example 1 for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.basic.clock.example1.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Common API for Clocks Control / Example 2 for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.basic.clock.example2.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Common API for Clocks Control / Example 3 for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.basic.clock.example3.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM3S-EK2"], "category": [], "description": "Basic Cortex-M3 bit banding example.", "id": "sam.utils.cmsis.cm3_bit_banding_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Cortex-M bit banding example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.utils.cmsis.cm3_bit_banding_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "CRCCU example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.crccu.crccu_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "DAC Sinewave Example on SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.dacc.sinewave_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Drivers RTC Example for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.rtc.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK2"], "category": [], "description": "FatFS example for SAM3S_EK2, the file system will be created on the NAND Flash and the external DataFlash AT45DBX if it's connented.", "id": "common.services.fs.fatfs.access_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "FatFS example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.fs.fatfs.access_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Flash efc unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.services.flash.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Flash Program Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.services.flash.program_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Flash Read Unique Id Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.services.flash.read.unique.id_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "FreeRTOS USART Interface Layer for SAM3S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "common.services.freertos_sam_usart.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3S-EK2"], "category": [], "description": "Switch between various system clock sources and prescalers at run time.", "id": "sam.applications.getting-started.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Getting Started for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.applications.getting-started.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "GPBR unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.gpbr.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": ["Graphics"], "description": "This example demonstrates how to configure the ILI9325 LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.ili9325.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "ILI9325 LCD Controller example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.components.display.ili9325.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for ILI9325 driver.", "id": "sam.components.display.ili9325.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "ili9325 unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.components.display.ili9325.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM3S-EK2"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Low Power demo for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.applications.low_power.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Basic example of MATRIX on SAM3S-EK2.", "id": "sam.drivers.matrix.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "MATRIX example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.matrix.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "NAND Flash component unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "common.components.memory.nand_flash.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "NAND Flash on EBI Example 1 for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.components.memory.nand_flash.example1.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "NAND Flash on EBI Example 2 for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.components.memory.nand_flash.example2.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK2"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Peripheral Control FreeRTOS Example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.freertos.peripheral_control.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Peripheral DMA Controller Example on SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.pdc.pdc_uart_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.alternate_function_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PIO Alternate Function Example for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.pio.alternate_function_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.capture_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PIO Capture Example for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.pio.capture_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PMC clock failure detection example for SAM3S", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M3 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PMC clock switching for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.pmc.pmc_clock_switching_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PMC unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.pmc.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Clocks"], "description": "This example shows how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PWM LED example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.pwm.pwm_led_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on SAM3S-EK2.", "id": "sam.drivers.pwm.pwm_sync_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PWM SYNC example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.pwm.pwm_sync_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "PWM unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.pwm.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM3S-EK2"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the board of Atmel SAM devices.", "id": "common.services.qtouch.generic.sam.qtouch.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "QTouch Method Example Application on SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.qtouch.generic.sam.qtouch.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "RSTC unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.rstc.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Basic example of RTT on SAM3S-EK2.", "id": "sam.drivers.rtt.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "RTT example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.rtt.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "SD/MMC card example for SAM3S_EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "common.components.memory.sd_mmc.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM3S-EK2"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "SD/MMC card example with FatFs for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.components.memory.sd_mmc.example2.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.basic.usart_spi_master_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "SPI Example for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.spi.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "SPI PDC Example for SAM3SD8", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.spi.spi_pdc_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "SPI unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.spi.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "SSC unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.ssc.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "SUPC unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.supc.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#14", "mcus": ["sam3sd"], "name": "System Clock Control - SAM3SD implementation", "quickstart": {"sam3sd": ["sam3sd/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam3sd": "sam3sd/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "TC Capture Waveform Example on SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.tc.tc_capture_waveform_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "TWI SLAVE Example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.twi.twi_slave_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USART Hardware Handshaking Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.usart.usart_hard_handshaking_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USART IrDA Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.usart.usart_irda_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USART ISO7816 Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.usart.usart_iso7816_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USART RS485 Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.usart.usart_rs485_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USART Serial Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.usart.usart_serial_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USART Synchronous Example for SAM3S_EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.usart.usart_synchronous_example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Composite Device CDC and MSC for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.composite.device.example.cdc_msc.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Composite Device HID keyboard and MSC for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.composite.device.example.hidkbd_msc.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Composite Device HID mouse and MSC for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.composite.device.example.hidms_msc.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device CDC Example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.cdc.device.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device CDC multiple Example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.cdc.device.example2.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device CDC unit tests for SAM3S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "common.services.usb.class.cdc.device.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device HID Generic for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.hid.device.generic.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device HID Keyboard for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.hid.device.keyboard.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device HID Keyboard unit tests for SAM3S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "common.services.usb.class.hid.device.keyboard.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device HID Mouse for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.hid.device.mouse.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device HID Mouse unit tests for SAM3S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "common.services.usb.class.hid.device.mouse.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device Mass Storage for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.msc.device.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device Mass Storage for SAM3S-EK2 with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.msc.device.example.freertos.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device Mass Storage unit tests for SAM3S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "common.services.usb.class.msc.device.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM3S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "USB Device Vendor Class Example for SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "common.services.usb.class.vendor.device.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM3S-EK2.", "id": "sam.drivers.wdt.example.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "Watchdog Timer Example on SAM3S-EK2", "quickstart": {}, "type": "application", "uri": {"sam3sd": "sam.drivers.wdt.example.sam3s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM3S-EK2"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam3s_ek2", "mcus": ["atsam3sd8c"], "name": "WDT unit Test for SAM3S8", "quickstart": {}, "type": "unit-test", "uri": {"sam3sd": "sam.drivers.wdt.unit_tests.sam3s_ek2/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT08456", "name": "AT08456"}], "asf_type": "applications", "boards": [""], "category": ["Communication", "Communication"], "description": "Complete driver API reference manual.", "id": "sam0.applications.asf_programmers_manual.atsamr21", "mcus": ["unspecified-samr21"], "name": "ASF Manual (SAM R21)", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.asf_programmers_manual.atsamr21/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM R21 Xplained Pro"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC card. This example is interesting to start a specific development on SD/MMC card without a file system.", "id": "common2.components.memory.sd_mmc.example1.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Basic SD/MMC card example for SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common2.components.memory.sd_mmc.example1.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication"], "description": "EDBG I2C Information Interface Demo.", "id": "sam0.applications.edbg_i2c_info_interface.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "EDBG I2C Information Interface Demo for SAM R21", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.edbg_i2c_info_interface.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "FatFS example for SAMR21 Xplained Pro, the file system will be created on the external DataFlash AT45DBX.", "id": "common.services.fs.fatfs.access_example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "FatFS example for SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.fs.fatfs.access_example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "FatFS unit tests for SAMR21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "common.services.fs.fatfs.unit_tests.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Simple FreeRTOS demo application which demonstrates tasks, queues and semaphores. This demo requires the OLED1 Xplained Pro.", "id": "common.services.freertos.oled1_xpro_example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "FreeRTOS demo using OLED1 Xplained Pro, for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.freertos.oled1_xpro_example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Simple FreeRTOS demo application which demonstrates tasks, queues and semaphores, using lowpower tickless features of FreeRTOS. This demo requires the OLED1 Xplained Pro.", "id": "common.services.freertos.oled1_tickless_xpro_example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "FreeRTOS tickless demo using OLED1 Xplained Pro, for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.freertos.oled1_tickless_xpro_example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "The Getting Started example will help new users get familiar with SAM D21/R21 Xplained Pro.", "id": "sam0.applications.getting-started.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Getting Started for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.getting-started.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Memory"], "description": "I2C Slave Bootloader for SAM D20/D21/R21.", "id": "sam0.applications.i2c_slave_bootloader.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "I2C Slave bootloader for SAM R21", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.i2c_slave_bootloader.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM R21 Xplained Pro"], "category": ["CPU", "I/O", "Interrupt"], "description": "Example application to toggle the board LED when a button is pressed, using various device drivers.", "id": "sam0.applications.led_toggle.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "LED Toggle Application", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.led_toggle.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "LWMesh-EDDemo Application:SAMR21  Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "LWMesh-Peer2Peer Application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Tester app is designed to be used as a generic network processor and also performs automated testing for the stack.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.tester.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "LWMesh-Tester Application:SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2130_lwmesh.apps.tester.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "LWMesh-WsnDemo Application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "MAC Beacon Application Coordinator SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "MAC Beacon Application Device SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "MAC No Beacon Application Coordinator SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "MAC No Beacon Application Device SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "MAC Serial Interface Beacon FFD  AMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "MAC Serial Interface Beacon RFD  SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - No Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_ffd.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "MAC Serial Interface NoBeacon FFD  SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_ffd.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - No Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_rfd.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "MAC Serial Interface NoBeacon RFD  SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.no_bcn_rfd.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#no_extmem#6", "mcus": ["samr21"], "name": "NVM - Non volatile memory access", "quickstart": {"samr21": ["samr21/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"samr21": "samr21/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samr21_reb233_xpro", "mcus": ["atsamr21g18a"], "name": "Performance Analyzer Application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.samr21_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "RF4CE-Network serial interface application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "RF4CE-ZRC controller serial interface application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC single button controller application where the application and the stack running on the same node", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "RF4CE-ZRC Single Button Controller application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "RF4CE-ZRC Target serial interface application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "RF4CE-ZRC Terminal Target-target application SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "RF4CE network library for ATSAMR21G18A controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.nwk#6", "mcus": ["atsamr21g18a"], "name": "RF4Control NWK Lib for atsamr21g18a", "quickstart": {}, "type": "module", "uri": {"samr21": "samr21/html/group__group__rf4control__nwk.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Wireless", "Communication"], "description": "RF4CE network library for ATSAMR21G18A controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.zrc.ctr#6", "mcus": ["atsamr21g18a", "atsam4lc4c", "atxmega256a3u", "atxmega256a3bu", "atmega256rfr2", "at32uc3a3256s"], "name": "RF4Control ZRC Lib for atsamr21g18a", "quickstart": {}, "type": "module", "uri": {"samr21": "samr21/html/group__group__rf4control.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "This examples configures the ADC as a sleepwalking peripheral, using the RTC for conversion timing, to monitor the input voltage, and alert the application when the voltage goes below a predefined voltage. The ADC is setup to do hardware averaging to smooth the resulting voltage readings.", "id": "sam0.applications.vcc_monitor.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "SAM R21 ADC VCC Monitor Example", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.vcc_monitor.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common2.services.delay.example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "SAM R21 Xplained Pro Delay Service Example", "quickstart": {}, "type": "application", "uri": {"samr21": "common2.services.delay.example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM R21 Xplained Pro"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common2.components.memory.sd_mmc.example2.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "SD/MMC card example with FatFs for SAMR21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common2.components.memory.sd_mmc.example2.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common2.components.display.ssd1306.example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "SSD1306 OLED Controller example for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common2.components.display.ssd1306.example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Driver for the SAM R21 Clock management units. Provides a unified interface for the configuration and management of the various clocks in the device, including the bus and generic peripheral clocks.", "id": "sam0.drivers.system.clock#samr21", "mcus": ["samr21"], "name": "SYSTEM - Clock Management for SAMR21", "quickstart": {"samr21": ["samr21/html/asfdoc_sam0_system_clock_exqsg.html"]}, "type": "module", "uri": {"samr21": "samr21/html/group__asfdoc__sam0__system__clock__group.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT03261", "name": "AT03261"}], "asf_type": "drivers", "boards": [], "category": ["Interrupt"], "description": "Driver for the SAM R21 Interrupt System. Provides a unified interface for the configuration and management interrupts within the device, including the enabling, disabling and entering, leaving of critical sections.", "id": "sam0.drivers.system.interrupt#samr21", "mcus": ["samr21"], "name": "SYSTEM - Interrupt Driver", "quickstart": {"samr21": ["samr21/html/asfdoc_sam0_system_interrupt_exqsg.html"]}, "type": "module", "uri": {"samr21": "samr21/html/group__asfdoc__sam0__system__interrupt__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM R21 Xplained Pro"], "category": ["Graphics"], "description": "Example application to play Tic-tac-toe on the OLED1 Xplained Pro extension wing.", "id": "sam0.applications.tictactoe.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Tic-Tac-Toe Application", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.tictactoe.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the EEPROM emulator service testing all functionality against hardware.", "id": "sam0.services.eeprom_emulator.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 EEPROM emulator service", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.services.eeprom_emulator.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the Event System module testing all functionality against hardware.", "id": "sam0.drivers.events.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 Event system driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.events.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the external interrupt module testing all functionality against hardware.", "id": "sam0.drivers.extint.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 External Interrupt Driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.extint.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the NVM module.", "id": "sam0.drivers.nvm.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 NVM Driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.nvm.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the SERCOM SPI interface module testing all functionality against hardware.", "id": "sam0.drivers.sercom.spi.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 SPI Driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.sercom.spi.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the TC interface module testing all functionality against hardware.", "id": "sam0.drivers.tc.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 TC Driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.tc.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the TCC interface module testing all functionality against hardware.", "id": "sam0.drivers.tcc.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 TCC Driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.tcc.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the SERCOM USART interface module testing all functionality against hardware.", "id": "sam0.drivers.sercom.usart.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 USART Driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.sercom.usart.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Unit test for the Watchdog driver", "id": "sam0.drivers.wdt.unit_test.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAM R21 WDT Driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "sam0.drivers.wdt.unit_test.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM R21 Xplained Pro"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC card.", "id": "common2.components.memory.sd_mmc.unit_tests.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "Unit Tests for the SAMR21 SD/MMC driver", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "common2.components.memory.sd_mmc.unit_tests.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "USB Composite Device CDC serial and MSC for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.composite.device.example.cdc_msc.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "USB Composite Device HID keyboard and MSC for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.composite.device.example.hidkbd_msc.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.composite.device.example.hids_cdc_msc.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "USB Composite Device HID mouse and MSC for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.composite.device.example.hidms_msc.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device CDC Example for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.cdc.device.example.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device CDC unit tests for SAM R21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "common.services.usb.class.cdc.device.unit_tests.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device HID Generic for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.hid.device.generic.example.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device HID Keyboard for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.hid.device.keyboard.example.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device HID Keyboard unit tests for SAM R21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "common.services.usb.class.hid.device.keyboard.unit_tests.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device HID Mouse for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.hid.device.mouse.example.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device HID Mouse unit tests for SAM R21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "common.services.usb.class.hid.device.mouse.unit_tests.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "USB Device Mass Storage for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.msc.device.example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Device Mass Storage unit tests for SAM R21 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"samr21": "common.services.usb.class.msc.device.unit_tests.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "USB Device PHDC for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.phdc.device.example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM R21 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "USB Device Vendor Class Example for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.services.usb.class.vendor.device.example.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM R21 Xplained Pro"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.samr21_xpro", "mcus": ["atsamr21g18a"], "name": "USB Standard I/O Example for SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "common.utils.stdio.stdio_usb.example.samr21_xpro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM R21 Xplained Pro"], "category": ["Clocks", "Peripheral Event System", "Timers"], "description": "Hardware based XOSC32K external 32KHz crystal oscillator runtime failure detector SAM D20/D21/R21 devices.", "id": "sam0.applications.xosc32k_fail_detector.samr21_xplained_pro", "mcus": ["atsamr21g18a"], "name": "XOSC32K Failure Detector for the SAM R21 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"samr21": "sam0.applications.xosc32k_fail_detector.samr21_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Audio Bitstream DAC (Digital to Analog Converter) provides functions to convert a 16-bit sample value to a digital bitstream. For UC3 B, this module is only available in AT32UC3B0512 and AT32UC3B1512.", "id": "avr32.drivers.abdac", "mcus": ["uc3a", "uc3a3_a4", "at32uc3b0512", "at32uc3b1512"], "name": "ABDAC - Audio Bitstream DAC", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__abdac.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__abdac.html", "uc3b": "uc3b/html/group__group__avr32__drivers__abdac.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Analog to Digital Converter is able to capture analog signals and transform them into digital format with 10-bit resolution.", "id": "avr32.drivers.adc", "mcus": ["uc3a", "uc3a3_a4", "uc3b"], "name": "ADC - Analog to Digital Converter", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__adc.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__adc.html", "uc3b": "uc3b/html/group__group__avr32__drivers__adc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Analog Conversion"], "description": "Initialize the ADC, use the on-board sensors and see the value change on a terminal.", "id": "avr32.drivers.adc.example.evk1104", "mcus": ["at32uc3a3256"], "name": "ADC Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.adc.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["Analog Conversion"], "description": "Initialize the ADC, use the on-board sensors and see the value change on a terminal.", "id": "avr32.drivers.adc.example.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "ADC Example for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.adc.example.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Cryptography"], "description": "Driver for the AES (Advanced Encryption Standard) module. Provides functions for configuring and initiating ciphering/deciphering with AES algorithms. Several modes (ECB, CBC, OFB, CFB or CTR) and key sizes (128-, 192- or 256-bit) are supported, in addition to manual or DMA-based data input to the AES module.", "id": "avr32.drivers.aes", "mcus": ["uc3a3s_a4s"], "name": "AES - Advanced Encryption Standard", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__aes.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104S"], "category": ["Cryptography"], "description": "Use the AES module, encrypt and decrypt blocks of data in various mode (auto, manual, ECB, CBC).", "id": "avr32.drivers.aes.example.evk1104s", "mcus": ["at32uc3a3256s"], "name": "AES Example for EVK1104S", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.aes.example.evk1104s/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Communication", "Touch"], "description": "UC3 A3/A4/C/L implementation utilizing the touch sensor AT42QT1060.", "id": "avr32.components.touch.at42qt1060#1", "mcus": ["uc3a3_a4", "uc3c", "uc3l"], "name": "AT42QT1060 - UC3 A3/A4/C/L implementation", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__touch__at42qt1060.html", "uc3c": "uc3c/html/group__group__avr32__components__touch__at42qt1060.html", "uc3l": "uc3l/html/group__group__avr32__components__touch__at42qt1060.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Driver for the AT45dbX series SPI DataFlash memories (from ASF V1). It provides functions for initialization and read/write operations at byte or sector level.", "id": "common.components.memory.data_flash.at45dbx._asf_v1", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3l"], "name": "AT45DBX DataFlash (from ASF ver. 1)", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__common__components__memory__data__flash__at45dbx__asf__v1.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__components__memory__data__flash__at45dbx__asf__v1.html", "uc3b": "uc3b/html/group__group__common__components__memory__data__flash__at45dbx__asf__v1.html", "uc3c": "uc3c/html/group__group__common__components__memory__data__flash__at45dbx__asf__v1.html", "uc3l": "uc3l/html/group__group__common__components__memory__data__flash__at45dbx__asf__v1.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.evk1104", "mcus": ["at32uc3a3256"], "name": "AT45DBX DataFlash example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.components.memory.data_flash.at45dbx.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "AT45DBX DataFlash unit tests for EVK1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.components.memory.data_flash.at45dbx.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": [], "description": "Common driver for the AT86RF family transceivers. This layer provides Transceiver Abstraction Layer(TAL) for the application across AT86RF family.\nBasic Architecture: -------------------\n-------------            ----------------            -------------------------------- | Application | -------> | AT86RFx Driver | -------> | AT86RF231/AT86RF230B/AT86RF212 | -------------            ----------------            --------------------------------\nSome of Acronyms used: ---------------------- 1. TX\t\t- Transmission 2. RX\t\t- Reception 3. TAL\t\t- Transceiver Abstration Layer. 4. PAL\t\t- Platform  Abstration Layer. 5. CSMA-CA\t- Carrier Sense Multiple Access with Collision Avoidance 6. TRX\t\t- Transceiver 7. CCA\t\t- Clear Channel Assessment 8. CRC\t\t- Cyclic Redundancy Check 9. FCS\t\t- Frame Check Sequence", "id": "common.components.wireless.at86rfxdriver", "mcus": ["uc3a3s_a4s"], "name": "AT86RFx Driver", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__common__components__wireless__at86rfxdriver.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "", "id": "config.avr32.services.qtouch.generic.uc3#qtouch_method", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c"], "name": "Atmel QTouch Library 4.4 for QTouch Method in AVR UC3 devices", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__common__services__qtouch.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__services__qtouch.html", "uc3b": "uc3b/html/group__group__common__services__qtouch.html", "uc3c": "uc3c/html/group__group__common__services__qtouch.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Audio"], "description": "Using the TPA6130, stream an audio buffer from a DAC.", "id": "avr32.components.audio.amp.tpa6130a2.example.evk1104", "mcus": ["at32uc3a3256"], "name": "Audio Amplifier TPA6130A2 Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.audio.amp.tpa6130a2.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Communication", "Wireless"], "description": "This module is used by default in a single processor approach and by NCP(Network Co-Processor) for a two processor approach.This module includes the whole RF4Control Stack including the RF4Control Include files,MAC ,TAL and PAL Layer source code and should be included only for RF4Control applications or if the Highest Stack Layer is RF4CE.Based on the application requirements the RF4Control Libraries needs to be included from the modules \"AVR2102-RF4Control NWK LIB\" or \"AVR2102- ZRC LIB for Target\" or \"AVR2102- ZRC LIB for Controller\".The \"AVR2025-TAL\" module need not be added if this module is included since it pulls that module automaticlly,If TFA features needs to be added ,the \"AVR2025-TFA\" module needs to be added and the same transceiver selected in this module should be selected .For applications requiring Serial I/O communication the \"Serial I/o-Host\" or \"Serial I/O-NCP\" module should be included along with his module.", "id": "thirdparty.wireless.avr2102_rf4control#source", "mcus": ["at32uc3a3256s", "atmega256rfr2", "atxmega256a3bu", "atxmega256a3u", "atsam4lc4c", "atsamr21g18a", "sam4l"], "name": "AVR2102 - RF4Control Configuration - Stack", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__rf4control.html", "uc3a3_a4": "uc3a3_a4/html/group__group__rf4control.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "Basic clock service unit tests for EVK1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.services.basic.clock.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "Basic SD/MMC/SDIO card example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.components.memory.sd_mmc.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1104"], "category": ["Communication"], "description": "Bluetooth (SPP Profile) with Cybercom stack application, using the EXTBT extension board.", "id": "avr32.applications.uc3-bluetooth-t2bf-spp-demo.evk1104", "mcus": ["at32uc3a3256"], "name": "Bluetooth (SPP Profile) with Cybercom Stack Application for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-bluetooth-t2bf-spp-demo.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Graphics", "Touch"], "description": "Example application demonstrating a calculator using the widget toolkit.", "id": "common.applications.mxt143e_xplained_calc_demo.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Calculator example for the UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.applications.mxt143e_xplained_calc_demo.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["CPU"], "description": "Chip Reset Cause Access. Provides functions for getting and clearing the chip reset source. UC3 implementation of common API.", "id": "common.services.basic.cpu#1", "mcus": ["uc3"], "name": "Chip Reset Cause Access - UC3 implementation", "quickstart": {"uc3a": ["uc3a/html/reset_cause_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/reset_cause_quickstart.html"], "uc3b": ["uc3b/html/reset_cause_quickstart.html"], "uc3c": ["uc3c/html/reset_cause_quickstart.html"], "uc3d": ["uc3d/html/reset_cause_quickstart.html"], "uc3l": ["uc3l/html/reset_cause_quickstart.html"]}, "type": "module", "uri": {"uc3a": "uc3a/html/group__reset__cause__group.html", "uc3a3_a4": "uc3a3_a4/html/group__reset__cause__group.html", "uc3b": "uc3b/html/group__reset__cause__group.html", "uc3c": "uc3c/html/group__reset__cause__group.html", "uc3d": "uc3d/html/group__reset__cause__group.html", "uc3l": "uc3l/html/group__reset__cause__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.evk1104", "mcus": ["at32uc3a3256"], "name": "Common API for Chip Reset Cause Access / Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.cpu.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "Common API for Clocks Control / Example 1 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.clock.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Common API for Clocks Control / Example 1 for UC3-A3-Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.clock.example1.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.evk1104", "mcus": ["at32uc3a3256"], "name": "Common API for Clocks Control / Example 2 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.clock.example2.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Common API for Clocks Control / Example 2 for UC3-A3-Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.clock.example2.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.evk1104", "mcus": ["at32uc3a3256"], "name": "Common API for Clocks Control / Example 3 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.clock.example3.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Common API for Clocks Control / Example 3 for UC3-A3-Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.clock.example3.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.evk1104", "mcus": ["at32uc3a3256"], "name": "Common API for Controlling a TWI Module / Master Mode Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.twi.master.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR UC3 A3/A4 devices.", "id": "common.services.basic.sleepmgr.example.evk1104", "mcus": ["at32uc3a3256"], "name": "Common API for Sleep Management / Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.sleepmgr.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "Toggles output port pins controlling LED1, LED2 and LED3", "id": "common.services.ioport.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "Common IOPORT service example 1 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.ioport.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": [], "description": "Toggles output port pins controlling LED0, LED2 and LED3", "id": "common.services.ioport.example1.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Common IOPORT service example 1 for UC3-A3-Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.ioport.example1.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "Toggles pin connected to LED0", "id": "common.services.ioport.example2.evk1104", "mcus": ["at32uc3a3256"], "name": "Common IOPORT service example 2 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.ioport.example2.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": [], "description": "Toggles pin connected to LED0", "id": "common.services.ioport.example2.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Common IOPORT service example 2 for UC3-A3-Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.ioport.example2.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "Example that reads button SW2 and outputs it on LED0.", "id": "common.services.ioport.example3.evk1104", "mcus": ["at32uc3a3256"], "name": "Common IOPORT service example 3 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.ioport.example3.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": [], "description": "Example that reads button SW0 and outputs it on LED0.", "id": "common.services.ioport.example3.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Common IOPORT service example 3 for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.ioport.example3.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": [], "description": "Unit test application for the common NVM driver.", "id": "common.drivers.nvm.unit_tests.at32uc3a3256_evk1104", "mcus": ["at32uc3a3256"], "name": "Common NVM driver unit tests for at32uc3a3256 on EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.drivers.nvm.unit_tests.at32uc3a3256_evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["CPU"], "description": "CPU Cycle Counter provides an interface to the COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cycle_counter", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "CPU Cycle Counter", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__cpu__cycle__counter.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__cpu__cycle__counter.html", "uc3b": "uc3b/html/group__group__avr32__drivers__cpu__cycle__counter.html", "uc3c": "uc3c/html/group__group__avr32__drivers__cpu__cycle__counter.html", "uc3d": "uc3d/html/group__group__avr32__drivers__cpu__cycle__counter.html", "uc3l": "uc3l/html/group__group__avr32__drivers__cpu__cycle__counter.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.evk1104", "mcus": ["at32uc3a3256"], "name": "CPU Cycle Counter Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.cpu.cc.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "CPU Cycle Counter Example for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.cpu.cc.example.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "CPU MPU Example 1 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.cpu.mpu.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "CPU MPU Example 1 for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.cpu.mpu.example1.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["CPU"], "description": "Driver for CPU specific features. It provides functions for the Cycle Counter, Memory Protection Unit, Secure State or Flashvault, and MCU Reset Cause.", "id": "avr32.drivers.cpu", "mcus": ["uc3"], "name": "CPU Reset Cause", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__cpu.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__cpu.html", "uc3b": "uc3b/html/group__group__avr32__drivers__cpu.html", "uc3c": "uc3c/html/group__group__avr32__drivers__cpu.html", "uc3d": "uc3d/html/group__group__avr32__drivers__cpu.html", "uc3l": "uc3l/html/group__group__avr32__drivers__cpu.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": [], "description": "Provide an application example (from ASF V1) using the Atmel DataFlash AT25DBx component. The DataFlash requires an SPI bus as a low level communication interface.", "id": "avr32.components.memory.dataflash.at45dbx.example.evk1104", "mcus": ["at32uc3a3256"], "name": "DataFlash AT45DBX Example for EVK1104 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.memory.dataflash.at45dbx.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Debug macros and functions for tracing memory usage for the malloc() and free() functions. Can also be used to get information about both size and placement of the heap memory.", "id": "avr32.utils.debug", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "Debug macros and functions", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__utils__debug.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__utils__debug.html", "uc3b": "uc3b/html/group__group__avr32__utils__debug.html", "uc3c": "uc3c/html/group__group__avr32__utils__debug.html", "uc3d": "uc3d/html/group__group__avr32__utils__debug.html", "uc3l": "uc3l/html/group__group__avr32__utils__debug.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Loop based delay routines. Provides microseconds, milliseconds and second delays. Common API for SAM, UC3 and XMEGA.", "id": "common.services.delay#uc3", "mcus": ["uc3"], "name": "Delay routines", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__common__services__delay.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__services__delay.html", "uc3b": "uc3b/html/group__group__common__services__delay.html", "uc3c": "uc3c/html/group__group__common__services__delay.html", "uc3d": "uc3d/html/group__group__common__services__delay.html", "uc3l": "uc3l/html/group__group__common__services__delay.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": [], "description": "Demo application for UC3-A3 that reads the value from a touch slider to set the brightness of a LED using PWM.", "id": "avr32.applications.uc3-a3_xplained_demo", "mcus": ["at32uc3a3256"], "name": "Demo application for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_xplained_demo/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Graphics"], "description": "Use the ET024006DHU TFT display, display a colored animation to the screen.", "id": "avr32.components.display.et024006dhu.example2.evk1104", "mcus": ["at32uc3a3256"], "name": "Display ET024006DHU Example 2 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.display.et024006dhu.example2.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Graphics"], "description": "Use the ET024006DHU TFT display, display text messages and draw a square.", "id": "avr32.components.display.et024006dhu.example.evk1104", "mcus": ["at32uc3a3256"], "name": "Display ET024006DHU Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.display.et024006dhu.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Memory"], "description": "Dlmalloc is a version of malloc/free/realloc, which offers memory administration functionallity.", "id": "avr32.services.storage.dlmalloc", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "DLMALLOC - Dynamic memory allocation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__services__storage__dlmalloc.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__services__storage__dlmalloc.html", "uc3b": "uc3b/html/group__group__avr32__services__storage__dlmalloc.html", "uc3c": "uc3c/html/group__group__avr32__services__storage__dlmalloc.html", "uc3d": "uc3d/html/group__group__avr32__services__storage__dlmalloc.html", "uc3l": "uc3l/html/group__group__avr32__services__storage__dlmalloc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller"], "description": "The DMA (Direct Memory Access Controller) Controller transfers data from a source peripheral to a destination peripheral over one or more System Bus.", "id": "avr32.drivers.dmaca", "mcus": ["uc3a3_a4"], "name": "DMACA - DMA Controller A", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__dmaca.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104S"], "category": ["DMA Controller"], "description": "Using the DMACA, transfer data from RAM to AES then transfer the data back to the RAM.", "id": "avr32.drivers.dmaca.example1.evk1104", "mcus": ["at32uc3a3256s"], "name": "DMACA RAM TO AES to ram  Example 1 for EVK1104S", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.dmaca.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["DMA Controller"], "description": "Using the DMACA, transfer data from RAM to RAM.", "id": "avr32.drivers.dmaca.example2.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "DMACA RAM-to-RAM Example 2 for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.dmaca.example2.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["DMA Controller"], "description": "Using the DMACA, transfer data from RAM to RAM.", "id": "avr32.drivers.dmaca.example2.evk1104", "mcus": ["at32uc3a3256"], "name": "DMACA RAM_TO_RAM_EXAMPLE  Example2 for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.dmaca.example2.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Timers"], "description": "This example involves 2 timer/counter channels, one configured in capture mode(input) and the other configured in Waveform mode(output) to generate a PWM on the output.", "id": "avr32.drivers.tc.example2.evk1104", "mcus": ["at32uc3a3256"], "name": "Drivers TC Example2 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.tc.example2.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Digital Signal Processing"], "description": "The Digital Signal Processing Library provides a complete function set to manipulate both 16 and 32-bit fixed-point numbers.\nThis is the source code for the DSP library.", "id": "avr32.services.dsplib", "mcus": ["uc3"], "name": "DSP - Digital signal processing library - Source", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__dsplib.html", "uc3a3_a4": "uc3a3_a4/html/group__group__dsplib.html", "uc3b": "uc3b/html/group__group__dsplib.html", "uc3c": "uc3c/html/group__group__dsplib.html", "uc3d": "uc3d/html/group__group__dsplib.html", "uc3l": "uc3l/html/group__group__dsplib.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1104"], "category": ["CPU", "Communication"], "description": "This application is aimed to demonstrate the AVR UC3 series capabilities in term of DSP computations.", "id": "avr32.applications.uc3.dsplib.demo.evk1104", "mcus": ["at32uc3a3256"], "name": "DSPLIB Application for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3.dsplib.demo.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "EBI (External Bus Interface) SMC (Static Memory Controller) allows to connect a Static Memory to the microcontroller.", "id": "avr32.drivers.ebi.smc", "mcus": ["uc3a0", "uc3a3", "uc3a3s", "uc3c0"], "name": "EBI Static Memory Controller (SMC)", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__ebi__smc.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__ebi__smc.html", "uc3c": "uc3c/html/group__group__avr32__drivers__ebi__smc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Hardware Error Corrected Code Generation (Hamming and Reed-Solomon).", "id": "avr32.drivers.ecchrs", "mcus": ["uc3a3_a4"], "name": "ECCHRS - Error Corrected Code Controller", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__ecchrs.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Memory"], "description": "Using the ECCHRS, program an external Nand Flash block and write the corresponding ECC codewords, then read back the data and check if they are valid thanks to the ECC codewords.", "id": "avr32.drivers.ecchrs.example.evk1104", "mcus": ["at32uc3a3256"], "name": "ECCHRS Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.ecchrs.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["I/O", "Interrupt"], "description": "EIC allows pins to be configured as external interrupts.", "id": "avr32.drivers.eic", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "EIC - External Interrupt Controller", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__eic.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__eic.html", "uc3b": "uc3b/html/group__group__avr32__drivers__eic.html", "uc3c": "uc3c/html/group__group__avr32__drivers__eic.html", "uc3d": "uc3d/html/group__group__avr32__drivers__eic.html", "uc3l": "uc3l/html/group__group__avr32__drivers__eic.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to wake up the CPU when in static sleep mode.", "id": "avr32.drivers.eic.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "EIC Example1 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.eic.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to generate interrupts.", "id": "avr32.drivers.eic.example2.evk1104", "mcus": ["at32uc3a3256"], "name": "EIC Example2 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.eic.example2.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) and the SCAN Keypad interface: decode the key pressend and light LEDs.", "id": "avr32.drivers.eic.example3.evk1104", "mcus": ["at32uc3a3256"], "name": "EIC Example3 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.eic.example3.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "This application is aimed to demonstrate the USB Accessory with Android Devices.", "id": "common.services.usb.class.aoa.host.example.at32uc3a3256_evk1104.example", "mcus": ["at32uc3a3256"], "name": "EVK1104 USB Android Accessory Application", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.aoa.host.example.at32uc3a3256_evk1104.example/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "This test application implements several USB error sequences to test the robustness of a USB host core.", "id": "common.services.usb.host.tests.generator.evk1104", "mcus": ["at32uc3a3256"], "name": "EVK1104 USB device generator to test USB host core", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.host.tests.generator.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "This application is aimed to demonstrate the 32-bit AVR UC3 A3 Flash Microcontrollers USB Mass Storage with SD/MMC capabilities.", "id": "avr32.applications.evk1104-usb-msc-sd-demo.example", "mcus": ["at32uc3a3256"], "name": "EVK1104 USB MSC on SD card Application", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.evk1104-usb-msc-sd-demo.example/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "A software service to estimate an oscillator frequency using a known oscillator (external or internal) as a reference.", "id": "avr32.services.freq_detect", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3l", "uc3d"], "name": "External oscillator frequency detection", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__services__freq__detect.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__services__freq__detect.html", "uc3b": "uc3b/html/group__group__avr32__services__freq__detect.html", "uc3c": "uc3c/html/group__group__avr32__services__freq__detect.html", "uc3d": "uc3d/html/group__group__avr32__services__freq__detect.html", "uc3l": "uc3l/html/group__group__avr32__services__freq__detect.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "USART Shell-like application providing commands to access files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the low-level FAT API.", "id": "avr32.services.fs.fat.example.evk1104", "mcus": ["at32uc3a3256"], "name": "FAT File System Example 1 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.fs.fat.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "USART Shell-like application providing 3 operations to be performed on files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the POSIX-like API.", "id": "avr32.services.fs.fat.fsaccess.example.evk1104", "mcus": ["at32uc3a3256"], "name": "FAT File System Example 2 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.fs.fat.fsaccess.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "FAT file system with POSIX compilent access methods.", "id": "avr32.services.fs.fat.os", "mcus": ["uc3"], "name": "FAT file system with POSIX API support", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__services__fs__fat.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__services__fs__fat.html", "uc3b": "uc3b/html/group__group__avr32__services__fs__fat.html", "uc3c": "uc3c/html/group__group__avr32__services__fs__fat.html", "uc3l": "uc3l/html/group__group__avr32__services__fs__fat.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "FLASHC interfaces a flash block with the 32-bit internal HSB bus.", "id": "avr32.drivers.flashc", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c"], "name": "FLASHC - Flash Controller", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__flashc.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__flashc.html", "uc3b": "uc3b/html/group__group__avr32__drivers__flashc.html", "uc3c": "uc3c/html/group__group__avr32__drivers__flashc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Memory"], "description": "Use the FLASHC, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashc.example.evk1104", "mcus": ["at32uc3a3256"], "name": "FLASHC Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.flashc.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["I/O"], "description": "GPIO gives access to the MCU pins.", "id": "avr32.drivers.gpio", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "GPIO - General-Purpose Input/Output", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__gpio.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__gpio.html", "uc3b": "uc3b/html/group__group__avr32__drivers__gpio.html", "uc3c": "uc3c/html/group__group__avr32__drivers__gpio.html", "uc3d": "uc3d/html/group__group__avr32__drivers__gpio.html", "uc3l": "uc3l/html/group__group__avr32__drivers__gpio.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.evk1104", "mcus": ["at32uc3a3256"], "name": "GPIO Local BUS Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.gpio.local_bus_example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.evk1104", "mcus": ["at32uc3a3256"], "name": "GPIO Peripheral Bus Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.gpio.peripheral_bus_example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "graphic library example for the EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.gfx.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "graphic library example for the UC3-A3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.gfx.example1.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.evk1104", "mcus": ["at32uc3a3256"], "name": "HMATRIX Example1 for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.hmatrix.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "HMATRIX Example1 for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.hmatrix.example.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Graphics"], "description": "The IJG (the Independent JPEG Group) JPEG decoder offers, besides JPEG decoding, basic scaling (factors n*2) and an option to implement different memory management backends.", "id": "avr32.services.graphics.codec.jpg.ijg", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3l"], "name": "IJG JPEG Decoder", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__services__graphics__codec__jpg__ijg.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__services__graphics__codec__jpg__ijg.html", "uc3b": "uc3b/html/group__group__avr32__services__graphics__codec__jpg__ijg.html", "uc3c": "uc3c/html/group__group__avr32__services__graphics__codec__jpg__ijg.html", "uc3l": "uc3l/html/group__group__avr32__services__graphics__codec__jpg__ijg.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3-A3 Xplained"], "category": [], "description": "A simple example for verifying that the ILI9341 low level driver works", "id": "common.components.display_controller.ili9341.example1.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "ILI9341 Display Controller Example for UC3-A3-XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.components.display_controller.ili9341.example1.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Interrupt"], "description": "This driver interfaces the INTC module which collects interrupt requests from the peripherals, prioritizes them, and delivers an interrupt request and an autovector to the CPU.", "id": "avr32.drivers.intc", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "INTC - Interrupt Controller", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__intc__group.html", "uc3a3_a4": "uc3a3_a4/html/group__intc__group.html", "uc3b": "uc3b/html/group__intc__group.html", "uc3c": "uc3c/html/group__intc__group.html", "uc3d": "uc3d/html/group__intc__group.html", "uc3l": "uc3l/html/group__intc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.evk1104", "mcus": ["at32uc3a3256"], "name": "INTC Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.intc.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": ["Interrupt"], "description": "Driver for global enabling and disabling of interrupts.", "id": "common.utils.interrupt#uc3", "mcus": ["uc3"], "name": "Interrupt management - UC3 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__interrupt__group.html", "uc3a3_a4": "uc3a3_a4/html/group__interrupt__group.html", "uc3b": "uc3b/html/group__interrupt__group.html", "uc3c": "uc3c/html/group__interrupt__group.html", "uc3d": "uc3d/html/group__interrupt__group.html", "uc3l": "uc3l/html/group__interrupt__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "IOPORT - General purpose I/O driver that includes functions for various I/O operations (set direction, set/get pin value, toggle pins etc.) Common API for XMEGA, UC3 and SAM.", "id": "common.services.ioport#1", "mcus": ["uc3"], "name": "IOPORT - General purpose I/O service", "quickstart": {"uc3a": ["uc3a/html/ioport_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/ioport_quickstart.html"], "uc3b": ["uc3b/html/ioport_quickstart.html"], "uc3c": ["uc3c/html/ioport_quickstart.html"], "uc3d": ["uc3d/html/ioport_quickstart.html"], "uc3l": ["uc3l/html/ioport_quickstart.html"]}, "type": "module", "uri": {"uc3a": "uc3a/html/group__ioport__group.html", "uc3a3_a4": "uc3a3_a4/html/group__ioport__group.html", "uc3b": "uc3b/html/group__ioport__group.html", "uc3c": "uc3c/html/group__ioport__group.html", "uc3d": "uc3d/html/group__ioport__group.html", "uc3l": "uc3l/html/group__ioport__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "The ET024006DHU is a RGB LCD display from EDT and it offers a resolution of 240x320 pixels. The driver uses the display in a 16-bit mode however each pixel has a resolution of 18 bits (6 bits for each color). In 16-bit mode red and blue have 5-bit while green has 6-bit resolution. The display offers a parallel and a serial interface currenlty only the parallel mode is implemented in the driver.", "id": "avr32.components.display.et024006dhu", "mcus": ["uc3a0", "uc3a3", "uc3a3s", "uc3c0"], "name": "LCD Display - ET024006DHU", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__display__et024006dhu.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__display__et024006dhu.html", "uc3c": "uc3c/html/group__group__avr32__components__display__et024006dhu.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Graphics"], "description": "LodePNG is a PNG image decoder. It is made for C (ISO C90), and has a C++ wrapper with a more convenient interface on top. More info at: http://members.gamedev.net/lode/projects/LodePNG/", "id": "avr32.services.graphics.codec.png.lodepng", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3l"], "name": "LodePNG PNG Decoder", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__services__graphics__codec__png__lodepng.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__services__graphics__codec__png__lodepng.html", "uc3b": "uc3b/html/group__group__avr32__services__graphics__codec__png__lodepng.html", "uc3c": "uc3c/html/group__group__avr32__services__graphics__codec__png__lodepng.html", "uc3l": "uc3l/html/group__group__avr32__services__graphics__codec__png__lodepng.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC Beacon  Application Coordinator AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC Beacon  Application Device AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC Beacon Application Coordinator AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC Beacon Application Device AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC No Beacon  Application Coordinator AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC No Beacon  Application Device AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC No Beacon Application Coordinator AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC No Beacon Application Device AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The MAC NoBeacon Sleep application demonstrates transceiver sleep feature .The device wakes from sleep every 2 seconds and transmits data to the coordinator.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC NoBeacon Sleep Application AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "The MAC NoBeacon Sleep application demonstrates transceiver sleep feature .The device wakes from sleep every 2 seconds and transmits data to the coordinator.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC NoBeacon Sleep Application-AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface Beacon FFD AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface Beacon FFD AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface Beacon RFD AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface Beacon RFD AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface NoBeacon FFD AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface NoBeacon FFD AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface NoBeacon RFD AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "MAC Serial Interface NoBeacon RFD AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "This driver interfaces the MCI (MultiMedia Card Interface) module. It will add functions to read, write a SD/MMC card.", "id": "avr32.drivers.mci.v2", "mcus": ["uc3a3_a4"], "name": "MCI - MultiMedia Card Interface", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__avr32__drivers__mci.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "MPU driver that allows the user to divide the memory space into different protection regions.", "id": "avr32.drivers.cpu.mpu", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "MPU - Memory Protection Unit", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__cpu__mpu.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__cpu__mpu.html", "uc3b": "uc3b/html/group__group__avr32__drivers__cpu__mpu.html", "uc3c": "uc3c/html/group__group__avr32__drivers__cpu__mpu.html", "uc3d": "uc3d/html/group__group__avr32__drivers__cpu__mpu.html", "uc3l": "uc3l/html/group__group__avr32__drivers__cpu__mpu.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Touch", "USB"], "description": "Reads input from maXTouch and gives touch indication on display.", "id": "common.applications.mxt143e_xplained_multi-touch_demo.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "mXT143E Xplained multi-touch demo for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.applications.mxt143e_xplained_multi-touch_demo.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Touch"], "description": "Simple paint application using the MXT143E Xplained top module.", "id": "common.applications.mxt143e_xplained_paint_demo.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "mXT143E Xplained paint demo for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.applications.mxt143e_xplained_paint_demo.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "NAND Flash component unit Test for EVK1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.components.memory.nand_flash.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "NAND Flash component operation. Provides common APIs for UC3A3/A4 devices.", "id": "common.components.memory.nand_flash#0", "mcus": ["uc3a3_a4"], "name": "NAND Flash on EBI", "quickstart": {"uc3a3_a4": ["uc3a3_a4/html/common_components_nand_flash_quickstart.html"]}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__common__components__nand__flash__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Memory"], "description": "Read and write data to an external Nand flash memory through the EBI.", "id": "avr32.components.memory.nand_flash.nand_flash_ebi.example.evk1104", "mcus": ["at32uc3a3256"], "name": "Nand Flash on EBI Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.memory.nand_flash.nand_flash_ebi.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Includes AT45DBX external dataflash. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#extmem#2", "mcus": ["uc3a", "uc3a3", "uc3a4", "uc3b", "uc3c", "uc3a3s"], "name": "NVM - Non volatile memory access", "quickstart": {"uc3a": ["uc3a/html/common_nvm_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/common_nvm_quickstart.html"], "uc3b": ["uc3b/html/common_nvm_quickstart.html"], "uc3c": ["uc3c/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"uc3a": "uc3a/html/group__nvm__group.html", "uc3a3_a4": "uc3a3_a4/html/group__nvm__group.html", "uc3b": "uc3b/html/group__nvm__group.html", "uc3c": "uc3c/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.at32uc3a3256_evk1104", "mcus": ["at32uc3a3256"], "name": "NVM example for at32uc3a3256 on EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.drivers.nvm.example.at32uc3a3256_evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller", "Memory"], "description": "The Peripheral DMA controller (PDCA) transfers data between on-chip peripheral modules such as USART, SPI, SSC and on- and off-chip memories.", "id": "avr32.drivers.pdca", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "PDCA - Peripheral DMA Controller", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__pdca.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__pdca.html", "uc3b": "uc3b/html/group__group__avr32__drivers__pdca.html", "uc3c": "uc3c/html/group__group__avr32__drivers__pdca.html", "uc3d": "uc3d/html/group__group__avr32__drivers__pdca.html", "uc3l": "uc3l/html/group__group__avr32__drivers__pdca.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.evk1104", "mcus": ["at32uc3a3256"], "name": "PDCA Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.pdca.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.uc3a3256s_rz600rf212", "mcus": ["at32uc3a3256s"], "name": "Performance Analyzer Application AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.uc3a3256s_rz600rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.uc3a3256s_rz600rf231", "mcus": ["at32uc3a3256s"], "name": "Performance Analyzer Application AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.uc3a3256s_rz600rf231/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["Clocks", "Power Management"], "description": "Configure OSC0 as source of the main clock and configure a generic clock GCLK with OSC0 as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.pm.example1.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "PM Example 1 for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.pm.example1.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Clocks", "Power Management"], "description": "Configure OSC0 as source of the main clock and configure a generic clock GCLK with OSC0 as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.pm.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "PM Example1 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.pm.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Clocks", "Power Management"], "description": "Configure a PLL (or a DFLL, depending on the device) and use it as the main clock source for the synchronous clocks. Configure a Generic Clock with the PLL (or DFLL) as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example2.evk1104", "mcus": ["at32uc3a3256"], "name": "PM Example2 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.pm.example2.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Implementation for UC3 A0/A1/A3/A4/B0/B1, using the PM peripheral module.", "id": "avr32.drivers.pm#0", "mcus": ["uc3a", "uc3a3_a4", "uc3b"], "name": "PM Power Manager- UC3 A0/A1/A3/A4/B0/B1 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__pm.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__pm.html", "uc3b": "uc3b/html/group__group__avr32__drivers__pm.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Cryptography"], "description": "PolarSSL is a light-weight open source cryptographic and SSL/TLS library written in C.", "id": "avr32.services.crypto.polarssl", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3l", "uc3d"], "name": "PolarSSL - Small Cryptographic and SSL/TLS Library", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__services__crypto__polarssl.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__services__crypto__polarssl.html", "uc3b": "uc3b/html/group__group__avr32__services__crypto__polarssl.html", "uc3c": "uc3c/html/group__group__avr32__services__crypto__polarssl.html", "uc3d": "uc3d/html/group__group__avr32__services__crypto__polarssl.html", "uc3l": "uc3l/html/group__group__avr32__services__crypto__polarssl.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Touch"], "description": "The QT1081 sensor is operated by GPIOs and this driver provides a wrapper for the GPIO accesses.", "id": "avr32.components.touch.qt1081", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3l"], "name": "QT1081 QTouch sensor", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__touch__qt1081.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__touch__qt1081.html", "uc3b": "uc3b/html/group__group__avr32__components__touch__qt1081.html", "uc3c": "uc3c/html/group__group__avr32__components__touch__qt1081.html", "uc3l": "uc3l/html/group__group__avr32__components__touch__qt1081.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Touch"], "description": "This driver offers configuration as well as checking the status of the touch sensor. The driver uses the SPI to communicate with the sensor and GPIO as a status change input from the sensor. It is possible to add a callback function from the application and this will be executed each time a change has been detected in the sensor state.", "id": "avr32.components.touch.qt60168", "mcus": ["uc3a", "uc3a3", "uc3b", "uc3c", "uc3l"], "name": "QT60168 16-key QMatrix touch sensor", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__touch__qt60168.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__touch__qt60168.html", "uc3b": "uc3b/html/group__group__avr32__components__touch__qt60168.html", "uc3c": "uc3c/html/group__group__avr32__components__touch__qt60168.html", "uc3l": "uc3l/html/group__group__avr32__components__touch__qt60168.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Touch"], "description": "Use the QT10168 component to detect key touch and light LEDs.", "id": "avr32.components.touch.qt60168.example.evk1104", "mcus": ["at32uc3a3256"], "name": "QT60168 Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.touch.qt60168.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Touch"], "description": "This driver offers resistive touch measurements by using the on-chip ADC. In addition it offers calibration and a callback function for the application. To improve the overall results four ADC channels are used to measure the touch position. That means the measurements are done from each direction of the touch surface.", "id": "avr32.components.touch.resistive_touch#0", "mcus": ["uc3a", "uc3a3_a4"], "name": "Resistive Touch driver", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__touch__resistive__touch.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__touch__resistive__touch.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "RF4CE - ZRC Terminal target application AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "RF4CE Network serial interface AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "RF4CE Network serial interface AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "RF4CE- ZRC Terminal target application AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "RF4CE-ZRC controller serial interface AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "RF4CE-ZRC controller serial interface AT86RFRF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "RF4CE-ZRC target serial interface AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "RF4CE-ZRC target serial interface AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "RF4CE network library for UC3A3256S controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.nwk#1", "mcus": ["at32uc3a3256s"], "name": "RF4Control NWK Lib for at32uc3a3256s", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__rf4control__nwk.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "Driver for the RTC (32-bit Real Time Counter). The RTC enables periodic interrupts at long intervals, or accurate measurement of real-time sequences. Can be clocked from internal RC oscillator or external 32 kHz crystal.", "id": "avr32.drivers.rtc", "mcus": ["uc3a", "uc3a3_a4", "uc3b"], "name": "RTC - Real Time Counter", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__rtc.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__rtc.html", "uc3b": "uc3b/html/group__group__avr32__drivers__rtc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Timers"], "description": "Use the RTC module with an external 32 KHz oscillator.: display on a USART a real time counter incremented every second (interrupt-based example).", "id": "avr32.drivers.rtc.example.evk1104", "mcus": ["at32uc3a3256"], "name": "RTC Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.rtc.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "Driver for SD (Secure Digital) / MMC (MultiMedia Card) access using MCI (Multimedia Card Interface). This driver is used to setup access to SD/MMC memory cards using the MCI interface. DMA is used for data transfers to offload the CPU.", "id": "avr32.components.memory.sd_mmc.sd_mmc_mci", "mcus": ["uc3a3_a4"], "name": "SD/MMC card access using MCI", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__memory__sd__mmc__sd__mmc__mci.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "Driver for SD (Secure Digital) / MMC (MultiMedia Card) access using SPI (Serial Peripheral Interface). This driver is used to setup access to SD/MMC memory cards using the SPI interface.", "id": "avr32.components.memory.sd_mmc.sd_mmc_spi", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "SD/MMC card access using SPI", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__memory__sd__mmc__sd__mmc__spi.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__memory__sd__mmc__sd__mmc__spi.html", "uc3b": "uc3b/html/group__group__avr32__components__memory__sd__mmc__sd__mmc__spi.html", "uc3c": "uc3c/html/group__group__avr32__components__memory__sd__mmc__sd__mmc__spi.html", "uc3d": "uc3d/html/group__group__avr32__components__memory__sd__mmc__sd__mmc__spi.html", "uc3l": "uc3l/html/group__group__avr32__components__memory__sd__mmc__sd__mmc__spi.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "SD/MMC card example for EVK1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.components.memory.sd_mmc.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Memory"], "description": "Read and write data to an external SD or MMC card through the MCI (Memory Card Interface).", "id": "avr32.components.memory.sdmmc.mci.example.evk1104", "mcus": ["at32uc3a3256"], "name": "SD/MMC using MCI Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.memory.sdmmc.mci.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "This a configuration for the MT48LC16M16A2TG7E SDRAM from Mircon. This configuration will be used by the EBI driver to set up e.g. bus width and timing for the SDRAM controller.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e", "mcus": ["uc3a", "uc3a3", "uc3a3s", "uc3c0"], "name": "SDRAM MT48LC16M16A2TG7E", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__memory__sdram__mt48lc16m16a2tg7e.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__memory__sdram__mt48lc16m16a2tg7e.html", "uc3c": "uc3c/html/group__group__avr32__components__memory__sdram__mt48lc16m16a2tg7e.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": ["Memory"], "description": "Read and write data to an external SDRAM connected to the EBI SDRAMC.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.evk1104", "mcus": ["at32uc3a3256"], "name": "SDRAM MT48LC16M16A2TG7E Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Sensors"], "description": "The sensor device service provides high-level interfaces and binary driver libraries for sensor devices on systems built around AVR microcontrollers. Common API for UC3, XMEGA, and AVR MEGA.", "id": "common.services.sensors#uc3", "mcus": ["uc3"], "name": "Sensors - Sensor Device Stack - UC3 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__common__services__sensors.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__services__sensors.html", "uc3b": "uc3b/html/group__group__common__services__sensors.html", "uc3c": "uc3c/html/group__group__common__services__sensors.html", "uc3d": "uc3d/html/group__group__common__services__sensors.html", "uc3l": "uc3l/html/group__group__common__services__sensors.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.evk1104", "mcus": ["at32uc3a3256"], "name": "Shared AVR API for SPI Master Mode / Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.basic.spi.master_example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Power Management"], "description": "The sleep manager provides functions for centralized management of sleep modes. Common API for SAM, UC3 and XMEGA.", "id": "common.services.basic.sleepmgr#0", "mcus": ["uc3"], "name": "Sleep manager - UC3 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__sleepmgr__group.html", "uc3a3_a4": "uc3a3_a4/html/group__sleepmgr__group.html", "uc3b": "uc3b/html/group__sleepmgr__group.html", "uc3c": "uc3c/html/group__sleepmgr__group.html", "uc3d": "uc3d/html/group__sleepmgr__group.html", "uc3l": "uc3l/html/group__sleepmgr__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the SPI (Serial Peripheral Interface). The SPI circuit is a synchronous serial data link that provides communication with external devices in Master or Slave mode. Connection to Peripheral DMA Controller channel capabilities optimizes data transfers.", "id": "avr32.drivers.spi", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "SPI - Serial Peripheral Interface", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__spi.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__spi.html", "uc3b": "uc3b/html/group__group__avr32__drivers__spi.html", "uc3c": "uc3c/html/group__group__avr32__drivers__spi.html", "uc3d": "uc3d/html/group__group__avr32__drivers__spi.html", "uc3l": "uc3l/html/group__group__avr32__drivers__spi.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the I2S protocol using the SSC (Synchronous Serial Controller). The Atmel SSC provides a synchronous communication link with external devices. It supports several serial synchronous communication protocols generally used in audio and telecom applications such as I2S, Short Frame Sync, Long Frame Sync, etc.", "id": "avr32.drivers.ssc.i2s", "mcus": ["uc3a", "uc3b", "uc3a3_a4"], "name": "SSC - Synchronous Serial Controller (I2S)", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__ssc__i2s.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__ssc__i2s.html", "uc3b": "uc3b/html/group__group__avr32__drivers__ssc__i2s.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": ["Communication"], "description": "Common standard serial I/O management driver that implements a stdio serial interface on AVR devices.", "id": "common.utils.stdio.stdio_serial#uc3", "mcus": ["uc3"], "name": "Standard serial I/O (stdio) - UC3 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__common__utils__stdio__stdio__serial.html", "uc3a3_a4": "uc3a3_a4/html/group__group__common__utils__stdio__stdio__serial.html", "uc3b": "uc3b/html/group__group__common__utils__stdio__stdio__serial.html", "uc3c": "uc3c/html/group__group__common__utils__stdio__stdio__serial.html", "uc3d": "uc3d/html/group__group__common__utils__stdio__stdio__serial.html", "uc3l": "uc3l/html/group__group__common__utils__stdio__stdio__serial.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#1", "mcus": ["uc3a3_a4"], "name": "System Clock Control - UC3 A3/A4 implementation", "quickstart": {"uc3a3_a4": ["uc3a3_a4/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "Driver for the TC (Timer/Counter). The TC includes three identical 16-bit Timer/Counter channels. Each channel can be independently programmed to perform a wide range of functions including frequency measurement, event counting, interval measurement, pulse generation, delay timing and pulse width modulation.", "id": "avr32.drivers.tc", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "TC - Timer/Counter", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__tc.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__tc.html", "uc3b": "uc3b/html/group__group__avr32__drivers__tc.html", "uc3c": "uc3c/html/group__group__avr32__drivers__tc.html", "uc3d": "uc3d/html/group__group__avr32__drivers__tc.html", "uc3l": "uc3l/html/group__group__avr32__drivers__tc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Timers"], "description": "Using the TC module, set-up a Timer/Counter to output a 10.16% duty cycle square wave on TIOA0. Switch the device into the FROZEN sleep mode (thus still maintaining the TC activity).", "id": "avr32.drivers.tc.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "TC Example 1 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.tc.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.evk1104", "mcus": ["at32uc3a3256"], "name": "TC Example 3 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.tc.example3.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "TC Example 3 for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.tc.example3.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Audio"], "description": "Driver implementation for AVR UC3 A3/A4, making use of the TWIM module for the control stream.", "id": "avr32.components.audio.amp.tpa6130a2#1", "mcus": ["uc3a3_a4"], "name": "TPA6130A2 Audio Amplifier Component - UC3 A3/A4 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__components__audio__amp__tpa6130a2.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "TWI Two-Wire Interface service. Common API.", "id": "common.services.basic.twi#2", "mcus": ["uc3d", "uc3l", "uc3c", "uc3a3_a4"], "name": "TWI - Two-Wire Interface - UC3 A3/A4/C/D/L implementation", "quickstart": {"uc3a3_a4": ["uc3a3_a4/html/twi_quickstart.html"], "uc3c": ["uc3c/html/twi_quickstart.html"], "uc3d": ["uc3d/html/twi_quickstart.html"], "uc3l": ["uc3l/html/twi_quickstart.html"]}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__twi__group.html", "uc3c": "uc3c/html/group__twi__group.html", "uc3d": "uc3d/html/group__twi__group.html", "uc3l": "uc3l/html/group__twi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the TWIM (Two-Wire Master Interface). This driver provides access to the main features of the TWIM controller. The TWIM interconnects components on a unique two-wire bus. The TWIM is programmable as a master with sequential or single-byte access. Multiple master capability is supported.", "id": "avr32.drivers.twim", "mcus": ["uc3a3_a4", "uc3c", "uc3l", "uc3d"], "name": "TWI - Two-Wire Master Interface", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__twim.html", "uc3c": "uc3c/html/group__group__avr32__drivers__twim.html", "uc3d": "uc3d/html/group__group__avr32__drivers__twim.html", "uc3l": "uc3l/html/group__group__avr32__drivers__twim.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the TWIS (Two-Wire Slave Interface). This driver provides access to the main features of the TWIS controller. The TWIS interconnects a TWI slave on a unique two-wire bus. The TWIS is programmable as a slave with sequential or single-byte access. Internal Address access and Ten bit addressing mode is supported.", "id": "avr32.drivers.twis", "mcus": ["uc3a3_a4", "uc3c", "uc3l", "uc3d"], "name": "TWI - Two-Wire Slave Interface", "quickstart": {}, "type": "module", "uri": {"uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__twis.html", "uc3c": "uc3c/html/group__group__avr32__drivers__twis.html", "uc3d": "uc3d/html/group__group__avr32__drivers__twis.html", "uc3l": "uc3l/html/group__group__avr32__drivers__twis.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Communication"], "description": "Using the TWIM module, perform read and write operations from/to a virtual memory space pre-allocated in internal RAM in a slave TWI device. To be used with two boards with the corresponding TWIS module example.", "id": "avr32.drivers.twim.master_example.evk1104", "mcus": ["at32uc3a3256"], "name": "TWIM Master Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.twim.master_example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Communication"], "description": "Using the TWIS module, process read and write operations from/to a virtual memory space pre-allocated in internal RAM. To be used with two boards with the corresponding TWIM module example.", "id": "avr32.drivers.twis.slave_example.evk1104", "mcus": ["at32uc3a3256"], "name": "TWIS Slave Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.twis.slave_example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained uses the accelerometer, gyroscope, or a combination of these two data sources on an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) to wake an MCU from low power operation as a result of an event-triggered interrupt from a sensor.", "id": "avr32.applications.uc3-a3_avrsbin1_wake", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained + Inertial Board #1 Wakeup Demo", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsbin1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained obtains electronic compass data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then prompts the user to make a series of manual steps to calibrate the compass to the local geomagnetic field.", "id": "avr32.applications.uc3-a3_avrsbin1_compass-cal", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Inertial Board #1 Compass Calibration", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsbin1_compass-cal/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained obtains sensor data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then displays accelerometer, gyroscope, and electronic compass data.", "id": "avr32.applications.uc3-a3_avrsbin1_demo", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsbin1_demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained obtains sensor data from the accelerometer, gyroscope, and electronic compass devices on an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "avr32.applications.uc3-a3_avrsbin1_visualizer", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Xplained Inertial Board #1 Visualizer", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsbin1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained uses the light sensor or proximity sensor on an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1) then displays light and proximity data. Configuration options allow setting threshold levels for wake up and various other controls.", "id": "avr32.applications.uc3-a3_avrsblp1_wake", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsblp1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) to set proximity sensor detection thresholds and store in non-volatile memory.", "id": "avr32.applications.uc3-a3_avrsblp1_calibrate", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsblp1_calibrate/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained obtains sensor data from an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1). The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "avr32.applications.uc3-a3_avrsblp1_visualizer", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsblp1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained obtains sensor data from an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1) then displays light and proximity data.", "id": "avr32.applications.uc3-a3_avrsblp1-demo", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsblp1-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-A3 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-A3 Xplained obtains barometric pressure and temperature sensor data from an Atmel Sensors Xplained Pressure 1 board (ATAVRSBPR1) then prints the scaled and formatted values to an attached serial terminal using the C-library standard I/O functions.", "id": "avr32.applications.uc3-a3_avrsbpr1_demo", "mcus": ["at32uc3a3256"], "name": "UC3-A3 Xplained with Xplained Pressure Board #1", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.uc3-a3_avrsbpr1_demo/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Core functions for the unit test framework.", "id": "common.utils.unit_test#uc3", "mcus": ["uc3"], "name": "Unit test framework - UC3 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__test__suite__group.html", "uc3a3_a4": "uc3a3_a4/html/group__test__suite__group.html", "uc3b": "uc3b/html/group__test__suite__group.html", "uc3c": "uc3c/html/group__test__suite__group.html", "uc3d": "uc3d/html/group__test__suite__group.html", "uc3l": "uc3l/html/group__test__suite__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "Unit Tests for IEEE 802.15.4 MAC ensure the good functionality of this module by testing one by one the main features of the MAC component.", "id": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for IEEE 802.15.4 MAC AT86RF212-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": [], "description": "Unit Tests for IEEE 802.15.4 MAC ensure the good functionality of this module by testing one by one the main features of the MAC component.", "id": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for IEEE 802.15.4 MAC AT86RF231-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.source.mac.unit_tests.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1104"], "category": [], "description": "This application is aimed to implement unit tests for mt48LC16m16a2tg7 SDRAM component.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "Unit tests for mt48LC16m16a2tg7 SDRAM component on EVK1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Unit Tests for RF4Control ensure the good functionality of this module by testing one by one the main features of the  component.", "id": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for RF4Control AT86RF212-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Unit Tests for RF4Control ensure the good functionality of this module by testing one by one the main features of the  component.", "id": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for RF4Control AT86RF231-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2102_rf4control.lib.unit_tests.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["RZ600"], "category": [], "description": "AT86RFx Wireless Module unit test. Ensure the good functionality of this module by testing one by one the main features of the AT86RFx component.", "id": "common.components.wireless.unit_tests.rz600.at86rf212", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for the UC3 AT86RF212-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.components.wireless.unit_tests.rz600.at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["RZ600"], "category": [], "description": "AT86RFx Wireless Module unit test. Ensure the good functionality of this module by testing one by one the main features of the AT86RFx component.", "id": "common.components.wireless.unit_tests.rz600.at86rf230b", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for the UC3 AT86RF230B-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.components.wireless.unit_tests.rz600.at86rf230b/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["RZ600"], "category": [], "description": "AT86RFx Wireless Module unit test. Ensure the good functionality of this module by testing one by one the main features of the AT86RFx component.", "id": "common.components.wireless.unit_tests.rz600.at86rf231", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for the UC3 AT86RF231-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.components.wireless.unit_tests.rz600.at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TAL ensure the good functionality of this module by testing one by one the main features of the TAL component.", "id": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for Transceiver Abstraction Layer(TAL) AT86RF212-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TAL ensure the good functionality of this module by testing one by one the main features of the TAL component.", "id": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for Transceiver Abstraction Layer(TAL) AT86RF231-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.source.tal.unit_tests.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TFA ensure the good functionality of this module by testing one by one the main features of the TFA component.", "id": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.at32uc3a3256s_rz600_at86rf212", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for Transceiver Feature Access(TFA) AT86RF212-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.at32uc3a3256s_rz600_at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["RZ600"], "category": ["Communication", "Wireless"], "description": "Unit Tests for TFA ensure the good functionality of this module by testing one by one the main features of the TFA component.", "id": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.at32uc3a3256s_rz600_at86rf231", "mcus": ["at32uc3a3256s"], "name": "Unit Tests for Transceiver Feature Access(TFA) AT86RF231-RZ600", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "thirdparty.wireless.avr2025_mac.source.tfa.unit_tests.at32uc3a3256s_rz600_at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.", "id": "common.services.basic.serial#1", "mcus": ["uc3"], "name": "USART - Serial interface - UC3 implementation", "quickstart": {"uc3a": ["uc3a/html/serial_quickstart.html"], "uc3a3_a4": ["uc3a3_a4/html/serial_quickstart.html"], "uc3b": ["uc3b/html/serial_quickstart.html"], "uc3c": ["uc3c/html/serial_quickstart.html"], "uc3d": ["uc3d/html/serial_quickstart.html"], "uc3l": ["uc3l/html/serial_quickstart.html"]}, "type": "module", "uri": {"uc3a": "uc3a/html/group__serial__group.html", "uc3a3_a4": "uc3a3_a4/html/group__serial__group.html", "uc3b": "uc3b/html/group__serial__group.html", "uc3c": "uc3c/html/group__serial__group.html", "uc3d": "uc3d/html/group__serial__group.html", "uc3l": "uc3l/html/group__serial__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the USART (Universal Synchronous Asynchronous Receiver Transmitter). The driver supports the following  modes: RS232, RS485, SPI, LIN and ISO7816.", "id": "avr32.drivers.usart", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "USART - Universal Synchronous/Asynchronous Receiver/Transmitter", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__usart.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__usart.html", "uc3b": "uc3b/html/group__group__avr32__drivers__usart.html", "uc3c": "uc3c/html/group__group__avr32__drivers__usart.html", "uc3d": "uc3d/html/group__group__avr32__drivers__usart.html", "uc3l": "uc3l/html/group__group__avr32__drivers__usart.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "This driver adds functionality to print debug strings and data through a dedicated USART. It supports writing both single characters, strings, and integer values in both decimal and hexadecimal form.", "id": "avr32.utils.print_funcs", "mcus": ["uc3a", "uc3a3_a4", "uc3b", "uc3c", "uc3d", "uc3l"], "name": "USART Debug strings", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__utils__print__funcs.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__utils__print__funcs.html", "uc3b": "uc3b/html/group__group__avr32__utils__print__funcs.html", "uc3c": "uc3c/html/group__group__avr32__utils__print__funcs.html", "uc3d": "uc3d/html/group__group__avr32__utils__print__funcs.html", "uc3l": "uc3l/html/group__group__avr32__utils__print__funcs.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received.", "id": "avr32.drivers.usart.usart_example2.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "USART example 2 for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.usart.usart_example2.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.evk1104", "mcus": ["at32uc3a3256"], "name": "USART Example for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.usart.usart_example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "USART Example for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.usart.usart_example.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1104"], "category": ["Audio", "Audio"], "description": "USB audio player application with MP3 support. This application includes a software MP3 decoder, a file system, and a USB Host mass storage class support.", "id": "avr32.applications.audio-player.mp3.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Audio Player MP3 for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.audio-player.mp3.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1104"], "category": ["Audio", "Audio"], "description": "USB audio player application with WAV support. This application includes a software WAV decoder, a file system, and a USB Host mass storage class support.", "id": "avr32.applications.audio-player.wav.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Audio Player WAV for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.audio-player.wav.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Audio", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Audio Class application that behaves as a standard USB audio stereo headset device with microphone. Applying a basic Add & Delete samples filter to control the audio stream synchronization.", "id": "avr32.services.usb.audio.add_del_sample.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device Audio Class - Addition and deletion of audio samples example on EVK1104 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.usb.audio.add_del_sample.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device CDC Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.cdc.device.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device CDC unit tests for evk1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.services.usb.class.cdc.device.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3-A3 Xplained"], "category": ["Communication", "Touch", "USB"], "description": "Implements a USB Device HID Mouse using the mXT143E Xplained top module as a touch-enabled trackpad. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.components.touch.mxt.example_hid.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "USB Device example using the mXT143E Xplained kit as mouse", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.components.touch.mxt.example_hid.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device HID Mouse for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.hid.device.mouse.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device HID Mouse unit tests for evk1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.services.usb.class.hid.device.mouse.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device HID Mouse unit tests for evk1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device Mass Storage for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.msc.device.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device Mass Storage unit tests for evk1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.services.usb.class.msc.device.unit_tests.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Device Vendor Class example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.vendor.device.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB CDC Class application that behaves as a Virtual COM Port application in USB Device mode or as a SerialPort-USB gateway in USB Reduced-Host mode.", "id": "avr32.services.usb.cdc.example.evk1104.asfv1", "mcus": ["at32uc3a3256"], "name": "USB Dual Role (Device and Host) CDC example (from ASF V1) for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.usb.cdc.example.evk1104.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB CDC Class application that behaves as a Virtual COM Port application in USB Device mode or as a SerialPort-USB gateway in USB Reduced-Host mode. Implementation using FreeRTOS.", "id": "avr32.services.usb.cdc.example.freertos.evk1104.asfv1", "mcus": ["at32uc3a3256"], "name": "USB Dual Role (Device and Host) CDC example with FreeRTOS (from ASF V1) for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.usb.cdc.example.freertos.evk1104.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device.", "id": "avr32.services.usb.hid.example.evk1104.asfv1", "mcus": ["at32uc3a3256"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.usb.hid.example.evk1104.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": [], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device. Implementation with FreeRTOS.", "id": "avr32.services.usb.hid.example.freertos.evk1104.asfv1", "mcus": ["at32uc3a3256"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) with FreeRTOS for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.usb.hid.example.freertos.evk1104.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Dual Role (Device and Host) HID mouse for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.hid.dual.mouse.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Mass-Storage Class application that behaves as a USB Mass-Storage device(removable drive) in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mass-Storage device.", "id": "avr32.services.usb.ms.example.evk1104.asfv1", "mcus": ["at32uc3a3256"], "name": "USB Dual Role (Device and Host) Mass Storage Class example (from ASF V1) on EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.usb.ms.example.evk1104.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Mass-Storage Class application that behaves as a USB Mass-Storage device(removable drive) in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mass-Storage device. Implementation with FreeRTOS.", "id": "avr32.services.usb.ms.example.freertos.evk1104.asfv1", "mcus": ["at32uc3a3256"], "name": "USB Dual Role (Device and Host) Mass Storage Class example with FreeRTOS (from ASF V1) for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.services.usb.ms.example.freertos.evk1104.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication", "USB"], "description": "", "id": "common.services.usb.class.host#android", "mcus": ["uc3a", "uc3a3_a4", "uc3b0"], "name": "USB Host Android Accessory Class", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__uhi__aoa__group.html", "uc3a3_a4": "uc3a3_a4/html/group__uhi__aoa__group.html", "uc3b": "uc3b/html/group__uhi__aoa__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Host CDC for EVK1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.cdc.host.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.evk1104_host", "mcus": ["at32uc3a3256"], "name": "USB Host core tests on evk1104", "quickstart": {}, "type": "unit-test", "uri": {"uc3a3_a4": "common.services.usb.host.tests.targets.evk1104_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Host HID mouse for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.hid.host.mouse.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example1.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Host MSC and HID mouse for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.composite.host.example1.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USB Host MSC for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.usb.class.msc.host.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["UC3-A3 Xplained"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "USB Standard I/O Example for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.utils.stdio.stdio_usb.example.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin).", "id": "avr32.drivers.usbb.example.evk1104", "mcus": ["at32uc3a3256"], "name": "USBB device enumeration and host example for evk1104 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.usbb.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin). Example using FreeRTOS.", "id": "avr32.drivers.usbb.example.freertos.evk1104", "mcus": ["at32uc3a3256"], "name": "USBB device enumeration and host example with FreeRTOS for evk1104 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.usbb.example.freertos.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Audio"], "description": "WAV decoder.", "id": "avr32.services.audio.wav", "mcus": ["uc3a", "uc3b", "uc3a3_a4"], "name": "WAV decoder", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__services__audio__wav.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__services__audio__wav.html", "uc3b": "uc3b/html/group__group__avr32__services__audio__wav.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1104"], "category": ["Timers"], "description": "Example to set-up a watchdog deadline, read the reset cause PM register and use a GPLP register.", "id": "avr32.drivers.wdt.example.evk1104", "mcus": ["at32uc3a3256"], "name": "WDT Example for evk1104", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.wdt.example.evk1104/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-A3 Xplained"], "category": ["Timers"], "description": "Example to set-up a watchdog deadline, read the reset cause PM register and use a GPLP register.", "id": "avr32.drivers.wdt.example.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "WDT Example for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.drivers.wdt.example.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "This implementation supports revisions <v4.0.0 of the WDT, found in AVR UC3 A0/A1/A3/A4/B0/B1.", "id": "avr32.drivers.wdt#0", "mcus": ["uc3a", "uc3a3_a4", "uc3b"], "name": "WDT Watchdog Timer - UC3 A0/A1/A3/A4/B0/B1 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__wdt.html", "uc3a3_a4": "uc3a3_a4/html/group__group__avr32__drivers__wdt.html", "uc3b": "uc3b/html/group__group__avr32__drivers__wdt.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, showing a collection of icon widgets, allowing the user to navigate between the icons and select them using both direct touch and soft button widgets.", "id": "common.services.wtk.example2.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Widget library example 2 for the UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.wtk.example2.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, demonstrating the plot widget, allowing the user to add new plot points to be graphed using a pair of slider and button widgets.", "id": "common.services.wtk.example3.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Widget library example 3 for the UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.wtk.example3.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "Widget library example for the UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.wtk.example1.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["RZ600"], "category": ["Communication", "USB", "Wireless"], "description": "Wireless-USB bridge, using the USB CDC class (Virtual Communication Port). This application is used on RZ600 kits with UC3 A3 MCU (USB VCP port).", "id": "avr32.applications.rz600-uc3a-wireless-uart-at86rf212", "mcus": ["at32uc3a3256s"], "name": "Wireless USB Application UC3A AT86RF212-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.rz600-uc3a-wireless-uart-at86rf212/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["RZ600"], "category": ["Communication", "USB", "Wireless"], "description": "Wireless-USB bridge, using the USB CDC class (Virtual Communication Port). This application is used on RZ600 kits with UC3 A3 MCU (USB VCP port).", "id": "avr32.applications.rz600-uc3a-wireless-uart-at86rf230b", "mcus": ["at32uc3a3256s"], "name": "Wireless USB Application UC3A AT86RF230B-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.rz600-uc3a-wireless-uart-at86rf230b/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["RZ600"], "category": ["Communication", "USB", "Wireless"], "description": "Wireless-USB bridge, using the USB CDC class (Virtual Communication Port). This application is used on RZ600 kits with UC3 A3 MCU (USB VCP port).", "id": "avr32.applications.rz600-uc3a-wireless-uart-at86rf231", "mcus": ["at32uc3a3256s"], "name": "Wireless USB Application UC3A AT86RF231-RZ600", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "avr32.applications.rz600-uc3a-wireless-uart-at86rf231/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-A3 Xplained"], "category": ["Graphics", "Touch"], "description": "Training skeleton code for the application note \"AVR1614: Widget ToolKit - Getting Started\".", "id": "common.services.wtk.training.uc3_a3_xplained", "mcus": ["at32uc3a3256"], "name": "WTK training project for UC3-A3 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3a3_a4": "common.services.wtk.training.uc3_a3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACC peripheral.", "id": "sam.drivers.acc.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ACC Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.acc.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACC peripheral.", "id": "sam.drivers.acc.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "ACC Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.acc.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ADC example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.adc.adc_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "ADC example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.adc.adc_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "ADC Temperature Sensor example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.adc.adc_temp_sensor_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ADC Temperature Sensor example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.adc.adc_temp_sensor_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "ADC Temperature Sensor example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.adc.adc_temp_sensor_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "ADC threshold wake-up example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.adc.adc_threshold_wakeup_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ADC threshold wake-up example for SAM4S_EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.adc.adc_threshold_wakeup_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": [], "description": "A simple example using the ADS7843 component and ILI9325 lcd controller.", "id": "sam.services.resistive_touch.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ADS7843 LCD Touch Controller example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.resistive_touch.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": [], "description": "A simple example using the ADS7843 component and ILI9325 lcd controller.", "id": "sam.services.resistive_touch.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "ADS7843 LCD Touch Controller example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.resistive_touch.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Basic FreeRTOS Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.freertos.sam_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Basic FreeRTOS Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.freertos.sam_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Basic FreeRTOS Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.freertos.sam_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Basic SD/MMC/SDIO card example for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.sd_mmc.example1.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Basic SD/MMC/SDIO card example for SAM4SD32", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.sd_mmc.example1.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S Xplained"], "category": ["Graphics", "Touch"], "description": "Example application demonstrating a calculator using the widget toolkit.", "id": "common.applications.mxt143e_xplained_calc_demo.training.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Calculator example for the SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.applications.mxt143e_xplained_calc_demo.training.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Chipid example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.chipid.example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "CHIPID example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.chipid.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Chipid example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.chipid.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "This example demonstrates how to read the chipid information.", "id": "sam.drivers.chipid.example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "ChipID example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.chipid.example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Chipid example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.chipid.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["ATPL230AMB"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "CMSIS Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_cmsis_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S Xplained"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "CMSIS Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_cmsis_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S-EK"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "CMSIS Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_cmsis_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S-EK2"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "CMSIS Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_cmsis_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "CMSIS example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_cmsis_example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S-EK"], "category": [], "description": "The demonstration program makes two buttons as the NVIC trigger. Each button would trigger one LED flash. When an NVIC interrupt preemptive happened, both the LEDs are on.", "id": "sam.utils.cmsis.cm4_nvic_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "CMSIS NVIC example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_nvic_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S-EK2"], "category": [], "description": "The demonstration program makes two buttons as the NVIC trigger. Each button would trigger one LED flash. When an NVIC interrupt preemptive happened, both the LEDs are on.", "id": "sam.utils.cmsis.cm4_nvic_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "CMSIS NVIC example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_nvic_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATPL230AMB"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Common API for Clocks Control / Example 1 for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example1.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Common API for Clocks Control / Example 1 for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example1.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Common API for Clocks Control / Example 1 for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example1.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-WPIR-RD"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "Common API for Clocks Control / Example 1 for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example1.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Common API for Clocks Control / Example 1 for SAM4SD32", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example1.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Common API for Clocks Control / Example 2 for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example2.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Common API for Clocks Control / Example 2 for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example2.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Common API for Clocks Control / Example 2 for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example2.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Common API for Clocks Control / Example 3 for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example3.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Common API for Clocks Control / Example 3 for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example3.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Common API for Clocks Control / Example 3 for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.clock.example3.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATPL230AMB"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Common IOPORT service example 1 for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.ioport.example1.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Common IOPORT service example 3 for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.ioport.example3.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Common IOPORT service example 3 for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.ioport.example3.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for the common NVM driver.", "id": "common.drivers.nvm.unit_tests.sam4s16c_sam4s_ek", "mcus": ["atsam4s16c"], "name": "Common NVM driver unit tests for sam4s16c on SAM-4S EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.drivers.nvm.unit_tests.sam4s16c_sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S Xplained"], "category": [], "description": "Basic Cortex-M4 bit banding example.", "id": "sam.utils.cmsis.cm4_bit_banding_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Cortex-M bit banding example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_bit_banding_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S-EK"], "category": [], "description": "Basic Cortex-M4 bit banding example.", "id": "sam.utils.cmsis.cm4_bit_banding_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Cortex-M bit banding example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_bit_banding_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S-EK2"], "category": [], "description": "Basic Cortex-M4 bit banding example.", "id": "sam.utils.cmsis.cm4_bit_banding_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Cortex-M bit banding example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.cm4_bit_banding_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "CRCCU example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.crccu.crccu_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "CRCCU example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.crccu.crccu_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "CRCCU example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.crccu.crccu_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "DAC Sinewave Example on SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.dacc.sinewave_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "DAC Sinewave Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.dacc.sinewave_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "DAC Sinewave Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.dacc.sinewave_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Drivers RTC Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtc.example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Drivers RTC Example for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtc.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Drivers RTC Example for SAM4SD32", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtc.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Communication"], "description": "Provides the interface to configure and use the KSZ8851SNL MAC.", "id": "sam.components.ethernet_phy.ksz8851snl", "mcus": ["sam4s", "sam4e"], "name": "Ethernet Physical Transceiver (ksz8851snl)", "quickstart": {"sam4e": ["sam4e/html/emac_quickstart.html"], "sam4s": ["sam4s/html/emac_quickstart.html"]}, "type": "module", "uri": {"sam4e": "sam4e/html/group__emac__group.html", "sam4s": "sam4s/html/group__emac__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "FatFS example for SAM4S-EK2, the file system will be created on the internal RAM, NAND Flash and the external DataFlash AT45DBX if it's connented.", "id": "common.services.fs.fatfs.access_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "FatFS example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.fs.fatfs.access_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "FatFS example for SAM4S_EK, the file system will be created on the internal RAM, NAND Flash and the external DataFlash AT45DBX if it's connented.", "id": "common.services.fs.fatfs.access_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "FatFS example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.fs.fatfs.access_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "FatFS example for SAM4S_Xplained, the file system will be created on the internal RAM.", "id": "common.services.fs.fatfs.access_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "FatFS example for SAM4S_Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.fs.fatfs.access_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "FatFS unit tests for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.fs.fatfs.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "FatFS unit tests for SAM4S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.fs.fatfs.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "FatFS unit tests for SAM4S_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.fs.fatfs.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Flash efc unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.services.flash.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Flash EFC unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.services.flash.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "Flash EFC unit test for SAM4S-WPIR-RD", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.services.flash.unit_tests.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Flash efc unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.services.flash.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATPL230AMB"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Flash Program Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.program_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Flash Program Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.program_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Flash Program Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.program_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "Flash Program Example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.program_example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Flash Program Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.program_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATPL230AMB"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Flash Read Unique Id Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.read.unique.id_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Flash Read Unique Id Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.read.unique.id_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Flash Read Unique Id Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.read.unique.id_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "Flash Read Unique Id example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.read.unique.id_example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Flash Read Unique Id Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.flash.read.unique.id_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "FreeRTOS USART Interface Layer for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.freertos_sam_usart.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "FreeRTOS USART Interface Layer for SAM4s-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.freertos_sam_usart.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S Xplained"], "category": [], "description": "Switch between various system clock sources and prescalers at run time.", "id": "sam.applications.getting-started.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Getting Started for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.getting-started.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S-EK"], "category": [], "description": "Switch between various system clock sources and prescalers at run time.", "id": "sam.applications.getting-started.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Getting Started for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.getting-started.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S-EK2"], "category": [], "description": "This demonstration program makes two LEDs on the board blinking at a fixed rate.", "id": "sam.applications.getting-started.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Getting Started for SAM4S_EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.getting-started.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "GPBR unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.gpbr.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "GPBR unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.gpbr.unit_tests.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "GPBR unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.gpbr.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "GPBR unit Test for SAM4S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.gpbr.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "graphic library example for the SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.gfx.example1.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": ["Graphics"], "description": "This example demonstrates how to configure the ILI9325 LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.ili9325.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ILI9325 LCD Controller example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.components.display.ili9325.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": ["Graphics"], "description": "This example demonstrates how to configure the ILI9325 LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.ili9325.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "ILI9325 LCD Controller example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.components.display.ili9325.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for ILI9325 driver.", "id": "sam.components.display.ili9325.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "ili9325 unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.components.display.ili9325.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for ILI9325 driver.", "id": "sam.components.display.ili9325.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ili9325 unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.components.display.ili9325.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S Xplained"], "category": [], "description": "A simple example for verifying that the ILI9341 low level driver works", "id": "common.components.display_controller.ili9341.example1.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "ILI9341 Display Controller Example for SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.display_controller.ili9341.example1.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": ["Graphics"], "description": "This example demonstrates how to configure the ILI93xx LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.ili93xx.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ILI93xx LCD Controller example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.components.display.ili93xx.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for ILI93xx driver.", "id": "sam.components.display.ili93xx.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "ili93xx unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.components.display.ili93xx.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4s_xplained_pro", "mcus": ["atsam4sd32c"], "name": "Low Power demo for SAM4S XPlained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.low_power.sam4s_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S-EK"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Low Power demo for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.low_power.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S-EK2"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Low Power demo for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.low_power.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": ["Communication"], "description": "Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support). This example uses the Ethernet extension (Micrel KSZ8851SNL PHY) on EXT1 for the MAC support.", "id": "thirdparty.lwip.raw_basic_http_example.sam4s_xplained_pro", "mcus": ["atsam4sd32c"], "name": "lwIP TCP/IP Stack basic HTTP example using Raw API for SAM4S Xplained Pro (with Micrel KSZ8851SNL PHY)", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.lwip.raw_basic_http_example.sam4s_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support). This example requires the Micrel KSZ8851SNL PHY to be connected on the board, see conf_eth.h for pin settings.", "id": "thirdparty.lwip.raw_basic_http_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "lwIP TCP/IP Stack basic HTTP example using Raw API for SAM4S-EK (with Micrel KSZ8851SNL PHY)", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.lwip.raw_basic_http_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "HTTP web server using the lwIP TCP/IP stack Netconn API (i.e. with RTOS support). The home page provides RTOS and lwIP stats information. This example requires the Micrel KSZ8851SNL PHY to be connected on the board, see conf_eth.h for pin settings.", "id": "thirdparty.lwip.netconn_http_stats_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "lwIP TCP/IP Stack HTTP stats example using Netconn API for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.lwip.netconn_http_stats_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4s_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "LWMesh-WsnDemo Application:AT86RF233 REB-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4s_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC Beacon Application Coordinator AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC Beacon Application Device AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC No Beacon Application Coordinator AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC No Beacon Application Device AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC Serial Interface Beacon FFD AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC Serial Interface Beacon RFD AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC Serial Interface NoBeacon FFD AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "MAC Serial Interface NoBeacon RFD AT86RF233 Zigbit(Carrier)-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": [], "description": "Basic example of MATRIX on ATPL230AMB.", "id": "sam.drivers.matrix.example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "MATRIX example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.matrix.example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Basic example of MATRIX on SAM4S Xplained.", "id": "sam.drivers.matrix.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "MATRIX example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.matrix.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Basic example of MATRIX on SAM4S-EK2.", "id": "sam.drivers.matrix.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "MATRIX example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.matrix.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Basic example of MATRIX on SAM4S-EK.", "id": "sam.drivers.matrix.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "MATRIX example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.matrix.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Basic example of MATRIX on SAM4S-WPIR-RD.", "id": "sam.drivers.matrix.example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "MATRIX example for SAM4S_WPIR_RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.matrix.example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S Xplained"], "category": ["Touch", "USB"], "description": "Reads input from maXTouch and gives touch indication on display.", "id": "common.applications.mxt143e_xplained_multi-touch_demo.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "mXT143E Xplained multi-touch demo for SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.applications.mxt143e_xplained_multi-touch_demo.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S Xplained"], "category": ["Touch"], "description": "Simple paint application using the MXT143E Xplained top module.", "id": "common.applications.mxt143e_xplained_paint_demo.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "mXT143E Xplained paint demo for SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.applications.mxt143e_xplained_paint_demo.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "NAND Flash component unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.components.memory.nand_flash.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "NAND Flash component unit Test for SAM4S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.components.memory.nand_flash.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "NAND Flash component operation. Provides common APIs for SAM devices.", "id": "common.components.memory.nand_flash#2", "mcus": ["sam4s", "sam4e"], "name": "NAND Flash on EBI", "quickstart": {"sam4e": ["sam4e/html/common_components_nand_flash_quickstart.html"], "sam4s": ["sam4s/html/common_components_nand_flash_quickstart.html"]}, "type": "module", "uri": {"sam4e": "sam4e/html/group__common__components__nand__flash__group.html", "sam4s": "sam4s/html/group__common__components__nand__flash__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam4s_ek", "mcus": ["atsam4s16c"], "name": "NAND Flash on EBI Example 1 for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.nand_flash.example1.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "NAND Flash on EBI Example 1 for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.nand_flash.example1.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam4s_ek", "mcus": ["atsam4s16c"], "name": "NAND Flash on EBI Example 2 for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.nand_flash.example2.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "NAND Flash on EBI Example 2 for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.nand_flash.example2.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.sam4s16c_sam4s_ek", "mcus": ["atsam4s16c"], "name": "NVM example for sam4s16c on SAM-4S EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.drivers.nvm.example.sam4s16c_sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-WPIR-RD"], "category": ["Sensors"], "description": "Simple example capturing a picture from the OV7740 image sensor and displaying it on the board's LCD.", "id": "sam.components.cmos_image_sensor.ov7740.imagesensor_capture_example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "OV7740 CMOS image sensor example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.components.cmos_image_sensor.ov7740.imagesensor_capture_example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Unit test application for the OV7740 driver.", "id": "sam.components.sensor.ov7740.unit_tests.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "OV7740 Unit Test for SAM4S-WPIR-RD", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.components.sensor.ov7740.unit_tests.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4sd32c_reb233_xpro", "mcus": ["atsam4sd32c"], "name": "Performance Analyzer Application AT86RF233 REB-SAM4S Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4sd32c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Peripheral Control FreeRTOS Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.freertos.peripheral_control.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Peripheral Control FreeRTOS Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.freertos.peripheral_control.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "Peripheral DMA Controller example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pdc.pdc_uart_example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Peripheral DMA Controller Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pdc.pdc_uart_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Peripheral DMA Controller Example on SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pdc.pdc_uart_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Peripheral DMA Controller Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pdc.pdc_uart_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Peripheral DMA Controller Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pdc.pdc_uart_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.capture_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "PIO Capture Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pio.capture_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.capture_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "PIO Capture Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pio.capture_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.capture_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "PIO Capture Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pio.capture_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": ["PLC"], "description": "Demostrate how to manage the PLC PHY layer to monitor traffic. It configures PHY layer as serialized in order to communicate with ATMEL PHY Sniffer Tool.", "id": "thirdparty.prime.phy.atpl230.apps.phy_sniffer_tool.atpl230amb", "mcus": ["atsam4sd32c"], "name": "PLC Phy Sniffer Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.prime.phy.atpl230.apps.phy_sniffer_tool.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": ["PLC"], "description": "Demostrate how to use the PLC PHY layer. It configures PHY layer as serialized in order to communicate with ATMEL PHY Tester Tool.", "id": "thirdparty.prime.phy.atpl230.apps.phy_tester_tool.atpl230amb", "mcus": ["atsam4sd32c"], "name": "PLC Phy Tester Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.prime.phy.atpl230.apps.phy_tester_tool.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": ["PLC"], "description": "Demostrate how to manage the PLC PHY layer using a serial console. It configures several parameters on PHY layer and launches transmission test.", "id": "thirdparty.prime.phy.atpl230.apps.phy_tx_test_console.atpl230amb", "mcus": ["atsam4sd32c"], "name": "PLC Phy TX Test Console on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "thirdparty.prime.phy.atpl230.apps.phy_tx_test_console.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "PMC clock failure detection example for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "PMC clock failure detection example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M4 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "PMC clock switching for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pmc.pmc_clock_switching_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M4 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "PMC clock switching for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pmc.pmc_clock_switching_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "PMC unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.pmc.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "PMC unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.pmc.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "PMC unit Test for SAM4S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.pmc.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Clocks"], "description": "This example will show how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "PWM LED example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pwm.pwm_led_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Clocks"], "description": "This example will show how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "PWM LED example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pwm.pwm_led_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on SAM4S-EK.", "id": "sam.drivers.pwm.pwm_sync_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "PWM SYNC example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pwm.pwm_sync_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on SAM4S-EK2.", "id": "sam.drivers.pwm.pwm_sync_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "PWM SYNC example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.pwm.pwm_sync_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "PWM unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.pwm.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "PWM unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.pwm.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "PWM unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.pwm.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S Xplained"], "category": [], "description": "Flash LEDs through QTouch slider.", "id": "sam.applications.sam4s_xplained_qtouch_demo.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "QTouch and LED demonstration for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.sam4s_xplained_qtouch_demo.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the board of Atmel SAM devices.", "id": "common.services.qtouch.generic.sam.qtouch.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "QTouch Method Example Application on SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.qtouch.generic.sam.qtouch.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the board of Atmel SAM devices.", "id": "common.services.qtouch.generic.sam.qtouch.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "QTouch Method Example Application on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.qtouch.generic.sam.qtouch.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the board of Atmel SAM devices.", "id": "common.services.qtouch.generic.sam.qtouch.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "QTouch Method Example Application on SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.qtouch.generic.sam.qtouch.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-WPIR-RD"], "category": ["Sensors"], "description": "Simple example detecting a motion with the RE200B PIR sensor and displaying information on board's LCD.", "id": "sam.components.pir_sensor.re200b.pir_motion_detection_example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "RE200B PIR sensor motion detection example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.components.pir_sensor.re200b.pir_motion_detection_example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "RSTC unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.rstc.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "RSTC unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.rstc.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "RSTC unit Test for SAM4S-WPIR-RD", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.rstc.unit_tests.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "RSTC unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.rstc.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "RTC driver example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtc.example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "RTC Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtc.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": [], "description": "Basic example of RTT on ATPL230AMB.", "id": "sam.drivers.rtt.example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "RTT example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtt.example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Basic example of RTT on SAM4S Xplained.", "id": "sam.drivers.rtt.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "RTT example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtt.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Basic example of RTT on SAM4S-EK2.", "id": "sam.drivers.rtt.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "RTT example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtt.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Basic example of RTT on SAM4S-WPIR-RD.", "id": "sam.drivers.rtt.example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "RTT example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtt.example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Basic example of RTT on SAM4S-EK.", "id": "sam.drivers.rtt.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "RTT example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.rtt.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S-EK"], "category": [], "description": "The SAM4S-EK toolkit demo presents the general features of the board. It will draw the bmpfile stored in the nand flash through FatFS. Then the individual toolkit functions can be accessed through the icon widgets.", "id": "sam.application.sam_toolkit_demo.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM toolkit demo for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.application.sam_toolkit_demo.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S-EK2"], "category": [], "description": "The SAM4S-EK2 toolkit demo presents the general features of the board. It will draw the bmpfile stored in the nand flash through FatFS. Then the individual toolkit functions can be accessed through the icon widgets.", "id": "sam.application.sam_toolkit_demo.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM toolkit demo for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.application.sam_toolkit_demo.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATPL230AMB"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP class marks Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP class marks Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP class marks Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP convolution Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP convolution Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP convolution Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP dotproduct Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP dotproduct Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP dotproduct Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP FFT bin Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP FFT bin Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP FFT bin Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP FIR Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP FIR Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP FIR Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP graphic equalizer Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP graphic equalizer Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP graphic equalizer Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP linear interp Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP linear interp Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP linear interp Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP matrix Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP matrix Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP matrix Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP Signal Converge Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP Signal Converge Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP Signal Converge Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP Sin Cos Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP Sin Cos Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP Sin Cos Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SAM4 DSP Variance Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S-EK2"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SAM4 DSP Variance Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4S Xplained"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SAM4 DSP Variance Example on SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SD/MMC card example for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.components.memory.sd_mmc.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SD/MMC card example for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.components.memory.sd_mmc.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SD/MMC card example with FatFs for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.sd_mmc.example2.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S-EK2"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SD/MMC card example with FatFs for SAM4SD32", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.memory.sd_mmc.example2.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.usart_spi_master_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.basic.usart_spi_master_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Memory"], "description": "A simple example shows how to configure the Static Memory Controller (SMC) for SRAM, and do write and read operations to check the configuration.", "id": "sam.drivers.ebi.smc.smc_sram_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SMC Controller example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.ebi.smc.smc_sram_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SPI Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.spi.example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SPI Example for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.spi.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SPI Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.spi.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SPI Example for SAM4SD32", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.spi.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "SPI PDC Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.spi.spi_pdc_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SPI PDC Example for SAM4S", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.spi.spi_pdc_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SPI PDC Example for SAM4SD32", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.spi.spi_pdc_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SPI unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.spi.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SPI unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.spi.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "SPI unit Test for SAM4S-WPIR-RD", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.spi.unit_tests.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SPI unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.spi.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SSC unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.ssc.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SSC unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.ssc.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for SSC driver.", "id": "sam.drivers.ssc.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SSC unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.ssc.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4S Xplained Pro"], "category": [], "description": "This demo for the SAM4S Xplained Pro features the following extensions: IO1, OLED1.", "id": "sam.applications.starter_kit_demo.sam4s_xplained_pro", "mcus": ["atsam4sd32c"], "name": "Starter Kit Demo", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.applications.starter_kit_demo.sam4s_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "SUPC unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.supc.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "SUPC unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.supc.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "SUPC unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.supc.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#15", "mcus": ["sam4s"], "name": "System Clock Control - SAM4S implementation", "quickstart": {"sam4s": ["sam4s/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam4s": "sam4s/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "TC Capture Waveform Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.tc.tc_capture_waveform_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "TC Capture Waveform Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.tc.tc_capture_waveform_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATPL230AMB"], "category": ["PLC"], "description": "Illustrates how to provide USI with support for a user-defined protocol.", "id": "sam.services.plc.usi.user_protocol_template.atpl230amb", "mcus": ["atsam4sd32c"], "name": "Template of a user-defined protocol for PLC USI service for SAM4SD32C", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.services.plc.usi.user_protocol_template.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "TWI SLAVE Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.twi.twi_slave_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "TWI SLAVE Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.twi.twi_slave_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "TWI SLAVE Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.twi.twi_slave_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "TWI SLAVE Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.twi.twi_slave_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "USART Hardware Handshaking Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_hard_handshaking_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USART Hardware Handshaking Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_hard_handshaking_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USART Hardware Handshaking Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_hard_handshaking_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USART IrDA Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_irda_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USART IrDA Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_irda_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "USART ISO7816 Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_iso7816_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USART ISO7816 Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_iso7816_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USART ISO7816 Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_iso7816_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "USART RS485 Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_rs485_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USART RS485 Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_rs485_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USART RS485 Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_rs485_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "USART Serial Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_serial_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USART Serial Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_serial_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USART Serial Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_serial_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATPL230AMB"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.atpl230amb", "mcus": ["atsam4sd32c"], "name": "USART Synchronous Example for ATPL230AMB", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_synchronous_example.atpl230amb/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USART Synchronous Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_synchronous_example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USART Synchronous Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_synchronous_example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USART Synchronous Example for SAM4S_EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.usart.usart_synchronous_example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Composite Device CDC and MSC for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.composite.device.example.cdc_msc.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Composite Device CDC and MSC for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.composite.device.example.cdc_msc.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Composite Device CDC and MSC for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.composite.device.example.cdc_msc.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Composite Device HID keyboard and MSC for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Composite Device HID keyboard and MSC for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Composite Device HID keyboard and MSC for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Composite Device HID mouse and MSC for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hidms_msc.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Composite Device HID mouse and MSC for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hidms_msc.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Composite Device HID mouse and MSC for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.composite.device.example.hidms_msc.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device CDC Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.cdc.device.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device CDC Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.cdc.device.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device CDC Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.cdc.device.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device CDC multiple Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.cdc.device.example2.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device CDC multiple Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.cdc.device.example2.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device CDC unit tests for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.cdc.device.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device CDC unit tests for SAM4S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.cdc.device.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device CDC unit tests for SAM4S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.cdc.device.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4S Xplained"], "category": ["Communication", "Touch", "USB"], "description": "Implements a USB Device HID Mouse using the mXT143E Xplained top module as a touch-enabled trackpad. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.components.touch.mxt.example_hid.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device example using the mXT143E Xplained kit as mouse", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.components.touch.mxt.example_hid.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device HID Generic for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.generic.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device HID Generic for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.generic.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device HID Generic for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.generic.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device HID Keyboard for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.keyboard.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device HID Keyboard for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.keyboard.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device HID Keyboard for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.keyboard.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device HID Keyboard unit tests for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device HID Keyboard unit tests for SAM4S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device HID Keyboard unit tests for SAM4S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device HID Mouse for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.mouse.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device HID Mouse for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.mouse.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device HID Mouse for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.hid.device.mouse.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device HID Mouse unit tests for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.hid.device.mouse.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device HID Mouse unit tests for SAM4S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.hid.device.mouse.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device HID Mouse unit tests for SAM4S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.hid.device.mouse.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device Mass Storage for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.msc.device.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device Mass Storage for SAM4S Xplained with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.msc.device.example.freertos.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device Mass Storage for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.msc.device.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device Mass Storage for SAM4S-EK with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.msc.device.example.freertos.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device Mass Storage for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.msc.device.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device Mass Storage for SAM4S-EK2 with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.msc.device.example.freertos.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device Mass Storage unit tests for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.msc.device.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device Mass Storage unit tests for SAM4S-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.msc.device.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device Mass Storage unit tests for SAM4S-EK2", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "common.services.usb.class.msc.device.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device PHDC for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.phdc.device.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Device Vendor Class Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.vendor.device.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "USB Device Vendor Class Example for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.vendor.device.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-EK2"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "USB Device Vendor Class Example for SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.vendor.device.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S-WPIR-RD"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "USB Device Vendor Class Example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.usb.class.vendor.device.example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4S Xplained"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "USB Standard I/O Example for SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.utils.stdio.stdio_usb.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4S-WPIR_RD.", "id": "sam.drivers.wdt.example.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "Watchdog Timer example for SAM4S-WPIR-RD", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.wdt.example.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4S Xplained.", "id": "sam.drivers.wdt.example.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Watchdog Timer Example on SAM4S Xplained", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.wdt.example.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4S-EK.", "id": "sam.drivers.wdt.example.sam4s_ek", "mcus": ["atsam4s16c"], "name": "Watchdog Timer Example on SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.wdt.example.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4S-EK2.", "id": "sam.drivers.wdt.example.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "Watchdog Timer Example on SAM4S-EK2", "quickstart": {}, "type": "application", "uri": {"sam4s": "sam.drivers.wdt.example.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4s_ek", "mcus": ["atsam4s16c"], "name": "WDT unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.wdt.unit_tests.sam4s_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S Xplained"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "WDT unit Test for SAM4S Xplained", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.wdt.unit_tests.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-WPIR-RD"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4s16c_sam4s_wpir_rd", "mcus": ["atsam4s16c"], "name": "WDT unit Test for SAM4S-WPIR-RD", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.wdt.unit_tests.sam4s16c_sam4s_wpir_rd/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4S-EK2"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4s_ek2", "mcus": ["atsam4sd32c"], "name": "WDT unit Test for SAM4SD32", "quickstart": {}, "type": "unit-test", "uri": {"sam4s": "sam.drivers.wdt.unit_tests.sam4s_ek2/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, showing a collection of icon widgets, allowing the user to navigate between the icons and select them using both direct touch and soft button widgets.", "id": "common.services.wtk.example2.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Widget library example 2 for the SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.wtk.example2.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, demonstrating the plot widget, allowing the user to add new plot points to be graphed using a pair of slider and button widgets.", "id": "common.services.wtk.example3.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Widget library example 3 for the SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.wtk.example3.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "Widget library example for the SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.wtk.example1.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4S Xplained"], "category": ["Graphics", "Touch"], "description": "Training skeleton code for the application note \"AVR1614: Widget ToolKit - Getting Started\".", "id": "common.services.wtk.training.sam4s_xplained", "mcus": ["atsam4s16c"], "name": "WTK training project for SAM4S-XPLAINED", "quickstart": {}, "type": "application", "uri": {"sam4s": "common.services.wtk.training.sam4s_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACC peripheral.", "id": "sam.drivers.acc.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "ACC Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.acc.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": [], "description": "A simple example using the ADS7843 component and ILI93xx lcd controller.", "id": "sam.services.resistive_touch.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "ADS7843 LCD Touch Controller example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.services.resistive_touch.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Cryptography"], "description": "Unit test for the AES (Advanced Encryption Standard) module.", "id": "sam.drivers.aesa.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AES - Advanced Encryption Standard Module unit tests on SAM4E-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.aesa.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Cryptography"], "description": "Use the AES module, encrypt and decrypt blocks of data in various mode with and without DMA.", "id": "sam.drivers.aes.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AES Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.aes.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "The Analog-Front-End Controller is able to capture analog signals and transform them into digital format with 10-bit or 12-bit resolution which can be extended up to a 16-bit resolution by digital averaging.", "id": "sam.drivers.afec", "mcus": ["sam4e"], "name": "AFEC - Analog-Front-End Controller", "quickstart": {"sam4e": ["sam4e/html/sam_afec_quickstart.html"]}, "type": "module", "uri": {"sam4e": "sam4e/html/group__sam__drivers__afec__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Analog Conversion"], "description": "Automatic comparison example of AFEC on SAM4E-EK.", "id": "sam.drivers.afec.example3.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AFEC Automatic Comparison Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.afec.example3.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Analog Conversion"], "description": "Enhanced Resolution Mode example of AFEC on SAM4E-EK.", "id": "sam.drivers.afec.example2.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AFEC Enhanced Resolution Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.afec.example2.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to use some features inside the microcontroller.", "id": "sam.drivers.afec.example4.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AFEC Feature Test Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.afec.example4.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Analog Conversion"], "description": "Temperature sensor example of AFEC on SAM4E-EK.", "id": "sam.drivers.afec.example1.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AFEC Temp Sensor Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.afec.example1.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test for SAM AFEC driver.", "id": "sam.drivers.afec.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AFEC unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.afec.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": [], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The serialflash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AT25DFx example for SAM4E_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The SerialFlash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "AT25DFx example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Basic FreeRTOS Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.freertos.sam_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Basic SD/MMC/SDIO card example for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.sd_mmc.example1.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-XPRO"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "Basic SD/MMC/SDIO card example for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.sd_mmc.example1.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-XPRO"], "category": ["Communication"], "description": "This example demostrate basic functions of CAN controller.", "id": "sam.drivers.can.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "CAN Example for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.can.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example demostrate basic functions of CAN controller.", "id": "sam.components.can.can_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "CAN Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.components.can.can_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "The CAN controller provides all the features required to implement the serial communication protocol CAN defined by Robert Bosch GmbH.", "id": "sam.drivers.can.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "CAN unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.can.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Chipid example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.chipid.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "Unit test for the CMCC (Cortex M Cache Controller) module.", "id": "sam.drivers.cmcc.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "CMCC - Cortex M Cache Controller Module unit tests on SAM4E-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.cmcc.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "This example shows how to configure and use the CMCC module.", "id": "sam.drivers.cmcc.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "CMCC Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.cmcc.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4E-EK"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "CMSIS Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.cm4_cmsis_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Common API for Clocks Control / Example 1 for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.basic.clock.example1.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Common API for Clocks Control / Example 2 for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.basic.clock.example2.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Common API for Clocks Control / Example 3 for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.basic.clock.example3.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Common IOPORT service example 1 for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.ioport.example1.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": [], "description": "Toggles output pin controlling LED0", "id": "common.services.ioport.example2.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Common IOPORT service example 2 for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.ioport.example2.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Common IOPORT service example 3 for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.ioport.example3.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4E-EK"], "category": [], "description": "Basic Cortex-M4 bit banding example.", "id": "sam.utils.cmsis.cm4_bit_banding_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Cortex-M bit banding example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.cm4_bit_banding_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "DAC Sinewave Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.dacc.sinewave_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["DMA Controller"], "description": "Basic example of DMAC on SAM4E-EK.", "id": "sam.drivers.dmac.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "DMAC example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.dmac.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for the DMAC driver.", "id": "sam.drivers.dmac.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "DMAC unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.dmac.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Drivers RTC Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.rtc.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4E-XPRO"], "category": ["Communication"], "description": "EDBG I2C Information Interface Demo.", "id": "sam.applications.edbg_i2c_info_interface.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "EDBG I2C Information Interface Demo for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.applications.edbg_i2c_info_interface.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Communication"], "description": "Driver for ksz8051mnl Ethernet Physical Layer Transceiver device. Provides functions for initializing and controlling the ethernet physical.", "id": "sam.components.ethernet_phy.ksz8051mnl", "mcus": ["sam4e"], "name": "Ethernet Physical Transceiver (ksz8051mnl)", "quickstart": {}, "type": "module", "uri": {"sam4e": "sam4e/html/group__ksz8051mnl__ethernet__phy__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "FatFS example for SAM4E_EK, the file system will be created on the internal RAM, NAND Flash and the external DataFlash AT45DBX if it's connented.", "id": "common.services.fs.fatfs.access_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "FatFS example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.fs.fatfs.access_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "FatFS unit tests for SAM4E_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.fs.fatfs.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Flash efc unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.services.flash.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Flash Program Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.services.flash.program_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Flash Read Unique Id Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.services.flash.read.unique.id_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4E-EK"], "category": [], "description": "This demonstration program makes two LEDs on the board blinking at a fixed rate.", "id": "sam.applications.getting-started.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Getting Started for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.applications.getting-started.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-XPRO"], "category": [], "description": "Ethernet example with ethernet GMAC, process simple ethernet packets.", "id": "sam.drivers.gmac.gmac_example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "GMAC example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.gmac.gmac_example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Ethernet example with ethernet GMAC, process simple ethernet packets.", "id": "sam.drivers.gmac.gmac_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "GMAC example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.gmac.gmac_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for the GMAC driver.", "id": "sam.drivers.gmac.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "GMAC unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.gmac.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-XPRO"], "category": [], "description": "Unit test application for the GMAC driver.", "id": "sam.drivers.gmac.unit_tests.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "GMAC unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.gmac.unit_tests.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "GPBR unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.gpbr.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Graphics"], "description": "This example demonstrates how to configure the ILI93xx LCD controller to draw pictures and strings on the display.", "id": "sam.components.display.ili93xx.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "ILI93xx LCD Controller example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.components.display.ili93xx.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for ILI93xx driver.", "id": "sam.components.display.ili93xx.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "ili93xx unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.components.display.ili93xx.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4E-EK"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Low Power demo for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.applications.low_power.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4E-XPRO"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "Low Power demo for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.applications.low_power.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).", "id": "thirdparty.lwip.raw_basic_http_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "lwIP TCP/IP Stack basic HTTP example using Raw API for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "thirdparty.lwip.raw_basic_http_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "HTTP web server using the lwIP TCP/IP stack Netconn API (i.e. with RTOS support). The home page provides RTOS and lwIP stats information.", "id": "thirdparty.lwip.netconn_http_stats_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "lwIP TCP/IP Stack HTTP stats example using Netconn API for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "thirdparty.lwip.netconn_http_stats_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-XPRO"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4e_reb233_xpro", "mcus": ["atsam4e16e"], "name": "LWMesh-WsnDemo Application:AT86RF233 REB-SAM4E Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4e": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4e_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Basic example of MATRIX on SAM4E-EK.", "id": "sam.drivers.matrix.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "MATRIX example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.matrix.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-XPRO"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "NAND Flash component unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.components.memory.nand_flash.unit_tests.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for the NAND Flash component.", "id": "common.components.memory.nand_flash.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "NAND Flash component unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.components.memory.nand_flash.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam4e_ek", "mcus": ["atsam4e16e"], "name": "NAND Flash on EBI Example 1 for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.nand_flash.example1.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-XPRO"], "category": ["Memory"], "description": "Read and write raw data to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example1.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "NAND Flash on EBI Example 1 for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.nand_flash.example1.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-XPRO"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "NAND Flash on EBI Example 2 for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.nand_flash.example2.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "Read and write data with software ecc to an external NAND Flash memory through the EBI.", "id": "common.components.memory.nand_flash.example2.sam4e_ek", "mcus": ["atsam4e16e"], "name": "NAND Flash on EBI Example 2 for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.nand_flash.example2.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-XPRO"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4e_reb233_xpro", "mcus": ["atsam4e16e"], "name": "Performance Analyzer Application AT86RF233 REB-SAM4E Xpro", "quickstart": {}, "type": "application", "uri": {"sam4e": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4e_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Peripheral DMA Controller Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.pdc.pdc_uart_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Provides the interface to configure and use the GMAC PHY.", "id": "sam.drivers.gmac_phy", "mcus": ["sam4e"], "name": "PHY Ethernet MAC (GMAC)", "quickstart": {"sam4e": ["sam4e/html/gmac_quickstart.html"]}, "type": "module", "uri": {"sam4e": "sam4e/html/group__gmac__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.alternate_function_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PIO Alternate Function Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.pio.alternate_function_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.capture_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PIO Capture Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.pio.capture_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PMC clock failure detection example for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M4 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PMC clock switching for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.pmc.pmc_clock_switching_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PMC unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.pmc.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Clocks"], "description": "This example will show how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PWM LED example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.pwm.pwm_led_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Clocks", "DMA Controller"], "description": "PWM synchronous channels example on SAM4E-EK.", "id": "sam.drivers.pwm.pwm_sync_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PWM SYNC example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.pwm.pwm_sync_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "PWM unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.pwm.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for QTouch component driver with I2C interface.", "id": "common.components.touch.qt.qt_i2c.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Qtouch component driver with I2C interface unit test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.components.touch.qt.qt_i2c.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Touch"], "description": "The application demonstrates how to configure an AT42QT2160 device and get device status on SAM4E-EK.", "id": "common.components.touch.qt.qt_i2c.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "QTouch Sensor example with I2C interface for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.touch.qt.qt_i2c.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "RSTC unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.rstc.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Basic example of RTT on SAM4E-EK.", "id": "sam.drivers.rtt.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "RTT example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.rtt.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP class marks Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP convolution Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP dotproduct Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP FFT bin Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP FIR Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP graphic equalizer Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP linear interp Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP matrix Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP Signal Converge Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP Sin Cos Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4E-EK"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4 DSP Variance Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "SAM4E-EK Demo.", "id": "sam.applications.sam4e_ek_demo.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4E-EK Demo for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.applications.sam4e_ek_demo.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4E-EK"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USART.", "id": "common.utils.stdio.stdio_serial.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SAM4E_EK Serial Standard I/O Example", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.utils.stdio.stdio_serial.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-XPRO"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "SD/MMC card example with FatFs for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.sd_mmc.example2.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SD/MMC card example with FatFs for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.components.memory.sd_mmc.example2.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-XPRO"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "SD/MMC card unit_tests for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.components.memory.sd_mmc.unit_tests.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4E-EK"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SD/MMC card unit_tests for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.components.memory.sd_mmc.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.spi.master_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Shared SAM API for SPI Master Mode / Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.basic.spi.master_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Shared SAM API for USART_SPI Master Mode / Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.basic.usart_spi_master_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Similar API for Serial Interfaces / Example for SAM4E EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.basic.serial.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-XPRO"], "category": ["Memory"], "description": "A simple example shows how to configure the Static Memory Controller (SMC) for SRAM, and do write and read operations to check the configuration.", "id": "sam.drivers.ebi.smc.smc_sram_example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "SMC Controller example for SAM4E XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.ebi.smc.smc_sram_example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with DMAC function.", "id": "sam.drivers.spi.spi_dmac_slave_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SPI DMAC Slave Example for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.spi.spi_dmac_slave_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SPI Example for SAM4E", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.spi.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SPI unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.spi.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "SUPC unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.supc.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#18", "mcus": ["sam4e"], "name": "System Clock Control - SAM4E implementation", "quickstart": {"sam4e": ["sam4e/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam4e": "sam4e/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "TC Capture Waveform Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.tc.tc_capture_waveform_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "TWI SLAVE Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.twi.twi_slave_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USART Hardware Handshaking Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.usart.usart_hard_handshaking_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USART IrDA Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.usart.usart_irda_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USART ISO7816 Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.usart.usart_iso7816_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USART RS485 Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.usart.usart_rs485_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USART Serial Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.usart.usart_serial_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USART Synchronous Example for SAM4E_EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.usart.usart_synchronous_example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Composite Device CDC and MSC for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.composite.device.example.cdc_msc.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Composite Device CDC and MSC for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.composite.device.example.cdc_msc.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Composite Device HID Keyboard and MSC for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Composite Device HID Keyboard and MSC for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse, HID keyboard, CDC and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory, uart and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Composite Device HID keyboard, mouse, CDC serial and MSC for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.composite.device.example.hids_cdc_msc.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Composite Device HID Mouse and MSC for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.composite.device.example.hidms_msc.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Composite Device HID Mouse and MSC for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.composite.device.example.hidms_msc.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device CDC Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.cdc.device.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device CDC Example for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.cdc.device.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device CDC multiple Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.cdc.device.example2.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device CDC unit tests for SAM4E-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.cdc.device.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device CDC unit tests for SAM4E-XPRO", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.cdc.device.unit_tests.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device HID Generic for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.hid.device.generic.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device HID Generic for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.hid.device.generic.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device HID Keyboard for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.hid.device.keyboard.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device HID Keyboard for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.hid.device.keyboard.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device HID Keyboard unit tests for SAM4E-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device HID Keyboard unit tests for SAM4E-XPRO", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device HID Mouse for SAM4E EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.hid.device.mouse.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device HID Mouse for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.hid.device.mouse.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device HID Mouse unit tests for SAM4E-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.hid.device.mouse.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device HID Mouse unit tests for SAM4E-XPRO", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.hid.device.mouse.unit_tests.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device Mass Storage for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.msc.device.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device Mass Storage for SAM4E-EK with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.msc.device.example.freertos.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device Mass Storage for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.msc.device.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device Mass Storage for SAM4E-XPRO with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.msc.device.example.freertos.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device Mass Storage unit tests for SAM4E-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.msc.device.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device Mass Storage unit tests for SAM4E-XPRO", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "common.services.usb.class.msc.device.unit_tests.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device PHDC for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.phdc.device.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-XPRO"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device PHDC for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.phdc.device.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Device Vendor Class Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.vendor.device.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4E-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4e_xplained_pro", "mcus": ["atsam4e16e"], "name": "USB Device Vendor Class Example for SAM4E-XPRO", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.services.usb.class.vendor.device.example.sam4e_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4E-EK"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "USB Standard I/O Example for SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "common.utils.stdio.stdio_usb.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4E-EK.", "id": "sam.drivers.wdt.example.sam4e_ek", "mcus": ["atsam4e16e"], "name": "Watchdog Timer Example on SAM4E-EK", "quickstart": {}, "type": "application", "uri": {"sam4e": "sam.drivers.wdt.example.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4E-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4e_ek", "mcus": ["atsam4e16e"], "name": "WDT unit Test for SAM4E", "quickstart": {}, "type": "unit-test", "uri": {"sam4e": "sam.drivers.wdt.unit_tests.sam4e_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with enhanced mode.", "id": "sam.drivers.adc.adc_enhanced_mode.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "ADC Enhanced Mode Example", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.adc.adc_enhanced_mode.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Analog Conversion"], "description": "This example will demonstrates how to configure ADC peripheral with several modes.", "id": "sam.drivers.adc.adc_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "ADC example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.adc.adc_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "ADC Temperature Sensor example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.adc.adc_temp_sensor_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADC with threshold wakeup.", "id": "sam.drivers.adc.adc_threshold_wakeup_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "ADC threshold wake-up example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.adc.adc_threshold_wakeup_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Cryptography"], "description": "Unit test for the AES (Advanced Encryption Standard) module.", "id": "sam.drivers.aes.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AES - Advanced Encryption Standard Module unit tests on SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.aes.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Cryptography"], "description": "Use the AES module, encrypt and decrypt blocks of data in various mode with and without DMA.", "id": "sam.drivers.aes.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AES Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.aes.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Cryptography"], "description": "Use the AES-GCM mode, encrypt and decrypt blocks of data in various mode.", "id": "sam.drivers.aes.gcm.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AES-GCM Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.aes.gcm.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4C-EK"], "category": ["Memory"], "description": "Provide an application example using the Atmel EEPROM AT24C component. The EEPROM requires an I2C bus as a low level communication interface. This interface can be implemented using TWI controller for SAM devices.", "id": "common.components.memory.eeprom.at24cxx.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AT24CXX EEPROM example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.components.memory.eeprom.at24cxx.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the at24cxx driver.", "id": "common.components.memory.eeprom.at24cxx.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "at24cxx unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "common.components.memory.eeprom.at24cxx.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4C-EK"], "category": [], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The serialflash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AT25DFx example for SAM4C_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4C-EK"], "category": ["Memory"], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The SerialFlash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AT25DFx example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4C-EK"], "category": ["Memory"], "description": "Provide an application example using the Atmel AT30TSE75x temperature sensor. The sensor requires an I2C bus as a low level communication interface. This interface can be implemented using TWI controller for SAM devices.", "id": "common.components.memory.eeprom.at30tse75x.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AT30TS75 Temperature Sensor Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.components.memory.eeprom.at30tse75x.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4C-EK"], "category": ["Memory"], "description": "Unit test application for the at30tse75x driver.", "id": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "AT30TSE unit tests for SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Basic FreeRTOS Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.freertos.sam_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4C-EK"], "category": ["Graphics"], "description": "A simple example for drawing pictures and strings on the C42364A LCD Glass.", "id": "sam.components.display.c42364a.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "C42364A LCD Glass Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.components.display.c42364a.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Chipid example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.chipid.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Memory"], "description": "Unit test for the CMCC (Cortex M Cache Controller) module.", "id": "sam.drivers.cmcc.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "CMCC - Cortex M Cache Controller Module unit tests on SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.cmcc.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Memory"], "description": "This example shows how to configure and use the CMCC module.", "id": "sam.drivers.cmcc.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "CMCC Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.cmcc.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4C-EK"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "CMSIS Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.cm4_cmsis_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common API for Clocks Control / Example 1 for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.basic.clock.example1.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common API for Clocks Control / Example 2 for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.basic.clock.example2.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common API for Clocks Control / Example 3 for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.basic.clock.example3.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common API for Controlling a TWI Module / Master Mode Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.basic.twi.master.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM devices.", "id": "common.services.basic.sleepmgr.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common API for Sleep Management / Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.basic.sleepmgr.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common IOPORT service example 1 for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.ioport.example1.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Toggles output pin controlling LED0", "id": "common.services.ioport.example2.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common IOPORT service example 2 for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.ioport.example2.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Common IOPORT service example 3 for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.ioport.example3.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Drivers RTC Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.rtc.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC tamper function.", "id": "sam.drivers.rtc.tamper_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Drivers RTC Tamper Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.rtc.tamper_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "This example demonstrates the True Random Number Generator (TRNG) provided on SAM3X/SAM4C/SAM4CP microcontrollers. It enables the user to set an alarm and watch it being triggered when the timer reaches the corresponding value.", "id": "sam.drivers.trng.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Drivers TRNG Example for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.trng.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "FatFS example for SAM4C-EK, the file system will be created on the internal RAM.", "id": "common.services.fs.fatfs.access_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "FatFS example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.fs.fatfs.access_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "FatFS unit tests for SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "common.services.fs.fatfs.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Flash efc unit Test for SAM4S", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.services.flash.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Flash Program Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.services.flash.program_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Flash Read Unique Id Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.services.flash.read.unique.id_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the FreeRTOS SPI interface layer.", "id": "common.services.freertos_sam_spi.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "FreeRTOS SPI Interface Layer for SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "common.services.freertos_sam_spi.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the FreeRTOS TWI interface layer.", "id": "common.services.freertos_sam_twi.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "FreeRTOS TWI Interface Layer for SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "common.services.freertos_sam_twi.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the FreeRTOS USART interface layer.", "id": "common.services.freertos_sam_usart.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "FreeRTOS USART Interface Layer for SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "common.services.freertos_sam_usart.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4C-EK"], "category": [], "description": "This demonstration program makes two LEDs on the board blinking at a fixed rate.", "id": "sam.applications.getting-started.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Getting Started for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.applications.getting-started.sam4c_ek/html/index.html"}}, {"appnote": [{"link": "http://www.atmel.com/search.aspx?q=AT04219", "name": "AT04219"}], "asf_type": "applications", "boards": [""], "category": [], "description": "This document describes how to getting started with SAM4C development.", "id": "sam.appnote.getting-started.sam4c", "mcus": ["unspecified-sam4c"], "name": "Getting-started appnote for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.appnote.getting-started.sam4c/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "GPBR unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.gpbr.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "This examples demonstrates how to use ICM driver to check integrity of internal SRAM or FLASH.", "id": "sam.drivers.icm.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "ICM Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.icm.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for ICM driver.", "id": "sam.drivers.icm.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "ICM unit Test for SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.icm.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The Interprocessor Communication (IPC) module has 32 interrupt sources. Each source has a set of enable, disable, clear, set, mask and status registers. The interrupt sources are ORed, and the IPC interrupt output line is connected to the Interrupt Controller input.", "id": "sam.drivers.ipc", "mcus": ["sam4c", "sam4cm"], "name": "IPC - Interprocessor Communication", "quickstart": {"sam4c": ["sam4c/html/sam_ipc_quick_start.html"], "sam4cm": ["sam4cm/html/sam_ipc_quick_start.html"]}, "type": "module", "uri": {"sam4c": "sam4c/html/group__sam__drivers__ipc__group.html", "sam4cm": "sam4cm/html/group__sam__drivers__ipc__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4C-EK"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Low Power demo for SAM4S-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.applications.low_power.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Basic example of MATRIX on SAM4C-EK.", "id": "sam.drivers.matrix.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "MATRIX example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.matrix.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.peripheral_control.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Peripheral Control FreeRTOS Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.freertos.peripheral_control.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Peripheral DMA Controller Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.pdc.pdc_uart_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["I/O"], "description": "This example is aimed to demonstrate the usage of PIO peripheral.", "id": "sam.drivers.pio.alternate_function_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "PIO Alternate Function Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.pio.alternate_function_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "PMC clock failure detection example for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Power Management"], "description": "The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M4 Processor.", "id": "sam.drivers.pmc.pmc_clock_switching_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "PMC clock switching for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.pmc.pmc_clock_switching_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "PMC unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.pmc.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Clocks"], "description": "This example will show how to use the PWM module to make the LED fade in/out.", "id": "sam.drivers.pwm.pwm_led_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "PWM LED example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.pwm.pwm_led_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "PWM unit Test for SAM4C-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.pwm.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "RSTC unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.rstc.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Basic example of RTT on SAM4C-EK.", "id": "sam.drivers.rtt.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "RTT example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.rtt.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP class marks Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP convolution Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP dotproduct Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP FFT bin Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP FIR Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP graphic equalizer Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP linear interp Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP matrix Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP Signal Converge Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP Sin Cos Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4C-EK"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4 DSP Variance Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "This demonstration program makes one LED on the board blinking at a fixed rate.", "id": "sam.drivers.ipc.example_core0.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SAM4C IPC example - Core 0", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.ipc.example_core0.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "This demonstration program makes one LED on the board blinking at a fixed rate.", "id": "sam.drivers.ipc.example_core1.sam4c_ek", "mcus": ["atsam4c16c_1"], "name": "SAM4C IPC example - Core 1", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.ipc.example_core1.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.spi.master_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Shared SAM API for SPI Master Mode / Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.basic.spi.master_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Similar API for Serial Interfaces / Example for SAM4C EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "common.services.basic.serial.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Graphics"], "description": "This examples demonstrates how to use SLCDC driver to address an external LCD segment. The LCD still display in steady state after core entering backup mode.", "id": "sam.drivers.slcdc.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SLCDC Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.slcdc.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SPI Example for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.spi.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral with PDC function.", "id": "sam.drivers.spi.spi_pdc_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SPI PDC Example for SAM4C", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.spi.spi_pdc_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SPI unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.spi.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "SUPC unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.supc.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#20", "mcus": ["sam4c"], "name": "System Clock Control - SAM4C implementation", "quickstart": {"sam4c": ["sam4c/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam4c": "sam4c/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "TC Capture Waveform Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.tc.tc_capture_waveform_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for the TRNG driver.", "id": "sam.drivers.trng.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "TRNG unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.trng.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "The application demonstrates how to use the SAM TWI driver to access an external serial EEPROM chip.", "id": "sam.drivers.twi.twi_eeprom_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "TWI EEPROM Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.twi.twi_eeprom_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "The application demonstrates how to use use the SAM TWI peripheral in slave mode.", "id": "sam.drivers.twi.twi_slave_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "TWI SLAVE Example for SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.twi.twi_slave_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the hardware handshaking mode.", "id": "sam.drivers.usart.usart_hard_handshaking_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "USART Hardware Handshaking Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.usart.usart_hard_handshaking_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the Irda mode.", "id": "sam.drivers.usart.usart_irda_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "USART IrDA Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.usart.usart_irda_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example demonstrates how to access smart cards via USART.", "id": "sam.drivers.usart.usart_iso7816_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "USART ISO7816 Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.usart.usart_iso7816_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "USART RS485 Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.usart.usart_rs485_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "USART Serial Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.usart.usart_serial_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the synchronous mode.", "id": "sam.drivers.usart.usart_synchronous_example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "USART Synchronous Example for SAM4C_EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.usart.usart_synchronous_example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4C-EK.", "id": "sam.drivers.wdt.example.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "Watchdog Timer Example on SAM4C-EK", "quickstart": {}, "type": "application", "uri": {"sam4c": "sam.drivers.wdt.example.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4C-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4c_ek", "mcus": ["atsam4c16c_0"], "name": "WDT unit Test for SAM4C", "quickstart": {}, "type": "unit-test", "uri": {"sam4c": "sam.drivers.wdt.unit_tests.sam4c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Audio Bitstream DAC (Digital to Analog Converter) provides functions to convert a 16-bit sample value to a digital bitstream.", "id": "sam.drivers.abdacb", "mcus": ["sam4l"], "name": "ABDACB - Audio Bitstream DAC", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__abdacb.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Analog Conversion"], "description": "This example shows how to output a audio from the ABDACB.", "id": "sam.drivers.abdacb.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "ABDACB - Audio Bitstream DAC Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.abdacb.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Analog Conversion"], "description": "Unit test for the ABDACB - Audio Bitstream DAC module.", "id": "sam.drivers.abdacb.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "ABDACB - Audio Bitstream DAC Module unit tests on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.abdacb.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "The Analog Comparator compares two voltages and the result of this comparison gives a compare output. The user can select a high-speed or low-power option. Additionally, the hysteresis level are configurable.", "id": "sam.drivers.acifc", "mcus": ["sam4l"], "name": "ACIFC - Analog Comparator Interface", "quickstart": {"sam4l": ["sam4l/html/sam_acifc_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__acifc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACIFC peripheral.", "id": "sam.drivers.acifc.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "ACIFC Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.acifc.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACIFC peripheral.", "id": "sam.drivers.acifc.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "ACIFC Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.acifc.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the ACIFC peripheral.", "id": "sam.drivers.acifc.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "ACIFC Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.acifc.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for SAM ACIFC driver.", "id": "sam.drivers.acifc.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "ACIFC unit Test for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.acifc.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for SAM ACIFC driver.", "id": "sam.drivers.acifc.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "ACIFC unit Test for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.acifc.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for SAM ACIFC driver.", "id": "sam.drivers.acifc.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "ACIFC unit Test for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.acifc.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Analog Conversion"], "description": "This example shows how to initialize the ADCIFE, use the on-board sensors and display the value on a terminal.", "id": "sam.drivers.adcife.adcife_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "ADC Interface Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.adcife.adcife_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Analog Conversion"], "description": "This example shows how to initialize the ADCIFE, use the on-board sensors and display the value on a terminal.", "id": "sam.drivers.adcife.adcife_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "ADC Interface Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.adcife.adcife_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Analog Conversion"], "description": "This example shows how to initialize the ADCIFE, use the on-board sensors and display the value on a terminal.", "id": "sam.drivers.adcife.adcife_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "ADC Interface Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.adcife.adcife_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Driver for the ADCIFE (Analog-to-Digital Converter Interface). Provides functions for configuration of conversion parameters (up to 12-bit signed at 350 ksps), channel sequencing (max. 16 channels, w/ 16 different inputs and up to 64x gain), window monitoring, interrupt and conversion triggering.", "id": "sam.drivers.adcife", "mcus": ["sam4l"], "name": "ADCIFE - ADC Interface", "quickstart": {"sam4l": ["sam4l/html/sam_adcife_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__adcife__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for SAM ADCIFE driver.", "id": "sam.drivers.adcife.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "ADCIFE unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.adcife.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for SAM ADCIFE driver.", "id": "sam.drivers.adcife.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "ADCIFE unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.adcife.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for SAM ADCIFE driver.", "id": "sam.drivers.adcife.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "ADCIFE unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.adcife.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADCIFE using window monitor mode.", "id": "sam.drivers.adcife.adcife_wm_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "ADCIFE Window Monitor Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.adcife.adcife_wm_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADCIFE using window monitor mode.", "id": "sam.drivers.adcife.adcife_wm_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "ADCIFE Window Monitor Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.adcife.adcife_wm_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configue ADCIFE using window monitor mode.", "id": "sam.drivers.adcife.adcife_wm_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "ADCIFE Window Monitor Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.adcife.adcife_wm_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Cryptography"], "description": "Driver for the AESA (Advanced Encryption Standard) module. Provides functions for configuring and initiating ciphering/deciphering with AES algorithms.", "id": "sam.drivers.aesa", "mcus": ["sam4l"], "name": "AESA - Advanced Encryption Standard Module", "quickstart": {"sam4l": ["sam4l/html/sam_aesa_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__aesa.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Cryptography"], "description": "Unit test for the AESA (Advanced Encryption Standard) module.", "id": "sam.drivers.aesa.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "AESA - Advanced Encryption Standard Module unit tests on SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.aesa.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Cryptography"], "description": "Unit test for the AESA (Advanced Encryption Standard) module.", "id": "sam.drivers.aesa.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "AESA - Advanced Encryption Standard Module unit tests on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.aesa.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Cryptography"], "description": "Unit test for the AESA (Advanced Encryption Standard) module.", "id": "sam.drivers.aesa.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "AESA - Advanced Encryption Standard Module unit tests on SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.aesa.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Cryptography"], "description": "Use the AESA module, encrypt and decrypt blocks of data in various mode with and without PDCA.", "id": "sam.drivers.aesa.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "AESA Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.aesa.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Cryptography"], "description": "Use the AESA module, encrypt and decrypt blocks of data in various mode with and without PDCA.", "id": "sam.drivers.aesa.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "AESA Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.aesa.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Cryptography"], "description": "Use the AESA module, encrypt and decrypt blocks of data in various mode with and without PDCA.", "id": "sam.drivers.aesa.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "AESA Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.aesa.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "Driver for the AST (Asynchronous Timer). Provides functions for configuring and operating the AST in the calendar or timer/counter modes.", "id": "sam.drivers.ast", "mcus": ["sam4l"], "name": "AST - Asynchronous Timer", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__ast.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Timers"], "description": "Unit test for the AST (Asynchronous Timer).", "id": "sam.drivers.ast.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "AST - Asynchronous Timer unit tests on SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.ast.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Timers"], "description": "Unit test for the AST (Asynchronous Timer).", "id": "sam.drivers.ast.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "AST - Asynchronous Timer unit tests on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.ast.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Timers"], "description": "Unit test for the AST (Asynchronous Timer).", "id": "sam.drivers.ast.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "AST - Asynchronous Timer unit tests on SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.ast.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and use the USART to display a real time counter incremented every second.", "id": "sam.drivers.ast.example1.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "AST Example 1 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.ast.example1.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and use the USART to display a real time counter incremented every second.", "id": "sam.drivers.ast.example1.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "AST Example 1 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.ast.example1.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and use the USART to display a real time counter incremented every second.", "id": "sam.drivers.ast.example1.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "AST Example 1 for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.ast.example1.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and setup an alarm to wake-up from low power mode.", "id": "sam.drivers.ast.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "AST Example 2 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.ast.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and setup an alarm to wake-up from low power mode.", "id": "sam.drivers.ast.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "AST Example 2 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.ast.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and setup an alarm to wake-up from low power mode.", "id": "sam.drivers.ast.example2.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "AST Example 2 for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.ast.example2.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L-EK"], "category": ["Memory"], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The SerialFlash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "AT25DFx example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L-EK"], "category": [], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The dataflash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "AT25DFx example for SAM4L_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Wireless", "Communication"], "description": "API Parser for MAC acts as a interface for converting MAC Api's to appropriate command byte stream", "id": "thirdparty.wireless.avr2025_mac.api_parser", "mcus": ["sam4l"], "name": "AVR2025-MAC API Parser Module ", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__mac__api__parser.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "This module is responsible for encoding and decoding the serial bytes to/from NCP into APIs to provide seamless working for application similar to stack running in same processor or on NCP.", "id": "thirdparty.wireless.avr2102_rf4control.addons.api_parser", "mcus": ["sam4l"], "name": "AVR2102 - API Parser support for RF4CE ", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__api__parser__rf4ce.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to configure BPM to switch power modes.", "id": "sam.drivers.bpm.bpm_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Backup Power Manager Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.bpm.bpm_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Power Management"], "description": "This example shows how to configure BPM to switch power modes.", "id": "sam.drivers.bpm.bpm_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Backup Power Manager Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.bpm.bpm_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to configure BPM to switch power modes.", "id": "sam.drivers.bpm.bpm_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Backup Power Manager Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.bpm.bpm_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "The BPM provides all the features required to change power modes.", "id": "sam.drivers.bpm.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Backup Power Manager unit tests on SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.bpm.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "The BPM provides all the features required to change power modes.", "id": "sam.drivers.bpm.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Backup Power Manager unit tests on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.bpm.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "The BPM provides all the features required to change power modes.", "id": "sam.drivers.bpm.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Backup Power Manager unit tests on SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.bpm.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Basic clock service unit tests for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.basic.clock.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Basic clock service unit tests for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.basic.clock.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Basic clock service unit tests for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.basic.clock.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Basic FreeRTOS Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.freertos.sam_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Basic FreeRTOS Example for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.freertos.sam_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Basic FreeRTOS Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.freertos.sam_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L Xplained Pro"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Basic SD/MMC/SDIO card example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.components.memory.sd_mmc.example1.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L8 Xplained Pro"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Basic SD/MMC/SDIO card example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.components.memory.sd_mmc.example1.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L-EK"], "category": ["Graphics"], "description": "A simple example for drawing pictures and strings on the C42364A LCD Glass.", "id": "sam.components.display.c42364a.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "C42364A LCD Glass Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.components.display.c42364a.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L Xplained Pro"], "category": ["Graphics"], "description": "A simple example for drawing pictures and strings on the C42412A LCD Glass.", "id": "sam.components.display.c42412a.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "C42412A LCD Glass Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.components.display.c42412a.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["CPU"], "description": "Chip Reset Cause Access. Provides functions for getting and clearing the chip reset source. SAM4L implementation of common API.", "id": "common.services.basic.cpu#2", "mcus": ["sam4l"], "name": "Chip Reset Cause Access - SAM4L implementation", "quickstart": {"sam4l": ["sam4l/html/reset_cause_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__reset__cause__group.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "CMSIS Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.cm4_cmsis_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4L-EK"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "CMSIS Example for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.cm4_cmsis_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Basic Cortex-M4 LED blink CMSIS example.", "id": "sam.utils.cmsis.cm4_cmsis_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "CMSIS Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.cm4_cmsis_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common API for Chip Reset Cause Access / Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.cpu.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common API for Chip Reset Cause Access / Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.cpu.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common API for Chip Reset Cause Access / Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.cpu.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common API for Clocks Control / Example 1 for SAM4L", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example1.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common API for Clocks Control / Example 1 for SAM4L", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example1.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common API for Clocks Control / Example 1 for SAM4L", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example1.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common API for Clocks Control / Example 2 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common API for Clocks Control / Example 2 for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example2.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common API for Clocks Control / Example 2 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common API for Clocks Control / Example 3 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example3.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common API for Clocks Control / Example 3 for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example3.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common API for Clocks Control / Example 3 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.clock.example3.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common API for Controlling a TWI Module / Master Mode Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.twi.master.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common API for Controlling a TWI Module / Master Mode Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.twi.master.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM4L devices.", "id": "common.services.basic.sleepmgr.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common API for Sleep Management  / Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.sleepmgr.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM4L devices.", "id": "common.services.basic.sleepmgr.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common API for Sleep Management  / Example for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.sleepmgr.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM4L devices.", "id": "common.services.basic.sleepmgr.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common API for Sleep Management  / Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.sleepmgr.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common IOPORT service example 1 for SAM4L", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example1.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common IOPORT service example 1 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example1.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common IOPORT service example 1 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example1.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": [], "description": "Toggles output pin controlling LED0", "id": "common.services.ioport.example2.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common IOPORT service example 2 for SAM4L", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example2.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Toggles output pin controlling LED0", "id": "common.services.ioport.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common IOPORT service example 2 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Toggles output pin controlling LED0", "id": "common.services.ioport.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common IOPORT service example 2 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Common IOPORT service example 3 for SAM4L", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example3.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Common IOPORT service example 3 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example3.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example that reads button 0 and outputs it on LED0.", "id": "common.services.ioport.example3.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Common IOPORT service example 3 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.ioport.example3.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["CPU"], "description": "Driver for CPU specific features. It provides functions for MCU Reset Cause.", "id": "sam.drivers.cpu", "mcus": ["sam4l"], "name": "CPU Reset Cause", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam4l__drivers__cpu.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "CRCCU example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.crccu.crccu_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "CRCCU example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.crccu.crccu_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "The example shows how to use CRCCU to compute CRC on a memory area.", "id": "sam.drivers.crccu.crccu_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "CRCCU example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.crccu.crccu_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "DAC Sinewave Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.dacc.sinewave_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "DAC Sinewave Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.dacc.sinewave_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Analog Conversion"], "description": "This example is aimed to demonstrate the usage of the DACC peripheral.", "id": "sam.drivers.dacc.sinewave_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "DAC Sinewave Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.dacc.sinewave_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["I/O", "Interrupt"], "description": "EIC allows pins to be configured as external interrupts.", "id": "sam.drivers.eic", "mcus": ["sam4l"], "name": "EIC - External Interrupt Controller", "quickstart": {"sam4l": ["sam4l/html/sam_eic_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__eic__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for SAM EIC driver.", "id": "sam.drivers.eic.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "EIC unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.eic.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for SAM EIC driver.", "id": "sam.drivers.eic.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "EIC unit Test for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.eic.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for SAM EIC driver.", "id": "sam.drivers.eic.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "EIC unit Test for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.eic.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Peripheral Event System"], "description": "This events example using the AST as an event source and the PDCA as a triggered event that sends a character to a USART output.", "id": "sam.drivers.events.example1.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Events example 1 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.events.example1.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Peripheral Event System"], "description": "This events example using the AST as an event source and the PDCA as a triggered event that sends a character to a USART output.", "id": "sam.drivers.events.example1.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Events example 1 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.events.example1.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Peripheral Event System"], "description": "This events example using the AST as an event source and the PDCA as a triggered event that sends a character to a USART output.", "id": "sam.drivers.events.example1.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Events example 1 for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.events.example1.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Peripheral Event System"], "description": "This events example using the GPIO pad as an event source and the PDCA as a triggered event that sends a character to a USART output.", "id": "sam.drivers.events.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Events example 2 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.events.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Peripheral Event System"], "description": "This events example using the GPIO pad as an event source and the PDCA as a triggered event that sends a character to a USART output.", "id": "sam.drivers.events.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Events example 2 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.events.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Peripheral Event System"], "description": "This events example using the GPIO pad as an event source and the PDCA as a triggered event that sends a character to a USART output.", "id": "sam.drivers.events.example2.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Events example 2 for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.events.example2.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Interrupt"], "description": "This example shows how to configure EIC to toggle LED.", "id": "sam.drivers.eic.eic_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "External Interrupt Controller Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.eic.eic_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Interrupt"], "description": "This example shows how to configure EIC to toggle LED.", "id": "sam.drivers.eic.eic_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "External Interrupt Controller Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.eic.eic_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Interrupt"], "description": "This example shows how to configure EIC to toggle LED.", "id": "sam.drivers.eic.eic_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "External Interrupt Controller Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.eic.eic_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "", "id": "common.services.basic.fifo.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "FIFO service unit tests on for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.basic.fifo.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": [], "description": "", "id": "common.services.basic.fifo.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "FIFO service unit tests on for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.basic.fifo.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "", "id": "common.services.basic.fifo.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "FIFO service unit tests on for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.basic.fifo.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Generates the output binary to use with the USB Host MSC Bootloader application for SAM4L with AES support.", "id": "sam.applications.sam4l_host_msc_boot_aes_fw_gen.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Firmware Generator for USB Host MSC Bootloader with AES for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.sam4l_host_msc_boot_aes_fw_gen.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L-EK"], "category": [], "description": "Generates the output binary to use with the USB Host MSC Bootloader application for SAM4L with AES support.", "id": "sam.applications.sam4l_host_msc_boot_aes_fw_gen.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Firmware Generator for USB Host MSC Bootloader with AES for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.sam4l_host_msc_boot_aes_fw_gen.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for the Flash CALW Controller(FLASHCALW). It provides functions for configuring and using the on-chip FLASHCALW.", "id": "sam.drivers.flashcalw", "mcus": ["sam4l"], "name": "FLASHCALW Controller Software Driver", "quickstart": {"sam4l": ["sam4l/html/sam_flashcalw_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__flashcalw.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Memory"], "description": "Use the FLASHCALW, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the user page. Use the last page as the locked page, check the lock status and finally unlock it.", "id": "sam.drivers.flashcalw.example1.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "FLASHCALW example1 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example1.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Memory"], "description": "Use the FLASHCALW, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the user page. Use the last page as the locked page, check the lock status and finally unlock it.", "id": "sam.drivers.flashcalw.example1.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "FLASHCALW example1 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example1.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Memory"], "description": "Use the FLASHCALW, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the user page. Use the last page as the locked page, check the lock status and finally unlock it.", "id": "sam.drivers.flashcalw.example1.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "FLASHCALW example1 for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example1.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Memory"], "description": "Read the unique ID of the device.", "id": "sam.drivers.flashcalw.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "FLASHCALW example2 for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Memory"], "description": "Read the unique ID of the device.", "id": "sam.drivers.flashcalw.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "FLASHCALW example2 for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Memory"], "description": "Read the unique ID of the device.", "id": "sam.drivers.flashcalw.example2.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "FLASHCALW example2 for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example2.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Memory"], "description": "PicoCache example for flashcalw driver.", "id": "sam.drivers.flashcalw.example3.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "FLASHCALW PicoCache example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example3.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Memory"], "description": "PicoCache example for flashcalw driver.", "id": "sam.drivers.flashcalw.example3.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "FLASHCALW PicoCache example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example3.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Memory"], "description": "PicoCache example for flashcalw driver.", "id": "sam.drivers.flashcalw.example3.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "FLASHCALW PicoCache example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.flashcalw.example3.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Memory"], "description": "Unit test application for the flashcalw driver.", "id": "sam.drivers.flashcalw.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "FLASHCALW unit tests for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.flashcalw.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Memory"], "description": "Unit test application for the flashcalw driver.", "id": "sam.drivers.flashcalw.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "FLASHCALW unit tests for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.flashcalw.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Memory"], "description": "Unit test application for the flashcalw driver.", "id": "sam.drivers.flashcalw.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "FLASHCALW unit tests for SAM4L_EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.flashcalw.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "The FREQM can be used to accurately measure the frequency of a clock by comparing it to a known reference clock.", "id": "sam.drivers.freqm", "mcus": ["sam4l"], "name": "FREQM - Frequency Meter", "quickstart": {"sam4l": ["sam4l/html/sam_freqm_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__freqm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for SAM FREQM driver.", "id": "sam.drivers.freqm.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "FREQM unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.freqm.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for SAM FREQM driver.", "id": "sam.drivers.freqm.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "FREQM unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.freqm.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for SAM FREQM driver.", "id": "sam.drivers.freqm.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "FREQM unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.freqm.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Clocks"], "description": "This example demonstrates how to use frequency meter.", "id": "sam.drivers.freqm.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Frequency Meter Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.freqm.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Clocks"], "description": "This example demonstrates how to use frequency meter.", "id": "sam.drivers.freqm.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Frequency Meter Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.freqm.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Clocks"], "description": "This example demonstrates how to use frequency meter.", "id": "sam.drivers.freqm.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Frequency Meter Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.freqm.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The demonstration program makes the on-board LED blink at a fixed rate.", "id": "sam.applications.getting-started.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Getting Started for on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.getting-started.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L-EK"], "category": [], "description": "The demonstration program makes the on-board LED blink at a fixed rate.", "id": "sam.applications.getting-started.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Getting Started for on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.getting-started.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "The demonstration program makes the on-board LED blink at a fixed rate.", "id": "sam.applications.getting-started.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Getting Started for on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.getting-started.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Driver for the GLOC - Glue Logic Controller module.", "id": "sam.drivers.gloc", "mcus": ["sam4l"], "name": "GLOC - Glue Logic Controller", "quickstart": {"sam4l": ["sam4l/html/sam_gloc_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__gloc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["I/O"], "description": "Advanced functions for GPIO module: interrupt and event support. Please refer IOPORT module for basic GPIO function.", "id": "sam.drivers.gpio", "mcus": ["sam4l"], "name": "GPIO - General-Purpose Input/Output", "quickstart": {"sam4l": ["sam4l/html/sam_gpio_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__gpio.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["I/O"], "description": "This example shows how to configure GPIO module to trigger an interrupt and an event.", "id": "sam.drivers.gpio.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "GPIO interrupt example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.gpio.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["I/O"], "description": "This example shows how to configure GPIO module to trigger an interrupt and an event.", "id": "sam.drivers.gpio.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "GPIO interrupt example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.gpio.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["I/O"], "description": "This example shows how to configure GPIO module to trigger an interrupt and an event.", "id": "sam.drivers.gpio.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "GPIO interrupt example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.gpio.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for SAM GPIO driver.", "id": "sam.drivers.gpio.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "GPIO Unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.gpio.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for SAM GPIO driver.", "id": "sam.drivers.gpio.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "GPIO Unit Test for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.gpio.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for SAM GPIO driver.", "id": "sam.drivers.gpio.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "GPIO Unit Test for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.gpio.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "The HSB Bus Matrix implements a multi-layer bus structure that enables parallel access paths between multiple High Speed Bus (HSB) masters and slaves in a system, which increases the overall bandwidth.", "id": "sam.drivers.hmatrixb", "mcus": ["sam4l"], "name": "HMATRIXB - HSB Bus Matrix", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__hmatrix__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for the HMATRIXB - HSB Bus Matrix.", "id": "sam.drivers.hmatrixb.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "HMATRIXB - HSB Bus Matrix unit tests on SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.hmatrixb.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for the HMATRIXB - HSB Bus Matrix.", "id": "sam.drivers.hmatrixb.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "HMATRIXB - HSB Bus Matrix unit tests on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.hmatrixb.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for the HMATRIXB - HSB Bus Matrix.", "id": "sam.drivers.hmatrixb.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "HMATRIXB - HSB Bus Matrix unit tests on SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.hmatrixb.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Basic example of HMATRIXB on SAM4L Xplained Pro.", "id": "sam.drivers.hmatrixb.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "HMATRIXB example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.hmatrixb.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Basic example of HMATRIXB on SAM4L Xplained Pro.", "id": "sam.drivers.hmatrixb.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "HMATRIXB example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.hmatrixb.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Basic example of HMATRIXB on SAM4L-EK.", "id": "sam.drivers.hmatrixb.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "HMATRIXB example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.hmatrixb.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Cryptography"], "description": "Driver for the IISC - Inter-IC Sound Controller module. IISC provides a 5-wire, bidirectional, synchronous, digital audio link with off-chip audio devices: ISDI, ISDO, IWS, ISCK and IMCK pins.", "id": "sam.drivers.iisc", "mcus": ["sam4l"], "name": "IISC - Inter-IC Sound Controller", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__iisc.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "IOPORT - General purpose I/O driver that includes functions for various I/O operations (set direction, set/get pin value, toggle pins etc.) Common API for XMEGA, UC3 and SAM.", "id": "common.services.ioport#3", "mcus": ["sam4l"], "name": "IOPORT - General purpose I/O service", "quickstart": {"sam4l": ["sam4l/html/ioport_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__ioport__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Graphics"], "description": "Driver for the LCDCA controller. Provides functions for using the on-chip LCDCA controller.", "id": "sam.drivers.lcdca", "mcus": ["sam4l"], "name": "LCDCA controller driver", "quickstart": {"sam4l": ["sam4l/html/sam_drivers_lcdca_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__lcdca.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Graphics"], "description": "This examples illustrates how to use the SAM4L LCD module to write characters, set or clear icons on display.", "id": "sam.drivers.lcdca.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "LCDCA Controller Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.lcdca.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "This is the unit tests of the SAM LCDCA driver.", "id": "sam.drivers.lcdca.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "LCDCA unit tests for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.lcdca.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Low Power demo for SAM4L XPlained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.low_power.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "This demo shows all the different low power modes with several types of wake-up sources.", "id": "sam.applications.low_power.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Low Power demo for SAM4L8 XPlained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.low_power.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "LWMesh-EDDemo Application:AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "LWMesh-Peer2Peer Application:AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "LWMesh-Peer2Peer Application:AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "LWMesh-WsnDemo Application:AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "LWMesh-WsnDemo Application:AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Application Coordinator AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Application Coordinator AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Application Coordinator AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Application Device AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Application Device AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Application Device AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Application Device Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC Beacon Host Application Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Application Coordinator AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Application Coordinator AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Application Coordinator AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Application Device AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Application Device AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Application Device AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Application Device Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC No Beacon Host Application Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC NoBeacon Sleep Application AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC NoBeacon Sleep Application SAM4L Xplained Pro-AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC NoBeacon Sleep Application SAM4L Xplained Pro-AT86RF233 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon_sleep.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon FFD AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon FFD AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon FFD AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Host Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon FFD Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon RFD AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon RFD AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon RFD AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Host Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface Beacon RFD Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon FFD AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon FFD AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon FFD AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Host Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon FFD Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon RFD AT86RF212B Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon RFD AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon RFD AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "MAC Serial Interface Host Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.host.sam4lc4c_sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "MAC Serial Interface NoBeacon RFD Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.host.sam4lc4c_sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#no_extmem#5", "mcus": ["sam4l"], "name": "NVM - Non volatile memory access", "quickstart": {"sam4l": ["sam4l/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "sam.drivers.parc#polled", "mcus": ["sam4l"], "name": "PARC - Parallel Capture (Polled Mode)", "quickstart": {"sam4l": ["sam4l/html/sam_parc_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__parc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "This example uses PARC driver to capture parallel data.", "id": "sam.drivers.parc.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "PARC Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.parc.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "This example uses PARC driver to capture parallel data.", "id": "sam.drivers.parc.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "PARC Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.parc.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "Unit test for the PARC (Parallel Capture).", "id": "sam.drivers.parc.unit_tests.sam4l_xplained_pro_host", "mcus": ["atsam4lc4c"], "name": "PARC unit tests on SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.parc.unit_tests.sam4l_xplained_pro_host/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "Unit test for the PARC (Parallel Capture).", "id": "sam.drivers.parc.unit_tests.sam4l8_xplained_pro_host", "mcus": ["atsam4lc8c"], "name": "PARC unit tests on SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.parc.unit_tests.sam4l8_xplained_pro_host/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller", "Memory"], "description": "The Peripheral DMA Controller transfers data between on-chip serial peripherals and the on- and/or off-chip memories. The link between the PDC and a serial peripheral is operated by the AHB to APB bridge.", "id": "sam.drivers.pdca", "mcus": ["sam4l"], "name": "PDCA - Peripheral DMA Controller", "quickstart": {"sam4l": ["sam4l/html/sam_pdca_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__pdca__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for SAM PDCA driver.", "id": "sam.drivers.pdca.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "PDCA unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.pdca.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for SAM PDCA driver.", "id": "sam.drivers.pdca.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "PDCA Unit Test for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.pdca.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for SAM PDCA driver.", "id": "sam.drivers.pdca.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "PDCA Unit Test for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.pdca.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "Performance Analyzer Application  AT86RF212B Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "Performance Analyzer Application  AT86RF233 Zigbit(Carrier)-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "Performance Analyzer Application AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDCA for receiving data from USART.", "id": "sam.drivers.pdca.pdca_usart_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Peripheral DMA Controller Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.pdca.pdca_usart_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDCA for receiving data from USART.", "id": "sam.drivers.pdca.pdca_usart_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Peripheral DMA Controller Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.pdca.pdca_usart_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDCA for receiving data from USART.", "id": "sam.drivers.pdca.pdca_usart_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Peripheral DMA Controller Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.pdca.pdca_usart_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Peripheral Event System"], "description": "Provide a unified interface for the configuration and management of the event channels within the device.", "id": "sam.drivers.events", "mcus": ["sam4l"], "name": "PEVC - Peripheral Event Controller Driver for SAM", "quickstart": {"sam4l": ["sam4l/html/sam_events_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__events.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for SAM Events driver.", "id": "sam.drivers.events.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "PEVC Unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.events.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test for SAM Events driver.", "id": "sam.drivers.events.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "PEVC Unit Test for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.events.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test for SAM Events driver.", "id": "sam.drivers.events.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "PEVC Unit Test for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.events.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Driver for the PICOUART (Picopower UART). Provides functions for configuring and operating the PICOUART.", "id": "sam.drivers.picouart", "mcus": ["sam4l"], "name": "PICOUART - Picopower UART", "quickstart": {"sam4l": ["sam4l/html/sam_picouart_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__picouart.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test for the PICOUART(Picopower UART).", "id": "sam.drivers.picouart.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "PICOUART - Picopower UART unit tests on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.picouart.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Initialize the PICOUART module, use with the 32KHz oscillator and wakeup the system.", "id": "sam.drivers.picouart.example1.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "PICOUART Example 1 for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.picouart.example1.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Driver for the BPM. Provides functions for the Power Management.", "id": "sam.drivers.bpm", "mcus": ["sam4l"], "name": "Power Management", "quickstart": {"sam4l": ["sam4l/html/sam_bpm_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__bpm.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "", "id": "sam.services.qtouch.devspecific.sam.sam4l", "mcus": ["sam4l"], "name": "QTouch Library for SAM4L", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__thirdparty__qtouch__devspecific__sam4__sam4l.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "RF4CE - ZRC Terminal target application AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE Network serial interface AT86RF212B Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "RF4CE Network serial interface AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE Network serial interface AT86RF233 Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The host application to drive the network stack running on the network co-processor", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.host.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "RF4CE Network Serial Interface Host-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.host.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "he RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE Single button controller application AT86RF212B Zigbit(Carrier)-SAM4L XPLAINEDPro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "he RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "RF4CE Single Button controller application AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "he RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE Single button controller application AT86RF233 Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "Single button controller application running on the host and driving the ZRC controller stack running on the network co-processor", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.host.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "RF4CE Single button controller application HOST-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.host.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE- ZRC Terminal target application AT86RF212B Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "he RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC controller serial interface AT86RF212B Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "he RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC controller serial interface AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "he RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC controller serial interface AT86RF233 Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The host application to drive the RF4CE-ZRC controller stack running on the network co-processor", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.host.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC controller serial interface HOST-SAM4L Xplained Pro ", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.host.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.sam4lc4c_rf212b_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC target serial interface AT86RF212B Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.sam4lc4c_rf212b_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.sam4lc4c_reb233_xpro", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC target serial interface AT86RF233 REB-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.sam4lc4c_reb233_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC target serial interface AT86RF233 Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The host application to drive the RF4CE-ZRC target stack running on the network co-processor", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.host.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC Target serial interface HOST-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.host.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.sam4lc4c_rf233_zigbit_ext", "mcus": ["atsam4lc4c"], "name": "RF4CE-ZRC Terminal target application AT86RF233 Zigbit(Carrier)-SAM4L XPLAINED Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.sam4lc4c_rf233_zigbit_ext/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "RF4CE network library for XMEGA256A3U controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.nwk#5", "mcus": ["atsam4lc4c"], "name": "RF4Control NWK Lib for atxmega256a3u", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__rf4control__nwk.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the C42364 LCD Glass.", "id": "sam.components.display.c42364a#lcdca", "mcus": ["sam4l"], "name": "sam.components.display.c42364a", "quickstart": {"sam4l": ["sam4l/html/sam_component_c42364a_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__c42364a__display__group.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Low-level driver for the C42412 LCD Glass.", "id": "sam.components.display.c42412a#lcdca", "mcus": ["sam4l"], "name": "sam.components.display.c42412a", "quickstart": {"sam4l": ["sam4l/html/sam_component_c42412a_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__c42412a__display__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP class marks Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP class marks Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP class marks Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP convolution Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP convolution Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP convolution Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP dotproduct Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP dotproduct Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP dotproduct Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP FFT bin Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP FFT bin Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP FFT bin Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP FIR Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP FIR Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP FIR Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP graphic equalizer Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP graphic equalizer Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP graphic equalizer Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP matrix Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP matrix Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP matrix Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP Signal Converge Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP Signal Converge Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP Signal Converge Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP Sin Cos Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP Sin Cos Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP Sin Cos Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP Variance Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L-EK"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4 DSP Variance Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4 DSP Variance Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L-EK"], "category": [], "description": "SAM4L is running with either LCD and QTouch library enabled or in low power sleep modes.", "id": "sam.applications.sam4l_qtouch_demo.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4L Lower Power and QTouch Demo for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.sam4l_qtouch_demo.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "SAM4L is running with QTouch library enabled.", "id": "sam.applications.sam4l_qtouch_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4L QTouch Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.sam4l_qtouch_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "SAM4L is running with QTouch library enabled.", "id": "sam.applications.sam4l_qtouch_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SAM4L QTouch Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.sam4l_qtouch_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "USB Host MSC Bootloader application for SAM4L with AES support for safe and secure firmware upgrade.", "id": "sam.applications.sam4l_host_msc_boot_aes.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SAM4L USB Host MSC Bootloader with AES for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.sam4l_host_msc_boot_aes.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["SAM4L-EK"], "category": [], "description": "USB Host MSC Bootloader application for SAM4L with AES support for safe and secure firmware upgrade.", "id": "sam.applications.sam4l_host_msc_boot_aes.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SAM4L USB Host MSC Bootloader with AES for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.applications.sam4l_host_msc_boot_aes.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L Xplained Pro"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SD/MMC card example for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.components.memory.sd_mmc.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L8 Xplained Pro"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SD/MMC card example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.components.memory.sd_mmc.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L Xplained Pro"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SD/MMC card example with FatFs for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.components.memory.sd_mmc.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L8 Xplained Pro"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SD/MMC card example with FatFs for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.components.memory.sd_mmc.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "Wireless", "Communication", "Wireless"], "description": "Serial Bridge acts as a bridge for performing serial communication between host and ncp", "id": "thirdparty.wireless.addons.serial_bridge.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Serial Bridge Application-SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "thirdparty.wireless.addons.serial_bridge.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["User Board template"], "category": [], "description": "Unit test for the GLOC - Glue Logic Controller module.", "id": "sam.drivers.gloc.unit_tests.sam4l_user_board_gloc", "mcus": ["atsam4lc4c"], "name": "Set of unit tests for GLOC - Glue Logic Controller on SAM4L User Board", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.gloc.unit_tests.sam4l_user_board_gloc/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Cryptography"], "description": "Unit test for the IISC - Inter-IC Sound Controller module.", "id": "sam.drivers.iisc.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Set of unit tests for IISC - Inter-IC Sound Controller on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.iisc.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.spi.master_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Shared SAM3 API for SPI Master Mode / Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.spi.master_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Similar API for Serial Interfaces / Example for SAM4L EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.serial.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Similar API for Serial Interfaces / Example for SAM4L EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.serial.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Similar API for Serial Interfaces / Example for SAM4L EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.basic.serial.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Power Management"], "description": "The sleep manager provides functions for centralized management of sleep modes. Common API for SAM, UC3 and XMEGA.", "id": "common.services.basic.sleepmgr#3", "mcus": ["sam4l"], "name": "Sleep manager - SAM4L implementation", "quickstart": {}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sleepmgr__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SPI Example for SAM4L EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.spi.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SPI Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.spi.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "This example is aimed to demonstrate the usage of SPI peripheral.", "id": "sam.drivers.spi.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SPI Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.spi.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "SPI unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.spi.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SPI unit Test for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.spi.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SPI unit Test for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.spi.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common.components.display.ssd1306.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "SSD1306 OLED Controller example for SAM4L4-XPLAINED-PRO", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.components.display.ssd1306.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common.components.display.ssd1306.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "SSD1306 OLED Controller example for SAM4L8-XPLAINED-PRO", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.components.display.ssd1306.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#16", "mcus": ["sam4l"], "name": "System Clock Control - SAM4L implementation", "quickstart": {"sam4l": ["sam4l/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "TC Capture Waveform Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.tc.tc_capture_waveform_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "TC Capture Waveform Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.tc.tc_capture_waveform_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Timers"], "description": "This example shows how to configure TC in waveform and capture mode and use this function to calculate the input pulse frequency.", "id": "sam.drivers.tc.tc_capture_waveform_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "TC Capture Waveform Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.tc.tc_capture_waveform_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "TWI Two-Wire Interface service. Common API.", "id": "common.services.basic.twi#4", "mcus": ["sam4l"], "name": "TWI - Two-Wire Interface - SAM4L implementation", "quickstart": {"sam4l": ["sam4l/html/twi_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__twi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the TWIM (Two-Wire Master Interface). This driver provides access to the main features of the TWIM controller. The TWIM interconnects components on a unique two-wire bus. The TWIM is programmable as a master with sequential or single-byte access. Multiple master capability is supported.", "id": "sam.drivers.twim", "mcus": ["sam4l"], "name": "TWI - Two-Wire Master Interface", "quickstart": {"sam4l": ["sam4l/html/sam_twim_quick_start.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__twim__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the TWIS (Two-Wire Slave Interface). This driver provides access to the main features of the TWIS controller. The TWIS interconnects components on a unique two-wire bus. The TWIS is programmable as a slave with sequential or single-byte access.", "id": "sam.drivers.twis", "mcus": ["sam4l"], "name": "TWIS - Two-Wire Slave Interface", "quickstart": {"sam4l": ["sam4l/html/sam_twis_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__sam__drivers__twis__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use the TWIM driver to access an external serial EEPROM chip.", "id": "sam.drivers.twim.twim_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Two-wire Interface Master Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.twim.twim_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "The application demonstrates how to use the TWIM driver to access an external serial EEPROM chip.", "id": "sam.drivers.twim.twim_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Two-wire Interface Master Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.twim.twim_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use the TWIM driver to access an external serial EEPROM chip.", "id": "sam.drivers.twim.twim_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Two-wire Interface Master Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.twim.twim_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "The application demonstrates how to use the TWIM driver to access an external serial EEPROM chip via PDCA.", "id": "sam.drivers.twim.pdca_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Two-wire Interface PDCA Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.twim.pdca_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use the TWIS driver to act as an serial EEPROM chip.", "id": "sam.drivers.twis.twis_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Two-wire Interface Slave Example on SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.twis.twis_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "The application demonstrates how to use the TWIS driver to act as an serial EEPROM chip.", "id": "sam.drivers.twis.twis_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Two-wire Interface Slave Example on SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.twis.twis_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "The application demonstrates how to use the TWIS driver to act as an serial EEPROM chip.", "id": "sam.drivers.twis.twis_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Two-wire Interface Slave Example on SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.twis.twis_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.", "id": "common.services.basic.serial#3", "mcus": ["sam4l"], "name": "USART - Serial interface- SAM implementation for devices with only USART", "quickstart": {"sam4l": ["sam4l/html/serial_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__serial__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the RS485 mode.", "id": "sam.drivers.usart.usart_rs485_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USART RS485 Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.usart.usart_rs485_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USART Serial Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.usart.usart_serial_example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USART Serial Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.usart.usart_serial_example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Communication"], "description": "This example uses USART driver to demonstrates the serial mode.", "id": "sam.drivers.usart.usart_serial_example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USART Serial Example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.usart.usart_serial_example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Composite Device CDC serial and MSC for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.composite.device.example.cdc_msc.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Composite Device CDC serial and MSC for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.composite.device.example.cdc_msc.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Composite Device CDC serial and MSC for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.composite.device.example.cdc_msc.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Composite Device HID keyboard  and MSC for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Composite Device HID keyboard  and MSC for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Composite Device HID keyboard  and MSC for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.device.example.hidkbd_msc.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Composite Device HID mouse and MSC for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.device.example.hidms_msc.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Composite Device HID mouse and MSC for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.device.example.hidms_msc.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Composite Device HID mouse and MSC for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.device.example.hidms_msc.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device CDC Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.cdc.device.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device CDC Example for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.cdc.device.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device CDC Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.cdc.device.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device CDC unit tests for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.cdc.device.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device CDC unit tests for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.cdc.device.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device CDC unit tests for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.cdc.device.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device HID Generic for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.generic.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device HID Generic for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.generic.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device HID Generic for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.generic.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device HID Keyboard for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.keyboard.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device HID Keyboard for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.keyboard.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device HID Keyboard for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.keyboard.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device HID Keyboard unit tests for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device HID Keyboard unit tests for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device HID Keyboard unit tests for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.hid.device.keyboard.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device HID Mouse for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.mouse.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device HID Mouse for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.mouse.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device HID Mouse for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.device.mouse.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device HID Mouse unit tests for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.hid.device.mouse.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device HID Mouse unit tests for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.hid.device.mouse.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device HID Mouse unit tests for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.hid.device.mouse.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device Mass Storage for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.msc.device.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device Mass Storage for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.msc.device.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device Mass Storage for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.msc.device.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device Mass Storage unit tests for SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.msc.device.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device Mass Storage unit tests for SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.msc.device.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device Mass Storage unit tests for SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.class.msc.device.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device PHDC for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.phdc.device.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device PHDC for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.phdc.device.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device PHDC for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.phdc.device.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Device Vendor Class Example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.vendor.device.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Device Vendor Class Example for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.vendor.device.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Device Vendor Class Example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.vendor.device.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Dual Role (Device and Host) HID mouse for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.dual.mouse.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Dual Role (Device and Host) HID mouse for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.dual.mouse.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Dual Role (Device and Host) HID mouse for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.dual.mouse.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Host CDC for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.cdc.host.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Host CDC for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.cdc.host.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Host CDC for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.cdc.host.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.sam4l_xplained_pro_host", "mcus": ["atsam4lc4c"], "name": "USB Host core tests on SAM4L Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.host.tests.targets.sam4l_xplained_pro_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.sam4l_ek_host", "mcus": ["atsam4lc4c"], "name": "USB Host core tests on SAM4L-EK", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.host.tests.targets.sam4l_ek_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.sam4l8_xplained_pro_host", "mcus": ["atsam4lc8c"], "name": "USB Host core tests on SAM4L8 Xplained Pro", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "common.services.usb.host.tests.targets.sam4l8_xplained_pro_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Host HID Mouse for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.host.mouse.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Host HID Mouse for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.host.mouse.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Host HID Mouse for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.hid.host.mouse.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Host MSC FatFS and HID Mouse for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.host.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example2.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Host MSC FatFS and HID Mouse for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.host.example2.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Host MSC FatFS and HID Mouse for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.composite.host.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example2.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Host MSC with FatFS for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.msc.host.example2.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example2.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Host MSC with FatFS for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.msc.host.example2.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example2.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Host MSC with FatFS for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.msc.host.example2.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Vendor implementation.", "id": "common.services.usb.class.vendor.host.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "USB Host Vendor for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.vendor.host.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Vendor implementation.", "id": "common.services.usb.class.vendor.host.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "USB Host Vendor for SAM4L-EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.vendor.host.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4L8 Xplained Pro"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Vendor implementation.", "id": "common.services.usb.class.vendor.host.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "USB Host Vendor for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "common.services.usb.class.vendor.host.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": ["Timers"], "description": "This example demonstrates how to trigger a watchdog interrupt if the software becomes trapped in a deadlock.", "id": "sam.drivers.wdt.example.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "Watchdog example for SAM4L Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.wdt.example.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": ["Timers"], "description": "This example demonstrates how to trigger a watchdog interrupt if the software becomes trapped in a deadlock.", "id": "sam.drivers.wdt.example.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "Watchdog example for SAM4L8 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.wdt.example.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": ["Timers"], "description": "This example demonstrates how to trigger a watchdog interrupt if the software becomes trapped in a deadlock.", "id": "sam.drivers.wdt.example.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "Watchdog example for SAM4L_EK", "quickstart": {}, "type": "application", "uri": {"sam4l": "sam.drivers.wdt.example.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "The Watchdog Timer can be used to prevent system lock-up if the software becomes trapped in a deadlock.", "id": "sam.drivers.wdt#sam4l", "mcus": ["sam4l"], "name": "WDT - Watchdog Timer", "quickstart": {"sam4l": ["sam4l/html/sam_wdt_sam4l_quickstart.html"]}, "type": "module", "uri": {"sam4l": "sam4l/html/group__group__sam__drivers__wdt__sam4l.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L-EK"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4l_ek", "mcus": ["atsam4lc4c"], "name": "WDT unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.wdt.unit_tests.sam4l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L Xplained Pro"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4l_xplained_pro", "mcus": ["atsam4lc4c"], "name": "WDT unit Test for SAM4L", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.wdt.unit_tests.sam4l_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4L8 Xplained Pro"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4l8_xplained_pro", "mcus": ["atsam4lc8c"], "name": "WDT unit Test for SAM4L8", "quickstart": {}, "type": "unit-test", "uri": {"sam4l": "sam.drivers.wdt.unit_tests.sam4l8_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Analog Conversion"], "description": "Interrupt-based analog comparison in window mode. Compare the input value from PIN1 (PB1) with the bandgap voltage as lower reference and a scaled VCC as upper reference.", "id": "xmega.drivers.ac.example.xplain", "mcus": ["atxmega128a1"], "name": "AC Example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.ac.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Analog Conversion"], "description": "Offset and gain calibration for single-ended measurements using ADC with an external voltage supply.", "id": "xmega.drivers.adc.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "ADC Calibration example for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.adc.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Analog Conversion"], "description": "Offset and gain calibration for single-ended measurements using ADC with an external voltage supply.", "id": "xmega.drivers.adc.example2.xplain", "mcus": ["atxmega128a1"], "name": "ADC Calibration example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.adc.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Analog Conversion"], "description": "Interrupt-based 12-bit ADC conversion using the internal 1 V voltage reference. Channel 0 of the ADC is configured for single-ended measurements from the internal temperature sensor.", "id": "xmega.drivers.adc.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "ADC Internal temperature sensor example for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.adc.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Analog Conversion"], "description": "Interrupt-based 12-bit ADC conversion using the internal 1 V voltage reference. Channel 0 of the ADC is configured for single-ended measurements from the internal temperature sensor.", "id": "xmega.drivers.adc.example1.xplain", "mcus": ["atxmega128a1"], "name": "ADC Internal temperature sensor example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.adc.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Analog Conversion"], "description": "Unit tests for the XMEGA ADC driver using the built-in DAC.", "id": "xmega.drivers.adc.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "ADC unit tests on Xplain using DAC", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.adc.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "", "id": "xmega.drivers.aes.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "AES driver unit tests on XMEGA-A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.aes.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.stk600-rc064x_atxmega256a3", "mcus": ["atxmega256a3"], "name": "AT45DBX DataFlash example for STK600-RC064X", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.memory.data_flash.at45dbx.example.stk600-rc064x_atxmega256a3/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.stk600-rc100x", "mcus": ["atxmega128a1"], "name": "AT45DBX DataFlash example for STK600-RC100X", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.memory.data_flash.at45dbx.example.stk600-rc100x/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["Xplain"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.xplain", "mcus": ["atxmega128a1"], "name": "AT45DBX DataFlash example for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.memory.data_flash.at45dbx.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["Xplain"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.xplain", "mcus": ["atxmega128a1"], "name": "AT45DBX DataFlash unit tests for Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.components.memory.data_flash.at45dbx.unit_tests.xplain/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "The pre-compiled QTouch Library, common and include files for AVR 8-bit devices. For more information on the QTouch Library, goto www.atmel.com/qtouchlib. For support queries, email touch@atmel.com.", "id": "config.common.services.qtouch.generic.avr8.xmega128a1_qt600.method#qtouch_method", "mcus": ["atxmega128a1"], "name": "Atmel QTouch Library 4.4 - XMEGA128A1 - QT600", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__group__common__services__qtouch.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Cryptography"], "description": "Crypto Authentication device ATSHA204", "id": "common.components.crypto.sha204", "mcus": ["xmegaa1"], "name": "ATSHA204 device", "quickstart": {}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__sha204__command__marshaling__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A1 Xplained"], "category": ["Cryptography", "Cryptography"], "description": "Provides an application example of an ATSHA204 component. In an infinite loop, sends a DevRev command to all four ATSHA204 devices and indicates success or failure for one second using the main board LEDs.", "id": "common.components.crypto.sha204.example_comm.atxmega128a1_xplain", "mcus": ["atxmega128a1"], "name": "ATSHA204 Example for Security Xplained Ext. Board", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.crypto.sha204.example_comm.atxmega128a1_xplain/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A1 Xplained"], "category": ["Cryptography", "Cryptography", "Cryptography"], "description": "Provides an application example of the ATSHA204 component. In an infinite loop, sends a Mac command to an ATSHA204 device serving as a client, and sends a CheckMac command with the Mac challenge / response data to a second ATSHA204 device that serves as a host. Helper functions log the commands and responses through the USB-CDC board controller in hex-ascii.", "id": "common.components.crypto.sha204.example_client_host.atxmega128a1_xplain", "mcus": ["atxmega128a1"], "name": "ATSHA204 Example for Security Xplained Ext. Board", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.crypto.sha204.example_client_host.atxmega128a1_xplain/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "ATSHA204 CryptoAuth unit test. Test TWI communication with the four ATSHA204 components mounted on a Security Xplained extension board.", "id": "common.components.crypto.sha204.unit_tests.xmega_a1_xplained_security", "mcus": ["atxmega128a1"], "name": "ATSHA204 Unit Tests", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.components.crypto.sha204.unit_tests.xmega_a1_xplained_security/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Graphics", "Touch"], "description": "Example application demonstrating a calculator using the widget toolkit.", "id": "common.applications.mxt143e_xplained_calc_demo.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Calculator example for the XMEGA-A1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.applications.mxt143e_xplained_calc_demo.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "An example application that calculates the time difference between two dates, and lights up a led if the resulting time is correct.", "id": "common.services.calendar.example2.xplain", "mcus": ["atxmega128a1"], "name": "Calendar service example 2 for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.calendar.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "An example application that converts a date to a timestamp and lights up a led if the timestamp is correct.", "id": "common.services.calendar.example1.xplain", "mcus": ["atxmega128a1"], "name": "Calendar service example for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.calendar.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "Unit tests for calendar functionality", "id": "common.services.calendar.unit_tests.xplain", "mcus": ["atxmega128a1"], "name": "Calendar service unit tests on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.services.calendar.unit_tests.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.stk600-rc100x.atxmega128a1", "mcus": ["atxmega128a1"], "name": "Common API for Chip Reset Cause Access / Example for STK600-RC100X", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.cpu.example.stk600-rc100x.atxmega128a1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.xplain", "mcus": ["atxmega128a1"], "name": "Common API for Chip Reset Cause Access / Example for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.cpu.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.xplain", "mcus": ["atxmega128a1"], "name": "Common API for Clocks Control / Example 1 for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.clock.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.xplain", "mcus": ["atxmega128a1"], "name": "Common API for Clocks Control / Example 2 for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.clock.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.xplain", "mcus": ["atxmega128a1"], "name": "Common API for Clocks Control / Example 3 for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.clock.example3.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.stk600", "mcus": ["atxmega128a1"], "name": "Common API for Controlling a TWI Module / Master Mode Example for STK600-RC100X with ATXMEGA128A1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.twi.master.example.stk600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.xplain", "mcus": ["atxmega128a1"], "name": "Common API for Controlling a TWI Module / Master Mode Example for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.twi.master.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR XMEGA A1 devices.", "id": "common.services.basic.sleepmgr.example.xplain", "mcus": ["atxmega128a1"], "name": "Common API for Sleep Management / Example for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.sleepmgr.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "Should toggle one pin on the Xmega port A", "id": "common.services.ioport.example1.xplain", "mcus": ["atxmega128a1"], "name": "Common IOPORT service example 1 for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.ioport.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "Should toggle one pin on the Xmega port A", "id": "common.services.ioport.example2.xplain", "mcus": ["atxmega128a1"], "name": "Common IOPORT service example 2 for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.ioport.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "Example that reads button 0 (PF0) and outputs it on LED0 (PE0).", "id": "common.services.ioport.example3.xplain", "mcus": ["atxmega128a1"], "name": "Common IOPORT service example 3 for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.ioport.example3.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Analog Conversion"], "description": "Generates a sine wave using the XMEGA DAC module.", "id": "xmega.drivers.dac.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "DAC Example 1 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.dac.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Analog Conversion"], "description": "Generates a sine wave using the XMEGA DAC module.", "id": "xmega.drivers.dac.example1.xplain", "mcus": ["atxmega128a1"], "name": "DAC Example 1 for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.dac.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Analog Conversion"], "description": "Use the XMEGA DAC for dual-channel output with automatic refresh.", "id": "xmega.drivers.dac.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "DAC Example 2 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.dac.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Analog Conversion"], "description": "Use the XMEGA DAC for dual-channel output with automatic refresh.", "id": "xmega.drivers.dac.example2.xplain", "mcus": ["atxmega128a1"], "name": "DAC Example 2 for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.dac.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Unit tests for the XMEGA DAC driver using the built-in ADC.", "id": "xmega.drivers.dac.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "DAC unit tests on Xplain using ADC", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.dac.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Test all functions of the XMEGA DES driver.", "id": "xmega.drivers.des.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "DES driver unit tests on XMEGA A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.des.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["DMA Controller"], "description": "Start a DMA transfer between two internal memory areas and upon completion verifies this by comparing those areas.", "id": "xmega.drivers.dma.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "DMA Example for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.dma.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["DMA Controller"], "description": "Start a DMA transfer between two internal memory areas and upon completion verifies this by comparing those areas.", "id": "xmega.drivers.dma.example.xplain", "mcus": ["atxmega128a1"], "name": "DMA Example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.dma.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["DMA Controller"], "description": "Perform a range of test on the DMA module.", "id": "xmega.drivers.dma.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "DMA unit tests for XMEGA A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.dma.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to read the device and the production signatures and output them on LEDs.", "id": "xmega.drivers.nvm.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 1 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Memory"], "description": "Use the XMEGA NVM to read the device and the production signatures and output them on LEDs.", "id": "xmega.drivers.nvm.example1.xplain", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 1 for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to EEPROM memory : erase, write, read access and output status on LEDs.", "id": "xmega.drivers.nvm.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 2 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to EEPROM memory : erase, write, read access and output status on LEDs.", "id": "xmega.drivers.nvm.example2.xplain", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 2 for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to FLASH memory : erase, write, read access to application table and boot sections and output status on LEDs.", "id": "xmega.drivers.nvm.example3.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 3 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example3.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to FLASH memory : erase, write, read access to application table and boot sections and output status on LEDs.", "id": "xmega.drivers.nvm.example3.xplain", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 3 for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example3.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to fuse and lock bits memory : read FUSEBYTE2, read and write lock bits.", "id": "xmega.drivers.nvm.example4.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 4 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example4.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to fuse and lock bits memory : read FUSEBYTE2, read and write lock bits.", "id": "xmega.drivers.nvm.example4.xplain", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 4 for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example4.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to user signature memory : erase, write, read access and output status on LEDs.", "id": "xmega.drivers.nvm.example5.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 5 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example5.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to user signature memory : erase, write, read access and output status on LEDs.", "id": "xmega.drivers.nvm.example5.xplain", "mcus": ["atxmega128a1"], "name": "Drivers NVM Example 5 for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.nvm.example5.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Interrupt"], "description": "Use the XMEGA PMIC to define Interrupt Service Routines (ISRs), to enable globally interrupts or individual interrupt levels, to demonstrate interruptability of lower interrupt levels.", "id": "xmega.drivers.pmic.example.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Drivers PMIC Example for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.pmic.example.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Interrupt"], "description": "Use the XMEGA PMIC to define Interrupt Service Routines (ISRs), to enable globally interrupts or individual interrupt levels, to demonstrate interruptability of lower interrupt levels.", "id": "xmega.drivers.pmic.example.xplain", "mcus": ["atxmega128a1"], "name": "Drivers PMIC Example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.pmic.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Clocks", "Timers"], "description": "Use the XMEGA RTC module : initialization, use the LEDs to show the last two digits from time in binary coded decimal (BCD) and then reschedules the alarm in 1 second.", "id": "xmega.drivers.rtc.example.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Drivers RTC Example for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.rtc.example.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Clocks", "Timers"], "description": "Use the XMEGA RTC module : initialization, use the LEDs to show the last two digits from time in binary coded decimal (BCD) and then reschedules the alarm in 1 second.", "id": "xmega.drivers.rtc.example.xplain", "mcus": ["atxmega128a1"], "name": "Drivers RTC Example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.rtc.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Timers"], "description": "Use the XMEGA RTC32 module : initialization, uses the LEDs to show the last two digits from time in binary coded decimal (BCD) and then reschedules the alarm in every third RTC32 clock cycle.", "id": "xmega.drivers.rtc32.example.stk600-rc064x", "mcus": ["atxmega256a3b"], "name": "Drivers RTC32 Example for stk600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.rtc32.example.stk600-rc064x/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : configures one TC module in normal mode and uses three TC interrupts (overflow, Capture/Compare Channels A and B).", "id": "xmega.drivers.tc.example1.simulator_example1.xmega_a1_simulator", "mcus": ["atxmega128a1"], "name": "Drivers TC Example for Simulator XMEGA A1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example1.simulator_example1.xmega_a1_simulator/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.stk600-rc064x_atxmega256a3", "mcus": ["atxmega256a3"], "name": "Drivers USART Example for stk600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.usart.example.stk600-rc064x_atxmega256a3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.stk600-rc064x_atxmega64a3", "mcus": ["atxmega64a3"], "name": "Drivers USART Example for stk600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.usart.example.stk600-rc064x_atxmega64a3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Memory"], "description": "Use the XMEGA External Bus Interface to address the SDRAM device. Run through tests detecting faults to address, data lines and finally checking data integrity.", "id": "xmega.drivers.ebi.example.sdram.xplain", "mcus": ["atxmega128a1"], "name": "EBI SDRAM Example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.ebi.example.sdram.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA External Bus Interface to address the SRAM device. Run through tests detecting faults to address, data lines and finally checking data integrity.", "id": "xmega.drivers.ebi.example.sram.stk600-rc100x.atxmega128a1", "mcus": ["atxmega128a1"], "name": "EBI SRAM Example for ATxmega128A1 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.ebi.example.sram.stk600-rc100x.atxmega128a1/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "FatFS example for XMEGA-A1 Xplained, the file system will be created on the external SDRAM.", "id": "common.services.fs.fatfs.access_example.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "FatFS example for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.fs.fatfs.access_example.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "FatFS unit tests for XMEGA-A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.services.fs.fatfs.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "", "id": "common.services.basic.fifo.unit_tests.xplain", "mcus": ["atxmega128a1"], "name": "FIFO service unit tests on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.services.basic.fifo.unit_tests.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.xmega_a1_xplain", "mcus": ["atxmega128a1"], "name": "graphic library example for the XMEGA-A1 Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.gfx.example1.xmega_a1_xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "graphic library example for the XMEGA-A1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.gfx.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["Xplain"], "category": [], "description": "A simple example for verifying that the HX8347A low level driver works", "id": "common.components.display_controller.hx8347a.example2.xplain", "mcus": ["atxmega128a1"], "name": "HX8347A Display Controller Example for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.display_controller.hx8347a.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["Xplain"], "category": [], "description": "A simple example for verifying that the HX8347A low level driver works", "id": "common.components.display_controller.hx8347a.example.xplain", "mcus": ["atxmega128a1"], "name": "HX8347A Display Controller Example for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.display_controller.hx8347a.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "A simple example for verifying that the ILI9341 low level driver works", "id": "common.components.display_controller.ili9341.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "ILI9341 Display Controller Example for A1-XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.display_controller.ili9341.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "Provides a simple LED Chaser application with defined timing interval in ms between each LED.", "id": "common.applications.led_chaser.stk600-xmega128a1", "mcus": ["atxmega128a1"], "name": "LED Chaser Example for stk600-ATxmega128A1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.applications.led_chaser.stk600-xmega128a1/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["Xplain"], "category": [], "description": "Provides a simple LED Chaser application with defined timing interval in ms between each LED.", "id": "common.applications.led_chaser.xplain", "mcus": ["atxmega128a1"], "name": "LED Chaser Example for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.applications.led_chaser.xplain/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "This demo sets up for low power consumption and steps through all power modes.", "id": "xmega.applications.low_power_demo_xmega.atxmega128a1_xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Low Power Demo Application for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.low_power_demo_xmega.atxmega128a1_xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-A1 Xplained"], "category": ["Communication", "Touch"], "description": "This example demonstrates the mXT143E Xplained top module on an XMEGA-A1 Xplained kit", "id": "common.components.touch.mxt.example_usart.atxmega128a1_xplained", "mcus": ["atxmega128a1"], "name": "maXTouch component USART event example - XMEGA-A1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.components.touch.mxt.example_usart.atxmega128a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["XMEGA-A1 Xplained"], "category": ["Memory"], "description": "Perform a range of unit tests on the MEMBAG utility to ensure correct operation.", "id": "common.utils.membag.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "MEMBAG unit tests for XMEGA A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.utils.membag.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Graphics"], "description": "Monochrome graphic library example with screen dump", "id": "common.services.gfx_mono.example_screen_dump.xplain", "mcus": ["atxmega128a1"], "name": "Monochrome graphic library example for Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.gfx_mono.example_screen_dump.xplain/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Touch", "USB"], "description": "Reads input from maXTouch and gives touch indication on display.", "id": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "mXT143E Xplained multi-touch demo for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Touch"], "description": "Simple paint application using the MXT143E Xplained top module.", "id": "common.applications.mxt143e_xplained_paint_demo.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "mXT143E Xplained paint demo for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.applications.mxt143e_xplained_paint_demo.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": [], "description": "", "id": "xmega.drivers.nvm.unit_tests.xplain", "mcus": ["atxmega128a1"], "name": "NVM driver unit tests on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.nvm.unit_tests.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.atxmega128a1_xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "NVM example for atxmega128a1 on XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.drivers.nvm.example.atxmega128a1_xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.atxmega128a1_xplain", "mcus": ["atxmega128a1"], "name": "NVM example for atxmega128a1 on Xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.drivers.nvm.example.atxmega128a1_xplain/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3-REB-CBB"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb212b_cbb", "mcus": ["atxmega256a3"], "name": "Performance Analyzer Application AT86RF212B-REB212BSMA-EK", "quickstart": {}, "type": "application", "uri": {"xmegaa": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb212b_cbb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3-REB-CBB"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb231_fem_cbb", "mcus": ["atxmega256a3"], "name": "Performance Analyzer Application AT86RF231 REB231FE2-EK", "quickstart": {}, "type": "application", "uri": {"xmegaa": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb231_fem_cbb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3-REB-CBB"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb231_cbb", "mcus": ["atxmega256a3"], "name": "Performance Analyzer Application AT86RF231-REB231ED-EK", "quickstart": {}, "type": "application", "uri": {"xmegaa": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb231_cbb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3-REB-CBB"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb232_cbb", "mcus": ["atxmega256a3"], "name": "Performance Analyzer Application AT86RF232-REB232ED-EK", "quickstart": {}, "type": "application", "uri": {"xmegaa": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb232_cbb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-A3-REB-CBB"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb233_cbb", "mcus": ["atxmega256a3"], "name": "Performance Analyzer Application AT86RF233-REB233SMAD-EK", "quickstart": {}, "type": "application", "uri": {"xmegaa": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atxmega256a3_reb233_cbb/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Timers"], "description": "This simple example shows how to use the PWM service to dim LEDs.", "id": "xmega.services.pwm.example1.xmega-a1_xplained", "mcus": ["atxmega128a1"], "name": "PWM driver example 1 - XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.services.pwm.example1.xmega-a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Timers"], "description": "This example will demostrate how to use the PWM service with interrupts to fade LEDs.", "id": "xmega.services.pwm.example2.xmega-a1_xplained", "mcus": ["atxmega128a1"], "name": "PWM driver example 2 - XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.services.pwm.example2.xmega-a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["QT600"], "category": [], "description": "This QTouch Library Example demonstrates usage of the QTouch method on QT600-ATXMEGA128A1-MCU board and QT16 Touch panel.", "id": "xmega.services.qtouch.generic.avr8.qtouch.examples.example_qt_qt600.xmega128a1_qt600", "mcus": ["atxmega128a1"], "name": "QTouch method Example Application - ATXMEGA128A1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.services.qtouch.generic.avr8.qtouch.examples.example_qt_qt600.xmega128a1_qt600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Perform a range of unit tests on the Sensor Platform library to ensure correct operation, using the INERTIAL ONE sensor board.", "id": "common.services.sensors.unit_tests.atxmega128a1_xmega_a1_xplained_inertial_1", "mcus": ["atxmega128a1"], "name": "Sensor Platform unit tests for XMEGA A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.services.sensors.unit_tests.atxmega128a1_xmega_a1_xplained_inertial_1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.xplain", "mcus": ["atxmega128a1"], "name": "Shared AVR API for Serial Interfaces / Example for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.serial.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.xplain", "mcus": ["atxmega128a1"], "name": "Shared AVR API for SPI Master Mode / Example for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.spi.master_example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": [], "description": "Unit test application for the SPI driver.", "id": "xmega.drivers.spi.unit_tests.xplain", "mcus": ["atxmega128a1"], "name": "SPI driver unit tests on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.spi.unit_tests.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API .", "id": "common.services.basic.clock#8", "mcus": ["xmegaa1", "xmegaa3", "xmegaa4", "xmegaa3b", "xmegad", "xmegae"], "name": "System Clock Control - XMEGA A1/A3/A3B/A4/D/E implementation", "quickstart": {"xmegaa": ["xmegaa/html/sysclk_quickstart.html"], "xmegad": ["xmegad/html/sysclk_quickstart.html"], "xmegae": ["xmegae/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"xmegaa": "xmegaa/html/group__clk__group.html", "xmegad": "xmegad/html/group__clk__group.html", "xmegae": "xmegae/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : configures one TC module in normal mode and uses three TC interrupts (overflow, Capture/Compare Channels A and B).", "id": "xmega.drivers.tc.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "TC Example 1 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : configures one TC module in normal mode and uses three TC interrupts (overflow, Capture/Compare Channels A and B).", "id": "xmega.drivers.tc.example1.xplain", "mcus": ["atxmega128a1"], "name": "TC Example 1 for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : uses and configures two TC modules. One is configured to generate single slope PWM on LED0. One is used in generate a 50ms overflow interrupt.", "id": "xmega.drivers.tc.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "TC Example 2 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : uses and configures two TC modules. One is configured to generate single slope PWM on LED0. One is used in generate a 50ms overflow interrupt.", "id": "xmega.drivers.tc.example2.xplain", "mcus": ["atxmega128a1"], "name": "TC Example 2 for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : Dimming the duty-cycle of the two signals in an opposite way. Configures the Timer E0 (TCE0) in waveform  generator mode. AWex is used to output PWM signals from Compare modules CCA and CCB. These complementary signals are output on Port E0 and E1.", "id": "xmega.drivers.tc.example3.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "TC Example 3 for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example3.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : Dimming the duty-cycle of the two signals in an opposite way. Configures the Timer E0 (TCE0) in waveform  generator mode. AWex is used to output PWM signals from Compare modules CCA and CCB. These complementary signals are output on Port E0 and E1.", "id": "xmega.drivers.tc.example3.xplain", "mcus": ["atxmega128a1"], "name": "TC Example 3 for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example3.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : Capture example Enable one TC for frequency capture and measure the time between press and release of button. Display the result on leds.", "id": "xmega.drivers.tc.example4.xplain", "mcus": ["atxmega128a1"], "name": "TC Example 4 for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.tc.example4.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Timers"], "description": "Timeout service example 1. This example demonstrates how to use the periodic timeout feature to toggle two LED's with different frequency.", "id": "xmega.services.timeout.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Timeout example 1 for XMEGA A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.services.timeout.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Timers"], "description": "This example shows how to use the \\ref tc_timeout_group to implement a software debounce filter on a button input.", "id": "xmega.services.timeout.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Timeout example 2 for XMEGA A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.services.timeout.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Unit tests for the XMEGA TWI.", "id": "xmega.drivers.twi.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "TWI unit tests on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.twi.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "", "id": "common.services.gfx_mono.unit_test_menu.xmega_a1_xplain", "mcus": ["atxmega128a1"], "name": "Unit test for gfx_mono menu system on XMEGA-A1 Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.services.gfx_mono.unit_test_menu.xmega_a1_xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": [], "description": "", "id": "xmega.drivers.ebi.unit_tests.sdram.xplain", "mcus": ["atxmega128a1"], "name": "Unit tests for EBI driver with SDRAM on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.ebi.unit_tests.sdram.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "", "id": "xmega.drivers.ebi.unit_tests.sram.stk600-rc100x", "mcus": ["atxmega128a1"], "name": "Unit tests for EBI driver with SRAM on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.ebi.unit_tests.sram.stk600-rc100x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "Unit tests for graphical drawing primitives", "id": "common.services.gfx_mono.unit_tests.xplain", "mcus": ["atxmega128a1"], "name": "Unit tests for graphical primitives on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.services.gfx_mono.unit_tests.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Xplain"], "category": [], "description": "Unit tests for spinner widget", "id": "common.services.gfx_mono.unit_tests_spinctrl.xplain", "mcus": ["atxmega128a1"], "name": "Unit tests for spinner widget on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "common.services.gfx_mono.unit_tests_spinctrl.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "USART Example for XMEGA-A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.usart.example.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.xplain", "mcus": ["atxmega128a1"], "name": "USART Example for xplain", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.usart.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "A unit test to verify the functionality of the XMEGA WDT driver.", "id": "xmega.drivers.wdt.unit_tests.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "WDT driver unit tests on XMEGA-A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.drivers.wdt.unit_tests.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.stk600-rc064x_atxmega256a3", "mcus": ["atxmega256a3"], "name": "WDT Example for ATxmega256A3 on STK600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.wdt.example.stk600-rc064x_atxmega256a3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.stk600-rc064x_atxmega64a3", "mcus": ["atxmega64a3"], "name": "WDT Example for ATxmega64A3 on STK600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.wdt.example.stk600-rc064x_atxmega64a3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "WDT Example for XMEGA A1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.wdt.example.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.xplain", "mcus": ["atxmega128a1"], "name": "WDT Example for XPLAIN", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.wdt.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, showing a collection of icon widgets, allowing the user to navigate between the icons and select them using both direct touch and soft button widgets.", "id": "common.services.wtk.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Widget library example 2 for the XMEGA-A1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.wtk.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, demonstrating the plot widget, allowing the user to add new plot points to be graphed using a pair of slider and button widgets.", "id": "common.services.wtk.example3.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Widget library example 3 for the XMEGA-A1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.wtk.example3.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "Widget library example for the XMEGA-A1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.wtk.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": ["Graphics", "Touch"], "description": "Training skeleton code for the application note \"AVR1614: Widget ToolKit - Getting Started\".", "id": "common.services.wtk.training.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "WTK training project for XMEGA-A1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.wtk.training.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator. A single block is encrypted and decrypted.", "id": "xmega.drivers.aes.example1.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "XMEGA AES XMEGA A1-Xplained example1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.aes.example1.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator with interrupts. A single block is encrypted and decrypted using interrupts to control the process flow.", "id": "xmega.drivers.aes.example2.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "XMEGA AES XMEGA-A1 Xplained example2", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.aes.example2.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator. DMA channel 0 is used to access AES register.", "id": "xmega.drivers.aes.example3.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "XMEGA AES XMEGA-A1 Xplained example3", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.aes.example3.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator. A single block is encrypted and decrypted.", "id": "xmega.drivers.aes.example1.xplain", "mcus": ["atxmega128a1"], "name": "XMEGA AES xplain example1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.aes.example1.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator with interrupts. A single block is encrypted and decrypted using interrupts to control the process flow.", "id": "xmega.drivers.aes.example2.xplain", "mcus": ["atxmega128a1"], "name": "XMEGA AES xplain example2", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.aes.example2.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator. DMA channel 0 is used to access AES register.", "id": "xmega.drivers.aes.example3.xplain", "mcus": ["atxmega128a1"], "name": "XMEGA AES xplain example3", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.aes.example3.xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-A1 Xplained"], "category": ["Cryptography"], "description": "Use the XMEGA Data Encryption Standard (DES) core instruction. A single block is encrypted and decrypted.", "id": "xmega.drivers.des.example.xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "XMEGA DES XMEGA-A1 Xplained example", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.des.example.xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Xplain"], "category": ["Cryptography"], "description": "Use the XMEGA Data Encryption Standard (DES) core instruction. A single block is encrypted and decrypted.", "id": "xmega.drivers.des.example.xplain", "mcus": ["atxmega128a1"], "name": "XMEGA DES xplain example", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.des.example.xplain/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Test all functions of XMEGA timeout service", "id": "xmega.services.timeout.unit_tests.a1_xplained", "mcus": ["atxmega128a1"], "name": "XMEGA timeout service unit tests on XMEGA-A1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegaa": "xmega.services.timeout.unit_tests.a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.stk600-rc100x", "mcus": ["atxmega128a1"], "name": "XMEGA USART Example for stk600-rc100x", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.drivers.usart.example.stk600-rc100x/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.xmega-a1_delay-demo", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained Common Delay Service Example", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.services.basic.xmega-a1_delay-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Demo application for the XMEGA-A1 Xplained: a memory-game with sound effects.", "id": "xmega.applications.xmega_a1_xplained_demo.atxmega128a1_xmega_a1_xplained", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained demo application", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega_a1_xplained_demo.atxmega128a1_xmega_a1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["XMEGA-A1 Xplained"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USART.", "id": "common.utils.stdio.stdio_serial.xmega-a1_stdio-demo", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained Serial Standard I/O Example", "quickstart": {}, "type": "application", "uri": {"xmegaa": "common.utils.stdio.stdio_serial.xmega-a1_stdio-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained places microcontroller in low-power sleep mode and waits for sensor event to wake up in response to motion detection by the accelerometer.  Configuration options allow use of gyroscope new data for wake up and various other wake/sleep scenarios.  Uses an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).", "id": "xmega.applications.xmega-a1_avrsbin1_wake", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsbin1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained obtains sensor data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then displays accelerometer, gyroscope, and electronic compass data.", "id": "xmega.applications.xmega-a1_avrsbin1-demo", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsbin1-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained obtains sensor data from the accelerometer, gyroscope, and electronic compass devices on an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "xmega.applications.xmega-a1_avrsbin1_visualizer", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsbin1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained obtains electronic compass data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then prompts the user to make a series of manual steps to calibrate the compass to the local geomagnetic field.", "id": "xmega.applications.xmega-a1_avrsbin1_compass-cal", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsbin1_compass-cal/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained obtains sensor data from an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1) then displays light and proximity data.", "id": "xmega.applications.xmega-a1_avrsblp1_demo", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Light/Prox Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsblp1_demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained obtains sensor data from the light and proximity sensor device on an Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "xmega.applications.xmega-a1_avrsblp1_visualizer", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsblp1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) using proximity sensor for gesture recognition.", "id": "xmega.applications.xmega-a1_avrsblp1_gesture", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsblp1_gesture/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) to set proximity sensor detection thresholds and store in non-volatile memory.", "id": "xmega.applications.xmega-a1_avrsblp1_calibrate", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsblp1_calibrate/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained places microcontroller in low-power sleep mode and waits for sensor event to wake up in response to detected light and/or proximity.  Configuration options allow setting threshold levels for wake up and various other controls.  Uses an Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1).", "id": "xmega.applications.xmega-a1_avrsblp1_wake", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsblp1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-A1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-A1 Xplained obtains barometric pressure and temperature sensor data from an Atmel Sensors Xplained Pressure 1 board (ATAVRSBPR1) then prints the scaled and formatted values to an attached serial terminal using the C-library standard I/O functions.", "id": "xmega.applications.xmega-a1_avrsbpr1_demo", "mcus": ["atxmega128a1"], "name": "XMEGA-A1 Xplained with Xplained Pressure Board #1", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega-a1_avrsbpr1_demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["Xplain"], "category": [], "description": "Demo application for the XMEGA-A1 Xplained: a memory-game with sound effects.", "id": "xmega.applications.xmega_a1_xplained_demo.atxmega128a1_xplain", "mcus": ["atxmega128a1"], "name": "Xplain demo application", "quickstart": {}, "type": "application", "uri": {"xmegaa": "xmega.applications.xmega_a1_xplained_demo.atxmega128a1_xplain/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "xmega.drivers.adc#1", "mcus": ["xmegab", "xmegac", "xmegad"], "name": "ADC - XMEGA B/C/D Implementation", "quickstart": {"xmegab": ["xmegab/html/adc_quickstart.html"], "xmegac": ["xmegac/html/adc_quickstart.html"], "xmegad": ["xmegad/html/adc_quickstart.html"]}, "type": "module", "uri": {"xmegab": "xmegab/html/group__adc__group.html", "xmegac": "xmegac/html/group__adc__group.html", "xmegad": "xmegad/html/group__adc__group.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "AT45DBX DataFlash unit tests for XMEGA-B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "common.components.memory.data_flash.at45dbx.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "Basic Voltage demonstration that perfoms ADC on-board calibration to measure accurate voltage. The measure voltage is displayed using the on-board LCD.", "id": "xmega.applications.xmega_b1_xplained_voltage_meter.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Basic Voltage meter demonstration", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega_b1_xplained_voltage_meter.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Graphics", "Touch"], "description": "Example application demonstrating a calculator using the widget toolkit.", "id": "common.applications.mxt143e_xplained_calc_demo.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Calculator demo for the XMEGA-B1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.applications.mxt143e_xplained_calc_demo.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": ["DMA Controller"], "description": "Start a DMA transfer between two internal memory areas and upon completion verifies this by comparing those areas.", "id": "xmega.drivers.dma.example2.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "DMA Example for XMEGA-B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.drivers.dma.example2.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": ["DMA Controller"], "description": "Perform a range of test on the DMA module.", "id": "xmega.drivers.dma.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "DMA unit tests for XMEGA B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "xmega.drivers.dma.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "An example application using both CRC-16 and CRC-32 using the I/O interface.", "id": "xmega.drivers.crc.example1.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Example1 for CRC driver on XMEGA-B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.drivers.crc.example1.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Graphics"], "description": "Graphical library", "id": "common.services.gfx", "mcus": ["xmega", "uc3", "sam3", "sam4s"], "name": "GFX Color - Color Graphic Library", "quickstart": {"xmegab": ["xmegab/html/gfx_quickstart.html"], "xmegae": ["xmegae/html/gfx_quickstart.html"]}, "type": "module", "uri": {"xmegab": "xmegab/html/group__gfx__group.html", "xmegae": "xmegae/html/group__gfx__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Graphic Library example for the XMEGA-B1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.gfx.example1.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "A simple example for verifying that the ILI9341 low level driver works", "id": "common.components.display_controller.ili9341.example1.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "ILI9341 Display Controller Example for B1-XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.components.display_controller.ili9341.example1.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Driver for Atmel YMCC42048AAAYDCL LCD component (custom LCD used e.g. for STK600_RC064X_LCDX). This version called 'partial_matrix0' uses part of the LCD matrix. Provides functions for initialization and control of the LCD segments.", "id": "xmega.components.display.c42048a#partial_matrix0", "mcus": ["xmegab"], "name": "LCD - Atmel YMCC42048AAAYDCL Custom Matrix V1", "quickstart": {}, "type": "module", "uri": {"xmegab": "xmegab/html/group__c42048a__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "Demo application for XMEGA-B1 Xplained. The application displays on-board sensors on the LCD and operates as a comosite USB device with mass storage and generic HID interface. This application is detailled in AVR1619 application note.", "id": "xmega.applications.xmega_b1_xplained_demo.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "LCD and USB application for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega_b1_xplained_demo.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "This example illustrates how the C42048A LCD glass component can be used. Using the XMEGA LCD module, the example writes characters,  set or clear icons on the display.", "id": "xmega.components.display.c42048a.example.stk600_rc064x_lcdx", "mcus": ["atxmega128b3"], "name": "LCD c42048a Example for STK600 and LCDX", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.components.display.c42048a.example.stk600_rc064x_lcdx/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "This example illustrates how the C42048A LCD glass component can be used. Using the XMEGA LCD module, the example writes characters,  set or clear icons on the display.", "id": "xmega.components.display.c42048a.example.stk600_rc100x_lcdx", "mcus": ["atxmega128b1"], "name": "LCD c42048a Example for STK600 and LCDX", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.components.display.c42048a.example.stk600_rc100x_lcdx/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "This example illustrates how the C42048A LCD glass component can be used. Using the XMEGA LCD module, the example writes characters,  set or clear icons on the display.", "id": "xmega.components.display.c42048a.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "LCD c42048a Example for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.components.display.c42048a.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Graphics"], "description": "Driver for the LCD controller. Provides functions for using the on-chip LCD controller.", "id": "xmega.drivers.lcd", "mcus": ["xmegab"], "name": "LCD controller driver", "quickstart": {"xmegab": ["xmegab/html/lcd_quickstart.html"]}, "type": "module", "uri": {"xmegab": "xmegab/html/group__lcd__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Graphics"], "description": "This examples illustrates how to use the XMEGA LCD module to write characters, set or clear icons on display.", "id": "xmega.drivers.lcd.example.stk600-rc064x_lcdx", "mcus": ["atxmega128b3"], "name": "LCD Example for STK600-RC064X-LCDX", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.drivers.lcd.example.stk600-rc064x_lcdx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Graphics"], "description": "This examples illustrates how to use the XMEGA LCD module to write characters, set or clear icons on display.", "id": "xmega.drivers.lcd.example.stk600-rc100x_lcdx", "mcus": ["atxmega128b1"], "name": "LCD Example for STK600-RC100X-LCDX", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.drivers.lcd.example.stk600-rc100x_lcdx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": ["Graphics"], "description": "This examples illustrates how to use the XMEGA LCD module to write characters, set or clear icons on display.", "id": "xmega.drivers.lcd.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "LCD Example for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.drivers.lcd.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Touch", "USB"], "description": "Reads input from maXTouch and gives touch indication on display.", "id": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "mXT143E Xplained multi-touch demo for XMEGA-B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Touch"], "description": "Simple paint application using the MXT143E Xplained top module.", "id": "common.applications.mxt143e_xplained_paint_demo.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "mXT143E Xplained paint demo for XMEGA-B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.applications.mxt143e_xplained_paint_demo.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#no_extmem#0", "mcus": ["xmega", "xmegad", "xmegab", "xmegaau", "xmegaa", "xmegae", "xmegac"], "name": "NVM - Non volatile memory access", "quickstart": {"xmegab": ["xmegab/html/common_nvm_quickstart.html", "xmegab/html/xmega_nvm_quickstart.html"], "xmegac": ["xmegac/html/common_nvm_quickstart.html", "xmegac/html/xmega_nvm_quickstart.html"], "xmegad": ["xmegad/html/common_nvm_quickstart.html", "xmegad/html/xmega_nvm_quickstart.html"], "xmegae": ["xmegae/html/common_nvm_quickstart.html", "xmegae/html/xmega_nvm_quickstart.html"]}, "type": "module", "uri": {"xmegab": "xmegab/html/group__nvm__group.html", "xmegac": "xmegac/html/group__nvm__group.html", "xmegad": "xmegad/html/group__nvm__group.html", "xmegae": "xmegae/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.atxmega128b1_xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "NVM example for atxmega128b1 on XMEGA-B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.drivers.nvm.example.atxmega128b1_xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": ["Peripheral Event System", "Timers"], "description": "XMEGA Quadrature decoder example application shows how to use quadrature decoder driver, detects position and scolling frequency. This example uses a internal generator of quadrature encoder.", "id": "xmega.drivers.qdec.example2.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Quadrature Decoder Example 2 for XMEGA-B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.drivers.qdec.example2.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": ["Peripheral Event System", "Timers"], "description": "Unit tests for the XMEGA QDEC driver.", "id": "xmega.drivers.qdec.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Quadrature Decoder unit tests for XMEGA-B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "xmega.drivers.qdec.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "Unit test application for the SPI driver.", "id": "xmega.drivers.spi.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "SPI driver unit tests on XMEGA B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "xmega.drivers.spi.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "", "id": "xmega.drivers.twi#both", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "TWI - Two-wire Master and Slave Interface", "quickstart": {"xmegab": ["xmegab/html/xmega_twi_quickstart.html"], "xmegac": ["xmegac/html/xmega_twi_quickstart.html"]}, "type": "module", "uri": {"xmegab": "xmegab/html/group__group__xmega__drivers__twi.html", "xmegac": "xmegac/html/group__group__xmega__drivers__twi.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600_atxmega128b1", "mcus": ["atxmega128b1"], "name": "USB CDC Example for ATxmega128b1 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.cdc.device.example.stk600_atxmega128b1/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["XMEGA-B1 Xplained"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB CDC Example for for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.utils.stdio.stdio_usb.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB CDC Example for for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.cdc.device.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation with 7 CDC interfaces.", "id": "common.services.usb.class.cdc.device.example3.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device 7x CDC example for for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.cdc.device.example3.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device CDC unit tests for XMEGA B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "common.services.usb.class.cdc.device.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "Touch", "USB"], "description": "Implements a USB Device HID Mouse using the mXT143E Xplained top module as a touch-enabled trackpad. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.components.touch.mxt.example_hid.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device example using the mXT143E Xplained kit as mouse", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.components.touch.mxt.example_hid.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega128b1", "mcus": ["atxmega128b1"], "name": "USB Device HID Keyboard for ATxmega128B1 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega128b1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device HID Keyboard for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.hid.device.keyboard.example.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega128b1", "mcus": ["atxmega128b1"], "name": "USB Device HID Mouse for ATxmega128b1 on STK600-rc100x", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega128b1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device HID Mouse for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.hid.device.mouse.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega128b1", "mcus": ["atxmega128b1"], "name": "USB Device HID Mouse unit tests for ATxmega128b1 on STK600-rc100x", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega128b1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device HID Mouse unit tests for XMEGA B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "common.services.usb.class.hid.device.mouse.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device HID Mouse unit tests for XMEGA B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "common.services.usb.class.hid.device.keyboard.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.stk600_atxmega128b1", "mcus": ["atxmega128b1"], "name": "USB Device Mass Storage for ATxmega128b1 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.msc.device.example.stk600_atxmega128b1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device Mass Storage for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.usb.class.msc.device.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "USB Device Mass Storage unit tests for XMEGA B1 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegab": "common.services.usb.class.msc.device.unit_tests.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-B1 Xplained"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "WDT Example for XMEGA B1 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.drivers.wdt.example.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, showing a collection of icon widgets, allowing the user to navigate between the icons and select them using both direct touch and soft button widgets.", "id": "common.services.wtk.example2.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Widget library example 2 for the XMEGA-B1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.wtk.example2.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, demonstrating the plot widget, allowing the user to add new plot points to be graphed using a pair of slider and button widgets.", "id": "common.services.wtk.example3.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Widget library example 3 for the XMEGA-B1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.wtk.example3.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "Widget library example for the XMEGA-B1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.wtk.example1.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-B1 Xplained"], "category": ["Graphics", "Touch"], "description": "Training skeleton code for the application note \"AVR1614: Widget ToolKit - Getting Started\".", "id": "common.services.wtk.training.xmega_b1_xplained", "mcus": ["atxmega128b1"], "name": "WTK training project for XMEGA-B1 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegab": "common.services.wtk.training.xmega_b1_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained obtains sensor data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then displays accelerometer, gyroscope, and electronic compass data.", "id": "xmega.applications.xmega-b1_avrsbin1-demo", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsbin1-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained obtains sensor data from the accelerometer, gyroscope, and electronic compass devices on an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "xmega.applications.xmega-b1_avrsbin1_visualizer", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsbin1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained obtains electronic compass data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then prompts the user to make a series of manual steps to calibrate the compass to the local geomagnetic field.", "id": "xmega.applications.xmega-b1_avrsbin1_compass-cal", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsbin1_compass-cal/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained places microcontroller in low-power sleep mode and waits for sensor event to wake up in response to motion detection by the accelerometer.  Configuration options allow use of gyroscope new data for wake up and various other wake/sleep scenarios.  Uses an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).", "id": "xmega.applications.xmega-b1_avrsbin1_wake", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsbin1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained obtains sensor data from the light and proximity sensor device on an Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "xmega.applications.xmega-b1_avrsblp1_visualizer", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Light/Prox Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsblp1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained obtains sensor data from an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1) then displays light and proximity data.", "id": "xmega.applications.xmega-b1_avrsblp1_demo", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Light/Prox Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsblp1_demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) to set proximity sensor detection thresholds and store in non-volatile memory.", "id": "xmega.applications.xmega-b1_avrsblp1_calibrate", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Light/Prox Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsblp1_calibrate/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained places microcontroller in low-power sleep mode and waits for sensor event to wake up in response to detected light and/or proximity.  Configuration options allow setting threshold levels for wake up and various other controls.  Uses an Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1).", "id": "xmega.applications.xmega-b1_avrsblp1_wake", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Light/Prox Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsblp1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) using proximity sensor for gesture recognition.", "id": "xmega.applications.xmega-b1_avrsblp1_gesture", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Light/Prox Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsblp1_gesture/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-B1 Xplained"], "category": ["Sensors"], "description": "Demo application for XMEGA-B1 Xplained obtains barometric pressure and temperature sensor data from an Atmel Sensors Xplained Pressure 1 board (ATAVRSBPR1) then prints the scaled and formatted values to an attached serial terminal using the C-library standard I/O functions.", "id": "xmega.applications.xmega-b1_avrsbpr1_demo", "mcus": ["atxmega128b1"], "name": "XMEGA-B1 Xplained with Xplained Pressure Board #1", "quickstart": {}, "type": "application", "uri": {"xmegab": "xmega.applications.xmega-b1_avrsbpr1_demo/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "", "id": "xmega.drivers.aes.unit_tests.stk600-rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "AES driver unit tests on STK600 and ATxmega384C3", "quickstart": {}, "type": "unit-test", "uri": {"xmegac": "xmega.drivers.aes.unit_tests.stk600-rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "", "id": "config.common.services.qtouch.generic.avr8.xmega_c3_xplained.method#no_method", "mcus": ["atxmega384c3"], "name": "Atmel QTouch Library 4.4 - XMEGA-C3 Xplained", "quickstart": {}, "type": "module", "uri": {"xmegac": "xmegac/html/group__group__common__services__qtouch.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-C3 Xplained"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Basic SD/MMC/SDIO card example for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.components.memory.sd_mmc.example1.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics", "Touch"], "description": "Example application demonstrating a calculator using the widget toolkit.", "id": "common.applications.mxt143e_xplained_calc_demo.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Calculator example for the XMEGA-C3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.applications.mxt143e_xplained_calc_demo.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-C3 Xplained"], "category": [], "description": "XMEGA-C3 Xplained demo which use LEDs, switchs, Qtouch buttons, OLED display, USB, temperature sensor, light sensor, rtc oscillator, MicroSD slot. Refer to application note AVR1939.", "id": "xmega.applications.xmega_c3_xplained_demo.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Demo for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.applications.xmega_c3_xplained_demo.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to read the device and the production signatures and output them on LEDs.", "id": "xmega.drivers.nvm.example1.stk600_rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "Drivers NVM Example 1 for STK600 and ATxmega384C3", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.nvm.example1.stk600_rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to EEPROM memory : erase, write, read access and output status on LEDs.", "id": "xmega.drivers.nvm.example2.stk600_rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "Drivers NVM Example 2 for STK600 and ATxmega384C3", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.nvm.example2.stk600_rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to FLASH memory : erase, write, read access to application table and boot sections and output status on LEDs.", "id": "xmega.drivers.nvm.example3.stk600_rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "Drivers NVM Example 3 for STK600 and ATxmega384C3", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.nvm.example3.stk600_rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Timers"], "description": "Use the XMEGA RTC module : initialization, use the LEDs to show the last two digits from time in binary coded decimal (BCD) and then reschedules the alarm in 1 second.", "id": "xmega.drivers.rtc.example.stk600_rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "Drivers RTC Example for STK600 and ATxmega384C3", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.rtc.example.stk600_rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics"], "description": "Example showing how to use the system font driver to display text strings on a monochrome display.", "id": "common.services.gfx_mono.example.sysfont.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Example for GFX Monochrome System Font driver on XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.gfx_mono.example.sysfont.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "An example application using both CRC-16 and CRC-32 using the I/O interface.", "id": "xmega.drivers.crc.example1.stk600_rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "Example1 for CRC driver for ATxmega384C3 on STK600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.crc.example1.stk600_rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Graphic Library example for the XMEGA-C3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.gfx.example1.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-C3 Xplained"], "category": [], "description": "A simple example for verifying that the ILI9341 low level driver works", "id": "common.components.display_controller.ili9341.example1.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "ILI9341 Display Controller Example for C3-XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.components.display_controller.ili9341.example1.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics"], "description": "Monochrome graphic library graphic primitives example. Draw graphics shapes to a connected LCD display or framebuffer", "id": "common.services.gfx_mono.example1.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Monochrome graphic library example for XMEGA C3-Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.gfx_mono.example1.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-C3 Xplained"], "category": ["Touch", "USB"], "description": "Reads input from maXTouch and gives touch indication on display.", "id": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "mXT143E Xplained multi-touch demo for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.applications.mxt143e_xplained_multi-touch_demo.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-C3 Xplained"], "category": ["Touch"], "description": "Simple paint application using the MXT143E Xplained top module.", "id": "common.applications.mxt143e_xplained_paint_demo.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "mXT143E Xplained paint demo for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.applications.mxt143e_xplained_paint_demo.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["XMEGA-C3 Xplained"], "category": [], "description": "This QTouch Library Example demonstrates usage of the QTouch method and QTouch Debug on XMEGA-C3 Xplained board. A QT600 Bridge is used as interface with Qtouch Analyser tools.", "id": "xmega.services.qtouch.generic.avr8.qtouch.examples.example_qt_qt600.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "QTouch method Example Application for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.services.qtouch.generic.avr8.qtouch.examples.example_qt_qt600.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-C3 Xplained"], "category": ["Memory"], "description": "Use FatFs file system module to mount the SD/MMC card and to write a file.", "id": "common.components.memory.sd_mmc.example2.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "SD/MMC card example with FatFs for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.components.memory.sd_mmc.example2.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-C3 Xplained"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common.components.display.ssd1306.example.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "SSD1306 OLED Controller example for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.components.display.ssd1306.example.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600_atxmega384c3", "mcus": ["atxmega384c3"], "name": "USB Device CDC Example for ATxmega384c3 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.usb.class.cdc.device.example.stk600_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega384c3", "mcus": ["atxmega384c3"], "name": "USB Device HID Keyboard for ATxmega384c3 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.usb.class.hid.device.keyboard.example.stk600_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega384c3", "mcus": ["atxmega384c3"], "name": "USB Device HID Mouse for ATxmega384c3 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.usb.class.hid.device.mouse.example.stk600_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-C3 Xplained"], "category": ["Communication", "Touch", "USB"], "description": "Implements a USB Device HID Mouse using the mXT143E Xplained top module as a touch-enabled trackpad. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.components.touch.mxt.example_hid.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "USB Device HID Mouse for XMEGA-C3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.components.touch.mxt.example_hid.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega384c3", "mcus": ["atxmega384c3"], "name": "USB Device HID Mouse unit tests for ATxmega384C3 on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegac": "common.services.usb.class.hid.device.mouse.unit_tests.stk600_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.stk600_atxmega384c3", "mcus": ["atxmega384c3"], "name": "USB Device Mass Storage for ATxmega384c3 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.usb.class.msc.device.example.stk600_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "USB Device Mass Storage for XMEGA-C3 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.usb.class.msc.device.example.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.stk600_atxmega384c", "mcus": ["atxmega384c3"], "name": "USB Device Mass Storage unit tests for ATxmega384C3 on STK600", "quickstart": {}, "type": "unit-test", "uri": {"xmegac": "common.services.usb.class.msc.device.unit_tests.stk600_atxmega384c/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.stk600_atxmega384c3", "mcus": ["atxmega384c3"], "name": "USB Device Vendor Class example for ATxmega384c3 on STK600", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.usb.class.vendor.device.example.stk600_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.stk600-rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "WDT Example for ATxmega384C3 on STK600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.wdt.example.stk600-rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, showing a collection of icon widgets, allowing the user to navigate between the icons and select them using both direct touch and soft button widgets.", "id": "common.services.wtk.example2.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Widget library example 2 for the XMEGA-C3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.wtk.example2.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, demonstrating the plot widget, allowing the user to add new plot points to be graphed using a pair of slider and button widgets.", "id": "common.services.wtk.example3.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Widget library example 3 for the XMEGA-C3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.wtk.example3.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "Widget library example for the XMEGA-C3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.wtk.example1.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-C3 Xplained"], "category": ["Graphics", "Touch"], "description": "Training skeleton code for the application note \"AVR1614: Widget ToolKit - Getting Started\".", "id": "common.services.wtk.training.xmega_c3_xplained", "mcus": ["atxmega384c3"], "name": "WTK training project for XMEGA-C3 XPLAINED", "quickstart": {}, "type": "application", "uri": {"xmegac": "common.services.wtk.training.xmega_c3_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator. A single block is encrypted and decrypted.", "id": "xmega.drivers.aes.example1.stk600_rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "XMEGA AES example1 for ATxmega384C3 on STK600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.aes.example1.stk600_rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Cryptography"], "description": "Use the XMEGA built-in AES accelerator with interrupts. A single block is encrypted and decrypted using interrupts to control the process flow.", "id": "xmega.drivers.aes.example2.stk600_rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "XMEGA AES example2 for ATxmega384C3 on STK600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.aes.example2.stk600_rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.stk600-rc064x_atxmega384c3", "mcus": ["atxmega384c3"], "name": "XMEGA USART Example for stk600-rc064x", "quickstart": {}, "type": "application", "uri": {"xmegac": "xmega.drivers.usart.example.stk600-rc064x_atxmega384c3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Interrupt-based 12-bit ADC conversion using the internal 1 V voltage reference. Channel 0 of the ADC is configured for single-ended measurements from the internal temperature sensor.", "id": "xmega.drivers.adc.example1.xmega192d3_stk600", "mcus": ["atxmega192d3"], "name": "ADC Internal temperature sensor example for atxmega192d3 on stk600 ", "quickstart": {}, "type": "application", "uri": {"xmegad": "xmega.drivers.adc.example1.xmega192d3_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to read the device and the production signatures and output them on LEDs.", "id": "xmega.drivers.nvm.example1.stk600-rc044x_atxmega32d4", "mcus": ["atxmega32d4"], "name": "Drivers NVM Example 1 for stk600-rc044x", "quickstart": {}, "type": "application", "uri": {"xmegad": "xmega.drivers.nvm.example1.stk600-rc044x_atxmega32d4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Timers"], "description": "Use the XMEGA RTC module : initialization, use the LEDs to show the last two digits from time in binary coded decimal (BCD) and then reschedules the alarm in 1 second.", "id": "xmega.drivers.rtc.example.stk600-rc044x_atxmega32d4", "mcus": ["atxmega32d4"], "name": "Drivers RTC Example for ATxmega32D4", "quickstart": {}, "type": "application", "uri": {"xmegad": "xmega.drivers.rtc.example.stk600-rc044x_atxmega32d4/html/index.html"}}, {"appnote": [], "asf_type": "boards", "boards": [], "category": ["Sensors"], "description": "ATAVRSBINA1 Sensors Xplained extension board definitions and runtime initialization support.", "id": "board.sensors_xplained.inertial_a1", "mcus": ["xmega", "uc3"], "name": "Sensors - ATAVRSBINA1 Sensor Board", "quickstart": {}, "type": "module", "uri": {"xmegad": "xmegad/html/group__group__common__boards__sensors__xplained.html", "xmegae": "xmegae/html/group__group__common__boards__sensors__xplained.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter module : configures one TC module in normal mode and uses three TC interrupts (overflow, Capture/Compare Channels A and B).", "id": "xmega.drivers.tc.example1.stk600-rc044x_atxmega32d4", "mcus": ["atxmega32d4"], "name": "TC Example 1 for stk600-rc044x", "quickstart": {}, "type": "application", "uri": {"xmegad": "xmega.drivers.tc.example1.stk600-rc044x_atxmega32d4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "", "id": "xmega.drivers.twi#master", "mcus": ["xmegaa", "xmegaau", "xmegab", "xmegac", "xmegad", "xmegae"], "name": "TWI - Two-wire Master Interface", "quickstart": {"xmegad": ["xmegad/html/xmega_twi_quickstart.html"], "xmegae": ["xmegae/html/xmega_twi_quickstart.html"]}, "type": "module", "uri": {"xmegad": "xmegad/html/group__group__xmega__drivers__twi.html", "xmegae": "xmegae/html/group__group__xmega__drivers__twi.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Interrupt-based analog comparison in window mode. Compare the input value from PIN1 (PB1) with the bandgap voltage as lower reference and a scaled VCC as upper reference.", "id": "xmega.drivers.ac.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "AC Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.ac.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Interrupt-based analog comparison in window mode. Compare the input value from PIN1 (PB1) with the bandgap voltage as lower reference and a scaled VCC as upper reference.", "id": "xmega.drivers.ac.example3.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "AC Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.ac.example3.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "xmega.drivers.adc#2", "mcus": ["xmegae"], "name": "ADC - XMEGA E Implementation", "quickstart": {"xmegae": ["xmegae/html/adc_quickstart.html"]}, "type": "module", "uri": {"xmegae": "xmegae/html/group__adc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "How to use the XMEGA E ADC together with both hardware calibration (offset and gain) and hardware averaging features from XMEGA E ADC. The DAC output is used on ADC input.", "id": "xmega.drivers.adc.example8.xmega32e5_stk600", "mcus": ["atxmega32e5"], "name": "ADC Averaging and oversampling example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example8.xmega32e5_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Analog Conversion"], "description": "How to use the XMEGA E ADC together with both hardware calibration (offset and gain) and hardware averaging features from XMEGA E ADC. The DAC output is used on ADC input.", "id": "xmega.drivers.adc.example8.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "ADC Averaging and oversampling example for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example8.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "12-bit intenal temperature sensor measurement with 1024 hardware averaged samples using XMEGA E ADC.", "id": "xmega.drivers.adc.example6.xmega32e5_stk600", "mcus": ["atxmega32e5"], "name": "ADC Averaging example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example6.xmega32e5_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Analog Conversion"], "description": "12-bit intenal temperature sensor measurement with 1024 hardware averaged samples using XMEGA E ADC.", "id": "xmega.drivers.adc.example6.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "ADC Averaging example for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example6.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Offset and gain calibration of XMEGA E ADC with an external voltage supply as reference input voltage.", "id": "xmega.drivers.adc.example4.xmega32e5_stk600", "mcus": ["atxmega32e5"], "name": "ADC Calibration example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example4.xmega32e5_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Analog Conversion"], "description": "Offset and gain calibration of XMEGA E ADC with an external voltage supply as reference input voltage.", "id": "xmega.drivers.adc.example4.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "ADC Calibration example for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example4.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "This example demonstrates an offset and gain calibration method for XMEGA E ADC using hardware compensation. The DAC output is used on ADC input.", "id": "xmega.drivers.adc.example5.xmega32e5_stk600", "mcus": ["atxmega32e5"], "name": "ADC Calibration example with DAC for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example5.xmega32e5_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Analog Conversion"], "description": "This example demonstrates an offset and gain calibration method for XMEGA E ADC using hardware compensation. The DAC output is used on ADC input.", "id": "xmega.drivers.adc.example5.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "ADC Calibration example with DAC for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example5.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Interrupt-based 12-bit ADC conversion using the internal 1 V voltage reference. Channel 0 of the ADC is configured for single-ended measurements from the internal temperature sensor.", "id": "xmega.drivers.adc.example1.xmega32e5_stk600", "mcus": ["atxmega32e5"], "name": "ADC Internal temperature sensor example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example1.xmega32e5_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Analog Conversion"], "description": "Interrupt-based 12-bit ADC conversion using the internal 1 V voltage reference. Channel 0 of the ADC is configured for single-ended measurements from the internal temperature sensor.", "id": "xmega.drivers.adc.example1.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "ADC Internal temperature sensor example for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example1.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Increasing the 12-bit resolution with the hardware oversampling feature of XMEGA E ADC. The DAC is used to generate an ADC input voltage with a periodic signal.", "id": "xmega.drivers.adc.example7.xmega32e5_stk600", "mcus": ["atxmega32e5"], "name": "ADC Oversampling example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example7.xmega32e5_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Analog Conversion"], "description": "Increasing the 12-bit resolution with the hardware oversampling feature of XMEGA E ADC. The DAC is used to generate an ADC input voltage with a periodic signal.", "id": "xmega.drivers.adc.example7.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "ADC Oversampling example for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.adc.example7.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Unit tests for the XMEGA E ADC driver using the on-chip DAC module.", "id": "xmega.drivers.adc.unit_tests2.xmega32e5_stk600", "mcus": ["atxmega32e5"], "name": "ADC unit tests for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.adc.unit_tests2.xmega32e5_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Analog Conversion"], "description": "Unit tests for the XMEGA E ADC driver using the on-chip DAC module.", "id": "xmega.drivers.adc.unit_tests2.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "ADC unit tests for XMEGA-E5 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.adc.unit_tests2.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Common API for Chip Reset Cause Access / Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.services.basic.cpu.example.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on ATxmega32E5.", "id": "common.services.basic.sleepmgr.example.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Common API for Sleep Management / Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.services.basic.sleepmgr.example.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Example that reads button 0 (PF0) and outputs it on LED0 (PE0).", "id": "common.services.ioport.example1.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Common IOPORT service example 1 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.services.ioport.example1.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Example that reads button 0 (PF0) and outputs it on LED0 (PE0).", "id": "common.services.ioport.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Common IOPORT service example 2 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.services.ioport.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Example that reads button 0 (PF0) and outputs it on LED0 (PE0).", "id": "common.services.ioport.example3.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Common IOPORT service example 3 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.services.ioport.example3.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Generates a sine wave using the XMEGA DAC module.", "id": "xmega.drivers.dac.example1.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "DAC Example 1 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.dac.example1.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "Use the XMEGA DAC for dual-channel output with automatic refresh.", "id": "xmega.drivers.dac.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "DAC Example 2 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.dac.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-E5 Xplained"], "category": [], "description": "XMEGA-E5 Xplained demonstration firmware which uses LEDs, switchs, OLED display, light sensor, RTC oscillator, Quadrature Decoder... Refer to related application note.", "id": "xmega.applications.xmega_e5_xplained_demo.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "Demo for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.applications.xmega_e5_xplained_demo.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to read the device and the production signatures and output them on LEDs.", "id": "xmega.drivers.nvm.example1.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Drivers NVM Example 1 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.nvm.example1.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to EEPROM memory : erase, write, read access and output status on LEDs.", "id": "xmega.drivers.nvm.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Drivers NVM Example 2 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.nvm.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to FLASH memory : erase, write, read access to application table and boot sections and output status on LEDs.", "id": "xmega.drivers.nvm.example3.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Drivers NVM Example 3 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.nvm.example3.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the XMEGA NVM to get access to fuse and lock bits memory : read FUSEBYTE2, read and write lock bits.", "id": "xmega.drivers.nvm.example4.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Drivers NVM Example 4 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.nvm.example4.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Interrupt"], "description": "Use the XMEGA PMIC to define Interrupt Service Routines (ISRs), to enable globally interrupts or individual interrupt levels, to demonstrate interruptability of lower interrupt levels.", "id": "xmega.drivers.pmic.example.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Drivers PMIC Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.pmic.example.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Timers"], "description": "Use the XMEGA RTC module : initialization, use the LEDs to show the last two digits from time in binary coded decimal (BCD) and then reschedules the alarm in 1 second.", "id": "xmega.drivers.rtc.example.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Drivers RTC Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.rtc.example.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller"], "description": "Driver for the Direct Enhanced Memory Access (EDMA) controller. It provides functions for configuring and using the EDMA controller. The EDMA controller can transfer data between memories and peripherals with minimal CPU intervention.", "id": "xmega.drivers.edma", "mcus": ["xmegae"], "name": "EDMA - Enhanced Direct Memory Access", "quickstart": {"xmegae": ["xmegae/html/xmega_edma_quickstart.html"]}, "type": "module", "uri": {"xmegae": "xmegae/html/group__edma__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["DMA Controller"], "description": "Start a EDMA transfer between two internal memory areas and upon completion verifies this by comparing those areas.", "id": "xmega.drivers.edma.example_1.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "EDMA Example 1 for XMEGA E5-Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.edma.example_1.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["DMA Controller"], "description": "Start a partiel EDMA transfer between two internal memory areas via USART and upon completion verifies this by comparing those areas.", "id": "xmega.drivers.edma.example_2.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "EDMA Example 2 for XMEGA E5-Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.edma.example_2.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["DMA Controller"], "description": "Perform a range of test on the EDMA module.", "id": "xmega.drivers.edma.unit_tests.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "EDMA unit tests for XMEGA E5 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.edma.unit_tests.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "An example application using both CRC-16 and CRC-32 using the I/O interface.", "id": "xmega.drivers.crc.example1.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Example1 for CRC driver for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.crc.example1.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "Provides a simple LED Chaser application with defined timing interval in ms between each LED.", "id": "common.applications.led_chaser.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "LED Chaser Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.applications.led_chaser.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["XMEGA-E5 Xplained"], "category": [], "description": "Provides a simple LED Chaser application with defined timing interval in ms between each LED.", "id": "common.applications.led_chaser.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "LED Chaser Example for XMEGA-E5 Xplained with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.applications.led_chaser.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["XMEGA-E5 Xplained"], "category": ["Graphics"], "description": "Monochrome graphic library graphic primitives example. Draw graphics shapes to a connected LCD display or framebuffer", "id": "common.services.gfx_mono.example1.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "Monochrome graphic library example for XMEGA E5-Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.services.gfx_mono.example1.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "xmega.drivers.qdec#1", "mcus": ["xmegae"], "name": "Quadrature Decoder - XMEGA E Implementation", "quickstart": {"xmegae": ["xmegae/html/xmega_qdec_quickstart.html"]}, "type": "module", "uri": {"xmegae": "xmegae/html/group__qdec__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Peripheral Event System", "Timers"], "description": "XMEGA Quadrature decoder example application shows how to use quadrature decoder driver, detects position and scolling frequency.", "id": "xmega.drivers.qdec.example1.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "Quadrature Decoder Example 1 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.qdec.example1.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Peripheral Event System", "Timers"], "description": "XMEGA Quadrature decoder example application shows how to use quadrature decoder driver, detects position and scolling frequency. This example uses a internal generator of quadrature encoder.", "id": "xmega.drivers.qdec.example2.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "Quadrature Decoder Example 2 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.qdec.example2.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Peripheral Event System", "Timers"], "description": "Unit tests for the XMEGA QDEC driver.", "id": "xmega.drivers.qdec.unit_tests.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "Quadrature Decoder unit tests for XMEGA-E5 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.qdec.unit_tests.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["STK600"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USART.", "id": "common.utils.stdio.stdio_serial.example.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Serial Standard I/O Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.utils.stdio.stdio_serial.example.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["XMEGA-E5 Xplained"], "category": [], "description": "A simple example for verifying that the SSD1306 low level driver works.", "id": "common.components.display.ssd1306.example.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "SSD1306 OLED Controller example for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "common.components.display.ssd1306.example.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "Driver for the Timer/Counters type 4 or 5 (TC4/5). Provides functions for configuring and using the 16-bit TC4/5.", "id": "xmega.drivers.tc45", "mcus": ["xmegae"], "name": "TC4/5 - Timer Counter type 4 /5", "quickstart": {"xmegae": ["xmegae/html/xmega_tc45_quickstart.html"]}, "type": "module", "uri": {"xmegae": "xmegae/html/group__tc45__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Timers"], "description": "Timeout service example 1. This example demonstrates how to use the periodic timeout feature to toggle two LED's with different frequency.", "id": "xmega.services.timeout.example1.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Timeout example 1 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.services.timeout.example1.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Timers"], "description": "This example shows how to use the \\ref tc_timeout_group to implement a software debounce filter on a button input.", "id": "xmega.services.timeout.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "Timeout example 2 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.services.timeout.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Unit tests for the XMEGA TWI (bridge mode).", "id": "xmega.drivers.twi.unit_tests2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "TWI unit tests on Xplain", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.twi.unit_tests2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "", "id": "xmega.drivers.usart#1", "mcus": ["xmegae"], "name": "USART - Universal Synchronous/Asynchronous Receiver/Transmitter", "quickstart": {"xmegae": ["xmegae/html/xmega_usart_quickstart.html"]}, "type": "module", "uri": {"xmegae": "xmegae/html/group__usart__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the XMEGA WDT module : enables the WDT in both modes, standard and window, and tests all WDT features. Uses the LEDs to show WDT status.", "id": "xmega.drivers.wdt.example.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "WDT Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.wdt.example.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "Driver for the XMEGA Configurable Logic (XCL). Provides functions for configuring and using the XCL.", "id": "xmega.drivers.xcl", "mcus": ["xmegae"], "name": "XCL - XMEGA Configurable Logic", "quickstart": {"xmegae": ["xmegae/html/xmega_xcl_quickstart.html"]}, "type": "module", "uri": {"xmegae": "xmegae/html/group__xcl__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "", "id": "xmega.drivers.nvm.unit_tests.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA NVM unit tests for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.nvm.unit_tests.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter 45 module : configures one TC45 module in normal mode and uses three TC45 interrupts (overflow, Capture/Compare Channels A and B).", "id": "xmega.drivers.tc45.example1.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA TC45 Example1 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.tc45.example1.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Timers"], "description": "Use the XMEGA Timer Counter 45 module : configures one TC45 module in normal mode and uses three TC45 interrupts (overflow, Capture/Compare Channels A and B).", "id": "xmega.drivers.tc45.example1.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA TC45 Example1 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.tc45.example1.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Use the XMEGA TC45 Timer Counter module : uses and configures two TC45 modules. One is configured to generate single slope PWM on LED0. One is used in generate a 50ms overflow interrupt.", "id": "xmega.drivers.tc45.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA TC45 Example2 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.tc45.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Timers"], "description": "Use the XMEGA TC45 Timer Counter module : uses and configures two TC45 modules. One is configured to generate single slope PWM on LED0. One is used in generate a 50ms overflow interrupt.", "id": "xmega.drivers.tc45.example2.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA TC45 Example2 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.tc45.example2.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Use the XMEGA TC45 Timer Counter module : Dimming the duty-cycle of the two signals in an opposite way. Configures the Timer E0 (TCE0) in waveform  generator mode. AWex is used to output PWM signals from Compare modules CCA and CCB. These complementary signals are output on Port E0 and E1.", "id": "xmega.drivers.tc45.example3.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA TC45 Example3 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.tc45.example3.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Use the XMEGA TC45 Timer Counter module : Capture example Enable one TC45 for frequency capture and measure the time between press and release of button. Display the result on leds.", "id": "xmega.drivers.tc45.example4.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA TC45 Example4 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.tc45.example4.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Use the XMEGA TC45 Timer Counter module : TC4 and TC5 are configured in Waveform generator mode and WeX is used to output PWM signals from Compare modules CCA and CCB  of both timers. These signals are switched on the differnent PORTC pins according to Output Matix modes. The OTMX modes are changed with SW0 pushbutton.", "id": "xmega.drivers.tc45.example5.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA TC45 Example5 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.tc45.example5.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA frame detection in sleep standby mode for XMEGA E. The example waits for a received character on the configured USART and echoes the character back to the same USART. When waiting for a character, the cpu core enters standby mode and is wake up using the start frame detection on USART. Using the internal 8MHz Oscilator of XMEGA E, the wakeup character is not lost.", "id": "xmega.drivers.usart.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 2 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA frame detection in sleep standby mode for XMEGA E. The example waits for a received character on the configured USART and echoes the character back to the same USART. When waiting for a character, the cpu core enters standby mode and is wake up using the start frame detection on USART. Using the internal 8MHz Oscilator of XMEGA E, the wakeup character is not lost.", "id": "xmega.drivers.usart.example2.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 2 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example2.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA E USART in one wire mode.", "id": "xmega.drivers.usart.example3.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 3 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example3.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA E USART in one wire mode.", "id": "xmega.drivers.usart.example3.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 3 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example3.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA E USART with XCL module to generate USART variable frame lenght communication.", "id": "xmega.drivers.usart.example4.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 4 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example4.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA E USART with XCL module to generate USART variable frame lenght communication.", "id": "xmega.drivers.usart.example4.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 4 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example4.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA E USART with XCL LUT sub-module to encode/decode exchanged data.", "id": "xmega.drivers.usart.example5.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 5 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example5.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Communication"], "description": "The example demonstrates how to use the XMEGA E USART with XCL LUT sub-module to encode/decode exchanged data.", "id": "xmega.drivers.usart.example5.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example 5 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example5.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Communication"], "description": "Use the XMEGA USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "xmega.drivers.usart.example.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA USART Example for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.usart.example.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "This example illustrates how to configure an XCL LUT to perform a logic XOR between two input pins and outputs the result on a third pin used to drive an LED.", "id": "xmega.drivers.xcl.example1.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA XCL Example1 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.xcl.example1.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Timers"], "description": "This example illustrates how to configure an XCL LUT to perform a logic XOR between two input pins and outputs the result on a third pin used to drive an LED.", "id": "xmega.drivers.xcl.example1.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA XCL Example1 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.xcl.example1.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "This example demonstrate how to configure the XCL and its timer in 16bit timer mode. The example also illustrates how to use the XCL Timer related underflow interrupt.", "id": "xmega.drivers.xcl.example2.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA XCL Example2 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.xcl.example2.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": ["Timers"], "description": "This example demonstrate how to configure the XCL and its timer in 16bit timer mode. The example also illustrates how to use the XCL Timer related underflow interrupt.", "id": "xmega.drivers.xcl.example2.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA XCL Example2 for XMEGA-E5 Xplained", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.xcl.example2.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "This example demonstrates how to use the XCL to use both 2 combinationnal LUT together with the two 8bits timers. The examples configures the timer in two 8bits seperate timers generating PWM output on CC0 and CC1. Those PWM outputs are used as LUT input and the XOR function of both PWM is output on LUT output.", "id": "xmega.drivers.xcl.example3.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA XCL Example3 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.xcl.example3.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "This example illustrates how to configure the two XCL LUT in a 3 input LUT to perform a logic OR between three input pins and outputs the result on a fourth pin used to drive an LED.", "id": "xmega.drivers.xcl.example4.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA XCL Example4 for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "application", "uri": {"xmegae": "xmega.drivers.xcl.example4.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Unit tests for the XMEGA E XCL module.", "id": "xmega.drivers.xcl.unit_tests.stk600-rc032x_atxmega32e5", "mcus": ["atxmega32e5"], "name": "XMEGA XCL unittest for stk600-rc032x with ATxmega32E5", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.xcl.unit_tests.stk600-rc032x_atxmega32e5/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["XMEGA-E5 Xplained"], "category": [], "description": "Unit tests for the XMEGA E XCL module.", "id": "xmega.drivers.xcl.unit_tests.xmega_e5_xplained", "mcus": ["atxmega32e5"], "name": "XMEGA XCL unittest for XMEGA-E5 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"xmegae": "xmega.drivers.xcl.unit_tests.xmega_e5_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "ADC driver for the megaAVR devices", "id": "mega.drivers.adc#3", "mcus": ["atmega16", "megaxx4a", "megarf", "megaxx0_1", "megax8"], "name": "ADC - Analog to Digital Converter", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__mega__adc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega1284P ADC example 1", "id": "mega.drivers.adc.example1.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "ADC example 1 for the ATmega1284P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example1.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega128RFA1 ADC example 1", "id": "mega.drivers.adc.example1.mega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "ADC example 1 for the ATmega128RFA1", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example1.mega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega168A ADC example 1", "id": "mega.drivers.adc.example1.mega168a_stk600", "mcus": ["atmega168a"], "name": "ADC example 1 for the ATmega168A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example1.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega2560 ADC example 1", "id": "mega.drivers.adc.example1.mega2560_stk600", "mcus": ["atmega2560"], "name": "ADC example 1 for the ATmega2560", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example1.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega48A ADC example 2", "id": "mega.drivers.adc.example2.mega48a_stk600", "mcus": ["atmega48a"], "name": "ADC example 1 for the ATmega48A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example2.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega48A ADC example 1", "id": "mega.drivers.adc.example1.mega48a_stk600", "mcus": ["atmega48a"], "name": "ADC example 1 for the ATmega48A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example1.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega88A ADC example 1", "id": "mega.drivers.adc.example1.mega88a_stk600", "mcus": ["atmega88a"], "name": "ADC example 1 for the ATmega88A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example1.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega1284P ADC example 2", "id": "mega.drivers.adc.example2.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "ADC example 2 for the ATmega1284P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example2.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega128RFA1 ADC example 2", "id": "mega.drivers.adc.example2.mega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "ADC example 2 for the ATmega128RFA1", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example2.mega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega168A ADC example 2", "id": "mega.drivers.adc.example2.mega168a_stk600", "mcus": ["atmega168a"], "name": "ADC example 2 for the ATmega168A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example2.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega2560 ADC example 2", "id": "mega.drivers.adc.example2.mega2560_stk600", "mcus": ["atmega2560"], "name": "ADC example 2 for the ATmega2560", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example2.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega88A ADC example 2", "id": "mega.drivers.adc.example2.mega88a_stk600", "mcus": ["atmega88a"], "name": "ADC example 2 for the ATmega88A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example2.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega1284P ADC example 3", "id": "mega.drivers.adc.example3.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "ADC example 3 for the ATmega1284P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example3.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega128RFA1 ADC example 3", "id": "mega.drivers.adc.example3.mega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "ADC example 3 for the ATmega128RFA1", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example3.mega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega168A ADC example 3", "id": "mega.drivers.adc.example3.mega168a_stk600", "mcus": ["atmega168a"], "name": "ADC example 3 for the ATmega168A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example3.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega2560 ADC example 3", "id": "mega.drivers.adc.example3.mega2560_stk600", "mcus": ["atmega2560"], "name": "ADC example 3 for the ATmega2560", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example3.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega48A ADC example 3", "id": "mega.drivers.adc.example3.mega48a_stk600", "mcus": ["atmega48a"], "name": "ADC example 3 for the ATmega48A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example3.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Analog Conversion"], "description": "ATmega88A ADC example 3", "id": "mega.drivers.adc.example3.mega88a_stk600", "mcus": ["atmega88a"], "name": "ADC example 3 for the ATmega88A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.adc.example3.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["STK600"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USART.", "id": "common.utils.stdio.stdio_serial.atmega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "atmega128rfa1_stk600 Serial Standard I/O Example", "quickstart": {}, "type": "application", "uri": {"mega": "common.utils.stdio.stdio_serial.atmega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "ATMegaRFA1 Transceiver Abstraction Layer", "id": "config.thirdparty.wireless.avr2025_mac.source.tal#3", "mcus": ["atmega128rfa1"], "name": "atmegarfa1 tal support enabled", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__tal__rfa1.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "ATMegaRFR2 Transceiver Abstraction Layer", "id": "config.thirdparty.wireless.avr2025_mac.source.tal.atmegarfr2", "mcus": ["atmega256rfr2", "atmega2564rfr2", "atmega128rfa1"], "name": "atmegarfr2 tal support enabled", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__tal__rfr2.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Touch"], "description": "The pre-compiled QTouch Library, common and include files for AVR 8-bit devices. For more information on the QTouch Library, goto www.atmel.com/qtouchlib. For support queries, email touch@atmel.com.", "id": "config.common.services.qtouch.generic.avr8.mega128rfa1_stk600.method#qmatrix_method", "mcus": ["atmega128rfa1"], "name": "Atmel QTouch Library 5.0 - MEGA128RFA1 - STK600", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__common__services__qtouch.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega1284P STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "AVR libc setbaud utility example for the ATmega1284P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega168A STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega168a_stk600", "mcus": ["atmega168a"], "name": "AVR libc setbaud utility example for the ATmega168A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega2560 STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega2560_stk600", "mcus": ["atmega2560"], "name": "AVR libc setbaud utility example for the ATmega2560", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega324A STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega324a_stk600", "mcus": ["atmega324a"], "name": "AVR libc setbaud utility example for the ATmega324A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega324a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega328 STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega328_stk600", "mcus": ["atmega328"], "name": "AVR libc setbaud utility example for the ATmega328", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega328_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega48A STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega48a_stk600", "mcus": ["atmega48a"], "name": "AVR libc setbaud utility example for the ATmega48A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega640 STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega640_stk600", "mcus": ["atmega640"], "name": "AVR libc setbaud utility example for the ATmega640", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega640_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega644A STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega644a_stk600", "mcus": ["atmega644a"], "name": "AVR libc setbaud utility example for the ATmega644A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega644a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "ATmega88A STK600 avr libc setbaud utility demo application", "id": "mega.applications.mega_setbaud_example.mega88a_stk600", "mcus": ["atmega88a"], "name": "AVR libc setbaud utility example for the ATmega88A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_setbaud_example.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Wireless", "Communication"], "description": "ZRC target library for MEGA256RFR2 controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.zrc.tgt#2", "mcus": ["atmega256rfr2", "atsamr21g18a", "atsam4lc4c", "atxmega256a3u", "atxmega256a3bu", "at32uc3a3256s"], "name": "AVR2102-ZRC LIB For atmega256rfr2 Target", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__rf4control.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["User Board template"], "category": ["Touch", "Wireless"], "description": "The pre-compiled QTouch Library, common and include files for AVR 8-bit devices. For more information on the QTouch Library, goto www.atmel.com/qtouchlib. For support queries, email touch@atmel.com.", "id": "thirdparty.services.atmel_rf4ce.examples.avr477_remote.project", "mcus": ["atmega128rfa1"], "name": "AVR477 Remote Example", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.services.atmel_rf4ce.examples.avr477_remote.project/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["User Board template"], "category": ["Wireless"], "description": "The RF4CE package can be found at www.atmel.com/RF4CE.", "id": "thirdparty.services.atmel_rf4ce.examples.avr477_target.project", "mcus": ["atmega128rfa1"], "name": "AVR477 Target Example", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.services.atmel_rf4ce.examples.avr477_target.project/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega1284P STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "Clock example for the ATmega1284P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega168A STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega168a_stk600", "mcus": ["atmega168a"], "name": "Clock example for the ATmega168A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega2560 STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega2560_stk600", "mcus": ["atmega2560"], "name": "Clock example for the ATmega2560", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega324A STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega324a_stk600", "mcus": ["atmega324a"], "name": "Clock example for the ATmega324A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega324a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega328 STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega328_stk600", "mcus": ["atmega328"], "name": "Clock example for the ATmega328", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega328_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega48A STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega48a_stk600", "mcus": ["atmega48a"], "name": "Clock example for the ATmega48A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega640 STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega640_stk600", "mcus": ["atmega640"], "name": "Clock example for the ATmega640", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega640_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega644A STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega644a_stk600", "mcus": ["atmega644a"], "name": "Clock example for the ATmega644A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega644a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Clocks"], "description": "ATmega88A STK600 libc delay demo application", "id": "mega.applications.mega_clock_example.mega88a_stk600", "mcus": ["atmega88a"], "name": "Clock example for the ATmega88A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_clock_example.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Clocks"], "description": "Initialize the system clock and Should toggle one pin on the megaRF port B LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Common API for Clocks Control / Example 1 for ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.clock.example1.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Initialize the system clock and Should toggle one pin on the megaRF port B LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.atmega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "Common API for Clocks Control / Example 1 for MEGA RF", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.clock.example1.atmega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "Common API for Controlling a TWI Module / Master Mode Example for megaRF STK600", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.twi.master.example.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on Atmega128RFA1 devices.", "id": "common.services.basic.sleepmgr.example.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "Common API for Sleep Management / Example for ATmega128RFA1-EK1", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.sleepmgr.example.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on Atmega256RFR2 devices.", "id": "common.services.basic.sleepmgr.example.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Common API for Sleep Management / Example for ATmega256RFR2_XPLAINED_PRO kit", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.sleepmgr.example.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Should toggle one pin on the megaRF port B", "id": "common.services.ioport.example1.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Common IOPORT service example 1 for ATmega256RFR2 Xplained pro", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.ioport.example1.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Should toggle one pin on the megaRF port B", "id": "common.services.ioport.example1.atmega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "Common IOPORT service example 1 for stk600", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.ioport.example1.atmega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Should toggle one pin on the megarf onboard green Led.", "id": "common.services.ioport.example2.atmega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "Common IOPORT service example 2 for ATmega128RFA1-STK600", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.ioport.example2.atmega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Should toggle one pin on the megarf onboard green Led.", "id": "common.services.ioport.example2.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Common IOPORT service example 2 for ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.ioport.example2.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Example that reads button 8  (PE5) and outputs it on LED_GREEN_GPIO (PE2).", "id": "common.services.ioport.example3.atmega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "Common IOPORT service example 3 for ATmega128RFA1-STK600", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.ioport.example3.atmega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Example that reads button 8  (PE5) and outputs it on LED_GREEN_GPIO (PE2).", "id": "common.services.ioport.example3.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Common IOPORT service example 3 for ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.ioport.example3.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["CPU"], "description": "Driver for CPU specific features. It provides functions for writing the CCP (Configuration Change Protection) register according to the timed sequence in the AVR XMEGA manual. Functions for getting the system reset cause and to do a soft reset of the microcontroller are also provided.", "id": "mega.drivers.cpu", "mcus": ["mega"], "name": "CPU specific features", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__mega__rf__reset__cause__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "Loop based delay routines. Provides microseconds, milliseconds and second delays. Common API for SAM, UC3, MEGA and XMEGA.", "id": "common.services.delay#mega", "mcus": ["mega"], "name": "Delay routines", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__common__services__delay.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Interrupt"], "description": "External interrupt through interrupt PIN for megaRF", "id": "mega.drivers.ext_int.example1.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "External Interrupt Example for ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.ext_int.example1.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Interrupt"], "description": "External interrupt through interrupt PIN for megaRF", "id": "mega.drivers.ext_int.example1.atmegarf_stk600", "mcus": ["atmega128rfa1"], "name": "External Interrupt Example for megaRF STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.ext_int.example1.atmegarf_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Interrupt"], "description": "Nested External interrupt for megaRF Usage", "id": "mega.drivers.ext_int.example2.atmegarf_stk600", "mcus": ["atmega128rfa1"], "name": "External Interrupt Example2 for megaRF STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.ext_int.example2.atmegarf_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Interrupt"], "description": "External Interrupt Driver implementation for megaRF", "id": "mega.drivers.ext_int", "mcus": ["megarf"], "name": "External Interrupt for megaRF", "quickstart": {"mega": ["mega/html/megarf_interrupt_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__megarf__interrupt__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Unit tests for the MEGARF Ext Interrupt driver.", "id": "mega.drivers.ext_int.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "External Interrupt unit tests on atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.ext_int.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Unit tests for the MEGARF Ext Interrupt driver.", "id": "mega.drivers.ext_int.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "External Interrupt unit tests on atmega256rfr2_atmega256rfr2_xplained_pro", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.ext_int.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["I/O"], "description": "Driver for general purpose I/O pins. Provides functions for initializing IO pins as input or output, and for reading, or setting/clearing/toggling pins. Common API. Deprecated; use common IOPORT service instead.", "id": "common.services.basic.gpio#3", "mcus": ["mega"], "name": "GPIO - General purpose Input/Output", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__gpio__group.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega128 STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega128_stk600", "mcus": ["atmega128"], "name": "GPIO example for the ATmega128", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega128_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega1284p STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "GPIO example for the ATmega1284P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega16 STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega16_stk600", "mcus": ["atmega16"], "name": "GPIO example for the ATmega16", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega16_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega168A STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega168a_stk600", "mcus": ["atmega168a"], "name": "GPIO example for the ATmega168A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega169P STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega169p_stk600", "mcus": ["atmega169p"], "name": "GPIO example for the ATmega169P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega169p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega2560 STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega2560_stk600", "mcus": ["atmega2560"], "name": "GPIO example for the ATmega2560", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega32 STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega32_stk600", "mcus": ["atmega32"], "name": "GPIO example for the ATmega32", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega32_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega324A STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega324a_stk600", "mcus": ["atmega324a"], "name": "GPIO example for the ATmega324A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega324a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega328 STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega328_stk600", "mcus": ["atmega328"], "name": "GPIO example for the ATmega328", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega328_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega329P STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega329p_stk600", "mcus": ["atmega329p"], "name": "GPIO example for the ATmega329P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega329p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega48A STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega48a_stk600", "mcus": ["atmega48a"], "name": "GPIO example for the ATmega48A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega64 STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega64_stk600", "mcus": ["atmega64"], "name": "GPIO example for the ATmega64", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega64_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega640 STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega640_stk600", "mcus": ["atmega640"], "name": "GPIO example for the ATmega640", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega640_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega644A STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega644a_stk600", "mcus": ["atmega644a"], "name": "GPIO example for the ATmega644A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega644a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["I/O"], "description": "ATmega88A STK600 GPIO example", "id": "mega.applications.mega_gpio_example.mega88a_stk600", "mcus": ["atmega88a"], "name": "GPIO example for the ATmega88A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_gpio_example.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["I/O"], "description": "Driver for controlling the I/O lines. Provides functions for configuring, reading and writing direction and level for the general purpose I/O lines. Deprecated; use common IOPORT service instead.", "id": "mega.drivers.ioport", "mcus": ["mega"], "name": "IOPORT - Input/Output Port Controller", "quickstart": {"mega": ["mega/html/ioport_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__ioport__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Unit tests for the MEGARF IOPORT Service.", "id": "common.services.basic.ioport.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "IOPORT service unit tests on atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "common.services.basic.ioport.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Unit tests for the MEGARF IOPORT Service.", "id": "common.services.basic.ioport.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "IOPORT service unit tests on ATMEGA256RFR2 XPLAINED PRO", "quickstart": {}, "type": "unit-test", "uri": {"mega": "common.services.basic.ioport.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atmega128rfa1_rcb", "mcus": ["atmega128rfa1"], "name": "LWMesh-EDDemo Application:ATmega128RFA1 Radio Controller Board", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atmega128rfa1_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atmega256rfr2_rcb", "mcus": ["atmega256rfr2"], "name": "LWMesh-EdDemo Application:ATmega256RFR2 Radio Controller Board", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atmega256rfr2_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh EDDemo application performs periodic Energy measurement on all channels and prints them to the terminal.Only one device is required for this app and no data communication is performed.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "LWMesh-EDDemo Application:ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.eddemo.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atmega128rfa1_rcb", "mcus": ["atmega128rfa1"], "name": "LWMesh-Peer2Peer Application:ATmega128RFA1 Radio Controller Board", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atmega128rfa1_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atmega256rfr2_rcb", "mcus": ["atmega256rfr2"], "name": "LWMesh-Peer2Peer Application:ATmega256RFR2 Radio Controller Board", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atmega256rfr2_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Peer2Peer application performs a Wireless UART functionality using two nodes with preconfigured addresses.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "LWMesh-Peer2Peer Application:ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.peer2peer.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The LWMesh Tester app is designed to be used as a generic network processor and also performs automated testing for the stack.", "id": "thirdparty.wireless.avr2130_lwmesh.apps.tester.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "LWMesh-Tester Application:ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.tester.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atmega128rfa1_rcb", "mcus": ["atmega128rfa1"], "name": "LWMesh-WsnDemo Application:ATmega128RFA1 Radio Controller Board", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atmega128rfa1_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atmega256rfr2_rcb", "mcus": ["atmega256rfr2"], "name": "LWMesh-WsnDemo Application:ATmega256RFR2 Radio Controller Board", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atmega256rfr2_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The WSNDemo application implements a typical wireless sensor network scenario, in which one central node collects the data from a network of sensors and passes this data over a serial connection for further processing. In the case of the WSNDemo this processing is performed by the WSNMonitor PC application", "id": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "LWMesh-WsnDemo Application:ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2130_lwmesh.apps.wsndemo.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Beacon Application Coordinator ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.coord.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "The basic MAC Example Beacon Application deploys a beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Beacon Application Device ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.beacon.dev.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a No beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC No Beacon Application Coordinator ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.coord.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "The basic MAC Example No Beacon Application deploys a no beacon-enabled network with star topology.", "id": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC No Beacon Application Device ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.no_beacon.dev.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface Beacon FFD ATMEGARFR2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atmega256rfr2_zigbit", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface Beacon FFD ATmegarfr2-ATmega256RFR2 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_ffd.ncp.atmega256rfr2_zigbit/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface Beacon RFD ATMEGARFR2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Zigbit"], "category": [], "description": "MAC Serial Interface Application - Beacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atmega256rfr2_zigbit", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface Beacon RFD ATmegarfr2-ATmega256RFR2 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.bcn_rfd.ncp.atmega256rfr2_zigbit/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface NoBeacon FFD ATMEGARFR2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Zigbit"], "category": [], "description": "MAC Serial Interface Application - NoBeacon FFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atmega256rfr2_zigbit", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface NoBeacon FFD ATmegarfr2-ATmega256RFR2 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_ffd.ncp.atmega256rfr2_zigbit/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface NoBeacon RFD ATMEGARFR2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Zigbit"], "category": [], "description": "MAC Serial Interface  Application - NoBeacon RFD", "id": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atmega256rfr2_zigbit", "mcus": ["atmega256rfr2"], "name": "MAC Serial Interface NoBeacon RFD ATmegarfr2-ATmega256RFR2 Zigbit(Carrier)", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.mac.serial_if.nobcn_rfd.ncp.atmega256rfr2_zigbit/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication", "Wireless"], "description": "Driver for the MAC Symbol Counter. Provides functions for configuring and using the 32-bit MAC Symbol Counter in megaRF devices.", "id": "mega.drivers.macsc", "mcus": ["megarf"], "name": "MAC Symbol Counter", "quickstart": {"mega": ["mega/html/megarf_macsc_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__macsc__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication", "Wireless"], "description": "Configure the megaRF MAC Symbol Counter module to generate overflow interrupt,compare matches(1,2,3) and use the back-off slot counter.", "id": "mega.drivers.macsc.example1.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "MAC Symbol Counter Example 1 for ATmega128RFA1 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.macsc.example1.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "Configure the megaRF MAC Symbol Counter module to generate overflow interrupt,compare matches(1,2,3) and use the back-off slot counter.", "id": "mega.drivers.macsc.example1.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Symbol Counter Example 1 for ATmega256RFR2 on Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.macsc.example1.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication", "Wireless"], "description": "Configure the megaRF MAC Symbol Counter module for implementing a scheduled sleep-wakeup scheme using the beacon timestamp register and relative compare modes.", "id": "mega.drivers.macsc.example2.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "MAC Symbol Counter Example 2 for ATmega128RFA1 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.macsc.example2.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "Configure the megaRF MAC Symbol Counter module for implementing a scheduled sleep-wakeup scheme using the beacon timestamp register and relative compare modes.", "id": "mega.drivers.macsc.example2.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MAC Symbol Counter Example 2 for ATmega256RFR2 on Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.macsc.example2.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Test functionality of MAC Symbol Counter", "id": "mega.drivers.macsc.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "MAC Symbol Counter unit tests on atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.macsc.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["MEGA-1284P Xplained"], "category": [], "description": "MEGA-1284P Xplained demo application", "id": "mega.applications.mega_1284p_xplained.example", "mcus": ["atmega1284p"], "name": "MEGA-128P Xplained example", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_1284p_xplained.example/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the MEGARF SPI module : initialization of SPI in slave mode, waits for data from USART SPI master and tranfers data to master.", "id": "mega.drivers.spi.example.stk600-rc128x_rfx_atmega128rfa1", "mcus": ["atmega128rfa1"], "name": "MEGARF SPI as Slave Example for stk600-rc044x", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.spi.example.stk600-rc128x_rfx_atmega128rfa1/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication"], "description": "Use the MEGARF USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "mega.drivers.usart.example.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MEGARF USART Example for Atmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.usart.example.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the MEGARF USART module : initialization, waits for a received character and echoes the character back to the same USART.", "id": "mega.drivers.usart.example.stk600-rc128x_rfx_atmega128rfa1", "mcus": ["atmega128rfa1"], "name": "MEGARF USART Example for stk600-rc044x", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.usart.example.stk600-rc128x_rfx_atmega128rfa1/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the MEGARF WDT module :  enables the WDT in different modes,and tests all WDT features. Uses the LED to show WDT status.", "id": "mega.drivers.wdt.example.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "MEGARF WDT Example for atmega256rfr2_atmega256rfr2_xplained_pro", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.wdt.example.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Interrupt", "Timers"], "description": "Use the MEGARF WDT module :  enables the WDT in different modes,and tests all WDT features. Uses the LED to show WDT status.", "id": "mega.drivers.wdt.example.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "MEGARF WDT Example for stk600-rc128x_rfx_atmega128rfa1", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.wdt.example.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#no_extmem#4", "mcus": ["megarf"], "name": "NVM - Non volatile memory access", "quickstart": {"mega": ["mega/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega128rfa1_rcb", "mcus": ["atmega128rfa1"], "name": "Performance Analyzer Application ATmegarfa1-RF4CE-EK", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega128rfa1_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 RCB Xpro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_rcb_xpro", "mcus": ["atmega256rfr2"], "name": "Performance Analyzer Application ATmegarfr2- RCB256RFR2-XPRO", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_rcb_xpro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Performance Analyzer Application ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Zigbit"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_zigbit", "mcus": ["atmega256rfr2"], "name": "Performance Analyzer Application ATmegarfr2-ATmega256RFR2 Zigbit", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_zigbit/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": [], "description": "A Serial interface based application,which communicates with Wireless Analyzer to demonstrate various features and capabilities of the of Atmel Transceivers.", "id": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_rcb", "mcus": ["atmega256rfr2"], "name": "Performance Analyzer Application ATmegarfr2-ATmega256RFR2-EK", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2025_mac.apps.tal.performance_analyzer.atmega256rfr2_rcb/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["STK600"], "category": ["Touch"], "description": "This QTouch Library Example Application demonstrates usage of the Qmatrix method on STK600-ATMEGA128RFA1-MCU board .", "id": "mega.services.qtouch.generic.avr8.qmatrix.examples.example_qm_mega_stk600.mega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "QMatrix method Example Application - ATMEGA128RFA1", "quickstart": {}, "type": "application", "uri": {"mega": "mega.services.qtouch.generic.avr8.qmatrix.examples.example_qm_mega_stk600.mega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless", "Timers"], "description": "Terminal target application for RF4CE-ZRC target-controller setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "RF4CE -ZRC Terminal target application Atmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zrc.terminal_tgt.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": ["Wireless"], "description": "The pre-compiled ZRC (ZigBee Remote Control Profile based on RF4CE nwk layer) libraries for ATMega128RFA1 based devices. The ZRC profile implements the Remote control functionalities like pairing with Target (like TV, STB) and data exchanges between controller and target. ZRC profile uses the RF4CE nwk layer and IEEE 802.15.4 MAC layer as the base layers. For more information on the RF4CE Libraries, check http://www.atmel.com/tools/RF4CONTROL-ZIGBEERF4CE.aspx", "id": "thirdparty.services.atmel_rf4ce.lib.method#no_method", "mcus": ["atmega128rfa1"], "name": "RF4CE Libraries V1.3.0 for remote and target for megaRF platform", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__common__services__wireless__rf4ce.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless", "Timers"], "description": "The RF4CE network stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "RF4CE Network serial interface ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.nwk.serial_if.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless"], "description": "The RF4CE-ZRC single button controller application where the application and the stack running on the same node", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "RF4CE Single button controller application ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zrc.single_button_ctr.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless", "Timers"], "description": "Terminal ZID application for RF4CE-ZID adaptor-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.terminal.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "RF4CE ZID Terminal Device application - ATMEGA256RFR2_XPLAINED_PRO", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.terminal.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["Unknown Board"], "category": ["Communication", "Wireless", "Timers"], "description": "HID Class Device application for RF4CE-ZID class-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.qt_remote.atmega256rfr2_avr477", "mcus": ["atmega256rfr2"], "name": "RF4CE-ZID Qtouch Remote(Class Device) application ATMEGA256RFR2_AVR477", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.qt_remote.atmega256rfr2_avr477/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmegaRF Radio Controller Board"], "category": ["Communication", "Wireless", "Timers"], "description": "RF4CE ZID HID Class Device application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.key_remote.rcb256rfr2", "mcus": ["atmega256rfr2"], "name": "Rf4CE-ZID Remote(Class Device)application-KEY_REMOTE.RCB256RFR2", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zid.dev.key_remote.rcb256rfr2/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless", "Timers"], "description": "Terminal Adaptor application for RF4CE-ZID adaptor-device setup", "id": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.terminal.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "RF4CE-ZID Terminal Adaptor application-Atmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zid.adptr.terminal.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless", "Timers"], "description": "The RF4CE-ZRC controller stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "RF4CE-ZRC controller serial interface ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.ctr.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless", "Timers"], "description": "The RF4CE-ZRC target stack running on the network co-processor and driven by the host application", "id": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "RF4CE-ZRC target serial interface ATmegarfr2-ATmega256RFR2 Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.avr2102_rf4control.apps.zrc.serial_if.tgt.ncp.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": [], "category": [], "description": "RF4CE network library for MEGA256RFR2 controller", "id": "thirdparty.wireless.avr2102_rf4control.lib.nwk#2", "mcus": ["atmega256rfr2"], "name": "RF4Control NWK Lib for atmega256rfr2", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__rf4control__nwk.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication", "Wireless", "Communication", "Wireless"], "description": "Serial Bridge acts as a bridge for performing serial communication between host and ncp", "id": "thirdparty.wireless.addons.serial_bridge.atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Serial Bridge Application-ATMEGA256RFR2-Xplained Pro", "quickstart": {}, "type": "application", "uri": {"mega": "thirdparty.wireless.addons.serial_bridge.atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.atmega128rfa1_stk600", "mcus": ["atmega128rfa1"], "name": "Shared AVR API for Serial Interfaces / Example for atmega128rfa1_stk600", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.serial.example.atmega128rfa1_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Driver for the sleep controller. Provides functions to configure the sleep mode used, enable and disable sleep functionality, and enter sleep mode. To enter any of the sleep modes the sleep functionality needs to be enabled.", "id": "mega.drivers.sleep", "mcus": ["megarf"], "name": "Sleep Controller driver", "quickstart": {"mega": ["mega/html/mega_sleep_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__sleep__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Power Management"], "description": "The sleep manager provides functions for centralized management of sleep modes. Common API for MEGA RF.", "id": "common.services.basic.sleepmgr#4", "mcus": ["megarf"], "name": "Sleep manager - MEGARF implementation", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__sleepmgr__group.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Unit tests for the MEGARF Ext Interrupt driver.", "id": "common.services.basic.sleepmgr.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "Sleep Manager unit tests on atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "common.services.basic.sleepmgr.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Unit tests for the MEGARF Ext Interrupt driver.", "id": "common.services.basic.sleepmgr.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Sleep Manager unit tests on ATMEGA256RFR2 XPLAINED PRO", "quickstart": {}, "type": "unit-test", "uri": {"mega": "common.services.basic.sleepmgr.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the Serial Peripheral Interface (SPI). Provides functions for configuring and using the SPI.", "id": "mega.drivers.spi", "mcus": ["megarf"], "name": "SPI - Serial Peripheral Interface", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__megarf__drivers__spi.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Unit test application for the SPI driver.", "id": "mega.drivers.spi.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "SPI Diver unit tests on stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.spi.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "SPI Master Mode Example for atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.spi.master_example.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": ["Communication"], "description": "Common standard serial I/O management driver that implements a stdio serial interface on megarf devices.", "id": "common.utils.stdio.stdio_serial#megarf", "mcus": ["megarf"], "name": "Standard serial I/O (stdio) - MEGARF implementation", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__group__common__utils__stdio__stdio__serial.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#17", "mcus": ["mega"], "name": "System Clock Control - MEGA RF A1 implementation", "quickstart": {"mega": ["mega/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega128_stk600", "mcus": ["atmega128"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega128 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega128_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega1284p on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega16_stk600", "mcus": ["atmega16"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega16 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega16_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega168a_stk600", "mcus": ["atmega168a"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega168a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega169p_stk600", "mcus": ["atmega169p"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega169p on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega169p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega2560_stk600", "mcus": ["atmega2560"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega2560 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega32_stk600", "mcus": ["atmega32"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega32 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega32_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega324a_stk600", "mcus": ["atmega324a"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega324a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega324a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega328_stk600", "mcus": ["atmega328"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega328 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega328_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega329p_stk600", "mcus": ["atmega329p"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega329p on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega329p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega48a_stk600", "mcus": ["atmega48a"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega48a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega64_stk600", "mcus": ["atmega64"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega64 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega64_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega644a_stk600", "mcus": ["atmega644a"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega644a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega644a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to run two timeouts flashing LEDS at different interval.", "id": "mega.drivers.tc_timeout.example1.mega88a_stk600", "mcus": ["atmega88a"], "name": "Timer/Counter (TC) Timeout Example 1 for ATmega88a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example1.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega128_stk600", "mcus": ["atmega128"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega128 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega128_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega1284p on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega16_stk600", "mcus": ["atmega16"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega16 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega16_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega168a_stk600", "mcus": ["atmega168a"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega168a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega169p_stk600", "mcus": ["atmega169p"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega169p on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega169p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega2560_stk600", "mcus": ["atmega2560"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega2560 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega32_stk600", "mcus": ["atmega32"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega32 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega32_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega324a_stk600", "mcus": ["atmega324a"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega324a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega324a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega328_stk600", "mcus": ["atmega328"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega328 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega328_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega329p_stk600", "mcus": ["atmega329p"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega329p on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega329p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega48a_stk600", "mcus": ["atmega48a"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega48a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega64_stk600", "mcus": ["atmega64"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega64 on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega64_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega644a_stk600", "mcus": ["atmega644a"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega644a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega644a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Uses the TC Timeout driver to apply a debounce filter to a button input.", "id": "mega.drivers.tc_timeout.example2.mega88a_stk600", "mcus": ["atmega88a"], "name": "Timer/Counter (TC) Timeout Example 2 for ATmega88a on STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.tc_timeout.example2.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "TWI Two-Wire Interface service. Common API.", "id": "common.services.basic.twi#5", "mcus": ["megarf"], "name": "TWI - Two-Wire Interface - megaRF implementation", "quickstart": {"mega": ["mega/html/twi_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__twi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Driver for the Two-Wire Interface (TWI) for megaRF device. Provides functions for configuring and using the TWI in both master and slave mode.", "id": "mega.drivers.twi", "mcus": ["megarf"], "name": "TWI - Two-wire Master and Slave Interface", "quickstart": {"mega": ["mega/html/megarf_twi_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__group__megarf__drivers__twi.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": ["Communication"], "description": "TWI as Master for megaRF", "id": "mega.drivers.twi.master_example.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "Twi Master Example for atmega256rfr2_xplained_pro", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.twi.master_example.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "TWI as Master for megaRF", "id": "mega.drivers.twi.master_example.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "Twi Master Example for megaRF STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.twi.master_example.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "TWI as Slave for megaRF", "id": "mega.drivers.twi.slave_example.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "Twi Slave Example for megaRF STK600", "quickstart": {}, "type": "application", "uri": {"mega": "mega.drivers.twi.slave_example.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Unit tests for the MEGARF TWI driver.", "id": "mega.drivers.twi.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "TWI unit tests on atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.twi.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Unit tests for the MEGARF TWI driver.", "id": "mega.drivers.twi.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "TWI unit tests on atmega256rfr2_xplained_pro", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.twi.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega1284P STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega1284p_stk600", "mcus": ["atmega1284p"], "name": "UART interrupt example for the ATmega1284P", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega1284p_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega168A STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega168a_stk600", "mcus": ["atmega168a"], "name": "UART interrupt example for the ATmega168A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega168a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega2560 STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega2560_stk600", "mcus": ["atmega2560"], "name": "UART interrupt example for the ATmega2560", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega2560_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega324PA STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega324pa_stk600", "mcus": ["atmega324pa"], "name": "UART interrupt example for the ATmega324PA", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega324pa_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega328 STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega328_stk600", "mcus": ["atmega328"], "name": "UART interrupt example for the ATmega328", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega328_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega48A STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega48a_stk600", "mcus": ["atmega48a"], "name": "UART interrupt example for the ATmega48A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega48a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega640 STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega640_stk600", "mcus": ["atmega640"], "name": "UART interrupt example for the ATmega640", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega640_stk600/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": ["Communication"], "description": "ATmega88A STK600 UART example application using interrupts to read/write.", "id": "mega.applications.mega_uart_interrupt_example.mega88a_stk600", "mcus": ["atmega88a"], "name": "UART interrupt example for the ATmega88A", "quickstart": {}, "type": "application", "uri": {"mega": "mega.applications.mega_uart_interrupt_example.mega88a_stk600/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": [], "category": [], "description": "Core functions for the unit test framework.", "id": "common.utils.unit_test#mega", "mcus": ["mega"], "name": "Unit test framework - MEGA implementation", "quickstart": {}, "type": "module", "uri": {"mega": "mega/html/group__test__suite__group.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "Common API which abstracts the user from directly accessing the register and provides a generic serial interface using USART.", "id": "common.services.basic.serial#4", "mcus": ["megarf"], "name": "USART - Serial interface - MEGARF implementation", "quickstart": {"mega": ["mega/html/serial_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__serial__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "MegaRF Driver for the Universal Synchronous and Asynchronous Serial Receiver and Transmitter (USART). Provides functions for configuring and using the USART in RS232 and SPI mode.", "id": "mega.drivers.usart", "mcus": ["megarf"], "name": "USART - Universal Synchronous/Asynchronous Receiver/Transmitter", "quickstart": {"mega": ["mega/html/megarf_usart_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__megarf__usart__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Unit tests for the MEGARF USART driver.", "id": "mega.drivers.usart.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "USART unit tests on atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.usart.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Unit tests for the MEGARF USART driver.", "id": "mega.drivers.usart.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "USART unit tests on atmega256rfr2_atmega256rfr2_xplained_pro", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.usart.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication"], "description": "Provide an application example of USART_SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.usart_spi_master_example.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "USART_SPI Master Mode Example for atmega128rfa1_stk600", "quickstart": {}, "type": "application", "uri": {"mega": "common.services.basic.usart_spi_master_example.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Interrupt", "Timers"], "description": "Watchdog Timer Driver implementation for megaRF", "id": "mega.drivers.wdt", "mcus": ["megarf"], "name": "Watchdog Timer for megaRF", "quickstart": {"mega": ["mega/html/megarf_wdt_quickstart.html"]}, "type": "module", "uri": {"mega": "mega/html/group__megarf__wdt__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Unit tests for the MEGARF WDT driver.", "id": "mega.drivers.wdt.unit_tests.atmega128rfa1_stk600-rc128x_rfx", "mcus": ["atmega128rfa1"], "name": "WDT unit tests on atmega128rfa1_stk600-rc128x_rfx", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.wdt.unit_tests.atmega128rfa1_stk600-rc128x_rfx/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["ATmega256RFR2 Xplained Pro"], "category": [], "description": "Unit tests for the MEGARF WDT driver.", "id": "mega.drivers.wdt.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro", "mcus": ["atmega256rfr2"], "name": "WDT unit tests on atmega256rfr2_xplained_pro", "quickstart": {}, "type": "unit-test", "uri": {"mega": "mega.drivers.wdt.unit_tests.atmega256rfr2_atmega256rfr2_xplained_pro/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Analog Conversion"], "description": "Initialize the ADC, use the on-board sensors and see the value change on a terminal.", "id": "avr32.drivers.adc.example.evk1100", "mcus": ["at32uc3a0512"], "name": "ADC Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.adc.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Communication", "Touch"], "description": "UC3 A/B implementation utilizing the touch sensor AT42QT1060.", "id": "avr32.components.touch.at42qt1060#0", "mcus": ["uc3a", "uc3b"], "name": "AT42QT1060 - UC3 A/B implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__touch__at42qt1060.html", "uc3b": "uc3b/html/group__group__avr32__components__touch__at42qt1060.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.evk1100", "mcus": ["at32uc3a0512"], "name": "AT45DBX DataFlash example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.components.memory.data_flash.at45dbx.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "AT45DBX DataFlash unit tests for EVK1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.components.memory.data_flash.at45dbx.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "AT45DBX DataFlash unit tests for EVK1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.components.memory.data_flash.at45dbx.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Audio"], "description": "Using the TPA6130, stream an audio buffer from a DAC.", "id": "avr32.components.audio.amp.tpa6130a2.example.evk1105", "mcus": ["at32uc3a0512"], "name": "Audio Amplifier TPA6130A2 Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.audio.amp.tpa6130a2.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "Basic clock service unit tests for EVK1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.basic.clock.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "Basic clock service unit tests for EVK1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.basic.clock.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "Basic SD/MMC/SDIO card example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.components.memory.sd_mmc.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.evk1105", "mcus": ["at32uc3a0512"], "name": "Basic SD/MMC/SDIO card example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.components.memory.sd_mmc.example1.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1105"], "category": ["Communication"], "description": "Bluetooth (SPP Profile) with Cybercom stack application, using the EXTBT extension board.", "id": "avr32.applications.uc3-bluetooth-t2bf-spp-demo.evk1105", "mcus": ["at32uc3a0512"], "name": "Bluetooth (SPP Profile) with Cybercom Stack Application for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.applications.uc3-bluetooth-t2bf-spp-demo.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.evk1100", "mcus": ["at32uc3a0512"], "name": "Common API for Chip Reset Cause Access / Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.cpu.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "Common API for Clocks Control / Example 1 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.clock.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.evk1105", "mcus": ["at32uc3a0512"], "name": "Common API for Clocks Control / Example 1 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.clock.example1.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.evk1100", "mcus": ["at32uc3a0512"], "name": "Common API for Clocks Control / Example 2 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.clock.example2.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.evk1105", "mcus": ["at32uc3a0512"], "name": "Common API for Clocks Control / Example 2 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.clock.example2.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.evk1100", "mcus": ["at32uc3a0512"], "name": "Common API for Clocks Control / Example 3 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.clock.example3.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.evk1105", "mcus": ["at32uc3a0512"], "name": "Common API for Clocks Control / Example 3 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.clock.example3.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR UC3 A0/A1 devices.", "id": "common.services.basic.sleepmgr.example.evk1100", "mcus": ["at32uc3a0512"], "name": "Common API for Sleep Management / Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.sleepmgr.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR UC3 A0/A1 devices.", "id": "common.services.basic.sleepmgr.example.evk1105", "mcus": ["at32uc3a0512"], "name": "Common API for Sleep Management / Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.sleepmgr.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "Should toggle one pin on the Xmega port A", "id": "common.services.ioport.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "Common IOPORT service example 1 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.ioport.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "Should toggle one pin on the UC3", "id": "common.services.ioport.example2.evk1100", "mcus": ["at32uc3a0512"], "name": "Common IOPORT service example 2 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.ioport.example2.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "Example that reads button 0 and outputs it on LED1.", "id": "common.services.ioport.example3.evk1100", "mcus": ["at32uc3a0512"], "name": "Common IOPORT service example 3 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.ioport.example3.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["CPU"], "description": "The example illustrates the use of CPU cycle counter - COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.simulator_example1.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "CPU Cycle Counter Example for AT32UC3A0512 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.cpu.cc.simulator_example1.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.evk1100", "mcus": ["at32uc3a0512"], "name": "CPU Cycle Counter Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.cpu.cc.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.evk1105", "mcus": ["at32uc3a0512"], "name": "CPU Cycle Counter Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.cpu.cc.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "CPU MPU Example 1 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.cpu.mpu.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.evk1105", "mcus": ["at32uc3a0512"], "name": "CPU MPU Example 1 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.cpu.mpu.example1.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": [], "description": "Provide an application example (from ASF V1) using the Atmel DataFlash AT25DBx component. The DataFlash requires an SPI bus as a low level communication interface.", "id": "avr32.components.memory.dataflash.at45dbx.example.evk1100", "mcus": ["at32uc3a0512"], "name": "DataFlash AT45DBX Example for EVK1100 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.memory.dataflash.at45dbx.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": [], "description": "Provide an application example (from ASF V1) using the Atmel DataFlash AT25DBx component. The DataFlash requires an SPI bus as a low level communication interface.", "id": "avr32.components.memory.dataflash.at45dbx.example.evk1105", "mcus": ["at32uc3a0512"], "name": "DataFlash AT45DBX Example for EVK1105 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.memory.dataflash.at45dbx.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": ["Graphics"], "description": "Using the DIP204 display, display text messages and control the backlight with the on-board buttons.", "id": "avr32.components.display.dip204.example.evk1100", "mcus": ["at32uc3a0512"], "name": "Display DIP204 Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.display.dip204.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Graphics"], "description": "Use the ET024006DHU TFT display, display a colored animation to the screen.", "id": "avr32.components.display.et024006dhu.example2.evk1105", "mcus": ["at32uc3a0512"], "name": "Display ET024006DHU Example 2 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.display.et024006dhu.example2.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Graphics"], "description": "Use the ET024006DHU TFT display, display text messages and draw a square.", "id": "avr32.components.display.et024006dhu.example.evk1105", "mcus": ["at32uc3a0512"], "name": "Display ET024006DHU Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.display.et024006dhu.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point FFT using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_complex_fft.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point complex FFT example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_complex_fft.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point convolution using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_convolution.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point convolution example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_convolution.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point FIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_fir.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point FIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_fir.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_iir.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_iir.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point LMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_lms.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point LMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_lms.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point NLMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_nlms.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point NLMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_nlms.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 16-bit fixed-point numbers by using the operators function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp16_operators.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point operators example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_operators.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point partial IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_iirpart.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point partial IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_iirpart.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to re-sample a 16-bit fixed-point vector using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_resampling.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point re-sampling example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_resampling.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to generate 16-bit fixed-point signals using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp16_signal_generation.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point signal generation example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_signal_generation.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 16-bit fixed-point vectors using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp16_vectors.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 16-bit fixed-point vectors example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp16_vectors.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point FFT using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_complex_fft.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point complex FFT example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_complex_fft.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point FFT using the DSP library.", "id": "avr32.services.dsplib.simulator_example.dsp32_complex_fft.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point complex FFT example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.dsp32_complex_fft.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point convolution using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_convolution.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point convolution example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_convolution.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point FIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_fir.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point FIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_fir.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point FIR filter using the DSP library.", "id": "avr32.services.dsplib.simulator_example.dsp32_fir.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point FIR filter example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.dsp32_fir.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_iir.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_iir.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point IIR filter using the DSP library.", "id": "avr32.services.dsplib.simulator_example.dsp32_iir.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point IIR filter example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.dsp32_iir.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point LMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_lms.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point LMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_lms.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point LMS filter using the DSP library.", "id": "avr32.services.dsplib.simulator_example.dsp32_lms.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point LMS filter example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.dsp32_lms.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point NLMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_nlms.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point NLMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_nlms.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point NLMS filter using the DSP library.", "id": "avr32.services.dsplib.simulator_example.dsp32_nlms.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point NLMS filter example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.dsp32_nlms.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 32-bit fixed-point numbers by using the operators function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp32_operators.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point operators example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_operators.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 32-bit fixed-point numbers by using the operators function set provided in the DSP library.", "id": "avr32.services.dsplib.simulator_example.dsp32_operators.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point operators example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.dsp32_operators.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point partial IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_iirpart.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point partial IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_iirpart.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to generate 32-bit fixed-point signals using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp32_signal_generation.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point signal generation example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_signal_generation.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 32-bit fixed-point vectors using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp32_vectors.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point vectors example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.dsp32_vectors.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 32-bit fixed-point vectors using the function set provided in the DSP library.", "id": "avr32.services.dsplib.simulator_example.dsp32_vectors.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB 32-bit fixed-point vectors example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.dsp32_vectors.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It demonstrates the use, through a real-time application, of the ADPCM encoder from the DSP library.", "id": "avr32.services.dsplib.example.adpcm_encoder.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB ADPCM encoder example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.adpcm_encoder.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It shows how to encode and decode a vector using the ADPCM algorithm from the DSP library.", "id": "avr32.services.dsplib.example.adpcm.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB ADPCM example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.adpcm.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Simulator"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It shows how to encode and decode a vector using the ADPCM algorithm from the DSP library.", "id": "avr32.services.dsplib.simulator_example.adpcm.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "DSPLIB ADPCM example for Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.simulator_example.adpcm.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It demonstrates how to use the ADPCM decoder with a streaming vector using the DSP library.", "id": "avr32.services.dsplib.example.adpcm_streaming.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB ADPCM streaming example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.adpcm_streaming.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It demonstrates, though an audio WAV player application, how to use the ADPCM decoder from the DSP library.", "id": "avr32.services.dsplib.example.adpcm_wav_player.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB ADPCM WAV player example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.adpcm_wav_player.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1105"], "category": ["CPU", "Communication"], "description": "This application is aimed to demonstrate the AVR UC3 series capabilities in term of DSP computations.", "id": "avr32.applications.uc3.dsplib.demo.evk1105", "mcus": ["at32uc3a0512"], "name": "DSPLIB Application for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.applications.uc3.dsplib.demo.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Digital Signal Processing"], "description": "Example application. This is a very simple application used to benchmark DSP library functions.", "id": "avr32.services.dsplib.example.benchmark.evk1100", "mcus": ["at32uc3a0512"], "name": "DSPLIB benchmark example", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.dsplib.example.benchmark.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to wake up the CPU when in static sleep mode.", "id": "avr32.drivers.eic.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "EIC Example1 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.eic.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to generate interrupts.", "id": "avr32.drivers.eic.example2.evk1100", "mcus": ["at32uc3a0512"], "name": "EIC Example2 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.eic.example2.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) and the SCAN Keypad interface: decode the key pressend and light LEDs.", "id": "avr32.drivers.eic.example3.evk1100", "mcus": ["at32uc3a0512"], "name": "EIC Example3 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.eic.example3.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Demonstration application. Its purpose is to automatically log local sensors and actuators data and events and make these available through the various connectivity channels supported by the AVR UC3.The logs are accessible locally through USART or USB (Mass Storage class), and/or remotely through the Internet (Web server). The Control Panel is locally configurable through USART or USB (Mass Storage class) or remotely configurable through the Internet (Web server).", "id": "avr32.applications.demo.evk1100.example.evk1100", "mcus": ["at32uc3a0512"], "name": "EVK1100 Control Panel Application", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.applications.demo.evk1100.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "This application is aimed to demonstrate the USB Accessory with Android Devices.", "id": "common.services.usb.class.aoa.host.example.at32uc3a0512_evk1105.example", "mcus": ["at32uc3a0512"], "name": "EVK1105 USB Android Accessory Application", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.aoa.host.example.at32uc3a0512_evk1105.example/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Audio", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Audio Class application that behaves as a standard USB audio stereo headset device with microphone. Applying an adaptive filter on samples to control the audio stream synchronization.", "id": "avr32.services.usb.audio.adaptif.example.evk1105", "mcus": ["at32uc3a0512"], "name": "Example of USB Audio with an Adaptive Filter on EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.audio.adaptif.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "USART Shell-like application providing commands to access files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the low-level FAT API.", "id": "avr32.services.fs.fat.example.evk1100", "mcus": ["at32uc3a0512"], "name": "FAT File System Example 1 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.fs.fat.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": [], "description": "USART Shell-like application providing commands to access files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the low-level FAT API.", "id": "avr32.services.fs.fat.example.evk1105", "mcus": ["at32uc3a0512"], "name": "FAT File System Example 1 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.fs.fat.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "USART Shell-like application providing 3 operations to be performed on files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the POSIX-like API.", "id": "avr32.services.fs.fat.fsaccess.example.evk1100", "mcus": ["at32uc3a0512"], "name": "FAT File System Example 2 for EVK110", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.fs.fat.fsaccess.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": [], "description": "USART Shell-like application providing 3 operations to be performed on files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the POSIX-like API.", "id": "avr32.services.fs.fat.fsaccess.example.evk1105", "mcus": ["at32uc3a0512"], "name": "FAT File System Example 2 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.fs.fat.fsaccess.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": [], "description": "", "id": "common.services.basic.fifo.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "FIFO service unit tests on for  for EVK1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.basic.fifo.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "", "id": "common.services.basic.fifo.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "FIFO service unit tests on for EVK1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.basic.fifo.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Memory"], "description": "Use the FLASHC, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashc.example.evk1100", "mcus": ["at32uc3a0512"], "name": "FLASHC Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.flashc.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Memory"], "description": "Use the FLASHC, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashc.example.evk1105", "mcus": ["at32uc3a0512"], "name": "FLASHC Example for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.flashc.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.evk1100", "mcus": ["at32uc3a0512"], "name": "GPIO Local BUS Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.gpio.local_bus_example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.evk1105", "mcus": ["at32uc3a0512"], "name": "GPIO Local BUS Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.gpio.local_bus_example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs and use pin change interrupt through the peripheral bus interface in AVR Studio 5 Simulator.", "id": "avr32.drivers.gpio.simulator_example.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "GPIO Peripheral Bus Example for AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.gpio.simulator_example.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.evk1100", "mcus": ["at32uc3a0512"], "name": "GPIO Peripheral Bus Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.gpio.peripheral_bus_example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.evk1105", "mcus": ["at32uc3a0512"], "name": "GPIO Peripheral Bus Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.gpio.peripheral_bus_example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.evk1105", "mcus": ["at32uc3a0512"], "name": "graphic library example for the EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.gfx.example1.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.evk1100", "mcus": ["at32uc3a0512"], "name": "HMATRIX Example1 for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.hmatrix.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.evk1105", "mcus": ["at32uc3a0512"], "name": "HMATRIX Example1 for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.hmatrix.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": [], "description": "Basic example of using the SSC in I2S mode.", "id": "avr32.drivers.ssc_i2s.example.evk1100", "mcus": ["at32uc3a0512"], "name": "I2S Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.ssc_i2s.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.evk1100", "mcus": ["at32uc3a0512"], "name": "INTC Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.intc.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.evk1105", "mcus": ["at32uc3a0512"], "name": "INTC Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.intc.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Graphics"], "description": "Driver for Ortek DIP204B-4ORT01 LCD module (4*20 characters). Provides functions for initialization, controlling back-light, and writing characters and strings to the display.", "id": "avr32.components.display.dip204", "mcus": ["uc3a", "uc3b"], "name": "LCD Display - DIP204B-4ORT01", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__display__dip204.html", "uc3b": "uc3b/html/group__group__avr32__components__display__dip204.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "The MACB module implements a 10/100 Ethernet MAC compatible with the IEEE 802.3 standard using RTL8201 Ethernet Physical Layer Transceiver.", "id": "avr32.drivers.macb#rtl8201", "mcus": ["uc3a", "uc3c"], "name": "MACB - Ethernet MAC", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__macb.html", "uc3c": "uc3c/html/group__group__avr32__drivers__macb.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication"], "description": "Reply to ping requests on a local network (low-level implementation i.e. not using any TCP/IP stack).", "id": "avr32.drivers.macb.example.evk1100", "mcus": ["at32uc3a0512"], "name": "MACB Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.macb.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Communication"], "description": "Reply to ping requests on a local network (low-level implementation i.e. not using any TCP/IP stack).", "id": "avr32.drivers.macb.example.evk1105", "mcus": ["at32uc3a0512"], "name": "MACB Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.macb.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Audio"], "description": "Mono Audio DAC implemented with a PWM hardware module. This software module constructs a 16-bit DAC output using two 8-bit PWM channels combined with a resistor ladder network. The interface provides functions to configure and control this software DAC.", "id": "avr32.components.audio.dac.pwm_dac", "mcus": ["uc3a", "uc3b"], "name": "Mono Audio PWM DAC", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__audio__dac__pwm__dac.html", "uc3b": "uc3b/html/group__group__avr32__components__audio__dac__pwm__dac.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access violations.", "id": "avr32.drivers.cpu.mpu.simulator_example1.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "MPU Example 1 for AT32UC3A0512 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.cpu.mpu.simulator_example1.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Audio"], "description": "Audio Codec Software Driver for the MobileSound 3 (MS3) from Bang & Olufsen ICEPower configured to be used with the external CS2200 clock synthesizer.", "id": "avr32.components.audio.codec.ms3.common", "mcus": ["uc3a"], "name": "MS3 Audio Codec", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__audio__codec__ms3__common.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.at32uc3a0512_evk1100", "mcus": ["at32uc3a0512"], "name": "NVM example for at32uc3a0512 on EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.drivers.nvm.example.at32uc3a0512_evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.evk1100", "mcus": ["at32uc3a0512"], "name": "PDCA Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.pdca.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.evk1105", "mcus": ["at32uc3a0512"], "name": "PDCA Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.pdca.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Clocks", "Power Management"], "description": "Configure OSC0 as source of the main clock and configure a generic clock GCLK with OSC0 as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.pm.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "PM Example1 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.pm.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Clocks", "Power Management"], "description": "Configure a PLL (or a DFLL, depending on the device) and use it as the main clock source for the synchronous clocks. Configure a Generic Clock with the PLL (or DFLL) as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example2.evk1100", "mcus": ["at32uc3a0512"], "name": "PM Example2 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.pm.example2.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Clocks", "Power Management"], "description": "Configure a PLL (or a DFLL, depending on the device) and use it as the main clock source for the synchronous clocks. Configure a Generic Clock with the PLL (or DFLL) as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example2.evk1105", "mcus": ["at32uc3a0512"], "name": "PM Example2 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.pm.example2.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Pulse Width Modulation (PWM) Software Driver for PWM controller below revision >v4.0.0.", "id": "avr32.drivers.pwm#0", "mcus": ["uc3a", "uc3b"], "name": "PWM - UC3 A/B implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__pwm.html", "uc3b": "uc3b/html/group__group__avr32__drivers__pwm.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Clocks"], "description": "Output a periodic(22.5Hz) waveform on pin using the PWM module.", "id": "avr32.drivers.pwm.example.evk1100", "mcus": ["at32uc3a0512"], "name": "PWM Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.pwm.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Clocks"], "description": "Output a periodic(22.5Hz) waveform on pin using the PWM module.", "id": "avr32.drivers.pwm.example.evk1105", "mcus": ["at32uc3a0512"], "name": "PWM Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.pwm.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Touch"], "description": "Use the QT1081 component to detect key touch and light LEDs.", "id": "avr32.components.touch.qt1081.example.evk1105", "mcus": ["at32uc3a0512"], "name": "QT1081 Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.touch.qt1081.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["STK600"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the STK600 board for Atmel UC3 devices. External Touch Sensors can be connected to the STK600 GPIO pins for testing. QT600 USB Bridge can be used to interface with QTouch Studio to display Touch debug data.", "id": "avr32.services.qtouch.generic.uc3.qtouch.example1.stk600-rcuc3a0", "mcus": ["at32uc3a0512"], "name": "QTouch Method Example Application on STK600-RCUC3A0", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.qtouch.generic.uc3.qtouch.example1.stk600-rcuc3a0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Timers"], "description": "Use the RTC module with an external 32 KHz oscillator.: display on a USART a real time counter incremented every second (interrupt-based example).", "id": "avr32.drivers.rtc.example.evk1100", "mcus": ["at32uc3a0512"], "name": "RTC Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.rtc.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "SD/MMC card example for EVK1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.components.memory.sd_mmc.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "SD/MMC card example for EVK1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.components.memory.sd_mmc.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": ["Memory"], "description": "Read and write data to an external SD or MMC card through the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.example.evk1100", "mcus": ["at32uc3a0512"], "name": "SD/MMC using SPI Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.memory.sdmmc.spi.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Memory"], "description": "Read and write data to an external SD or MMC card through the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.example.evk1105", "mcus": ["at32uc3a0512"], "name": "SD/MMC using SPI Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.memory.sdmmc.spi.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": [], "description": "This is the unit tests of the SD/MMC card using the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "SD/MMC using SPI Unit Tests for EVK1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "avr32.components.memory.sdmmc.spi.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": [], "description": "This is the unit tests of the SD/MMC card using the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "SD/MMC using SPI Unit Tests for EVK1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "avr32.components.memory.sdmmc.spi.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": ["Memory"], "description": "Read and write data to an external SDRAM connected to the EBI SDRAMC.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.evk1100", "mcus": ["at32uc3a0512"], "name": "SDRAM MT48LC16M16A2TG7E Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": ["Memory"], "description": "Read and write data to an external SDRAM connected to the EBI SDRAMC.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.evk1105", "mcus": ["at32uc3a0512"], "name": "SDRAM MT48LC16M16A2TG7E Example for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.evk1100", "mcus": ["at32uc3a0512"], "name": "Shared AVR API for Controlling a TWI Module / Master Mode Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.twi.master.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.evk1105", "mcus": ["at32uc3a0512"], "name": "Shared AVR API for Controlling a TWI Module / Master Mode Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.twi.master.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.evk1100", "mcus": ["at32uc3a0512"], "name": "Shared AVR API for SPI Master Mode / Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.spi.master_example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.evk1105", "mcus": ["at32uc3a0512"], "name": "Shared AVR API for SPI Master Mode / Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.basic.spi.master_example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Memory"], "description": "Using the SMC, write data to an external RAM memory connected to the SMC and read data back.", "id": "avr32.drivers.ebi.smc.example.evk1100", "mcus": ["at32uc3a0512"], "name": "SMC Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.ebi.smc.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#0", "mcus": ["uc3a"], "name": "System Clock Control - UC3 A implementation", "quickstart": {"uc3a": ["uc3a/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"uc3a": "uc3a/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Timers"], "description": "Using the TC module, set-up a Timer/Counter to output a 10.16% duty cycle square wave on TIOA0. Switch the device into the FROZEN sleep mode (thus still maintaining the TC activity).", "id": "avr32.drivers.tc.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "TC Example 1 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.tc.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Timers"], "description": "This example involves 2 timer/counter channels, one configured in capture mode(input) and the other configured in Waveform mode(output) to generate a PWM on the output.", "id": "avr32.drivers.tc.example2.evk1100", "mcus": ["at32uc3a0512"], "name": "TC Example 2 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.tc.example2.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.evk1100", "mcus": ["at32uc3a0512"], "name": "TC Example 3 for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.tc.example3.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.evk1105", "mcus": ["at32uc3a0512"], "name": "TC Example 3 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.tc.example3.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["Timers"], "description": "Using the TC module, generate an interrupt every 10 milliseconds and check its functionality in AVR Studio 5 Simulator.", "id": "avr32.drivers.tc.simulator_example1.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "Timer/Counter Example 1 for AT32UC3A0512 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.tc.simulator_example1.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Audio"], "description": "Driver implementation for AVR UC3 A0/A1, making use of the TWI module for the control stream.", "id": "avr32.components.audio.amp.tpa6130a2#0", "mcus": ["uc3a"], "name": "TPA6130A2 Audio Amplifier Component - UC3 A0/A1 implementation", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__components__audio__amp__tpa6130a2.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "Driver for the TWI (Two-Wire Interface). This driver provides access to the main features of the TWI controller. The TWI interconnects components on a unique two-wire bus. The TWI is programmable as a master or a slave with sequential or single-byte access. Multiple master capability is supported.", "id": "avr32.drivers.twi", "mcus": ["uc3a", "uc3b"], "name": "TWI - Two-Wire Interface", "quickstart": {}, "type": "module", "uri": {"uc3a": "uc3a/html/group__group__avr32__drivers__twi.html", "uc3b": "uc3b/html/group__group__avr32__drivers__twi.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "TWI Two-Wire Interface service. Common API.", "id": "common.services.basic.twi#1", "mcus": ["uc3a", "uc3b"], "name": "TWI - Two-Wire Interface - UC3 A/B implementation", "quickstart": {"uc3a": ["uc3a/html/twi_quickstart.html"], "uc3b": ["uc3b/html/twi_quickstart.html"]}, "type": "module", "uri": {"uc3a": "uc3a/html/group__twi__group.html", "uc3b": "uc3b/html/group__twi__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication"], "description": "Using the TWI module in Master mode, perform read and write operation on a TWI slave. To be used with two boards with the corresponding Slave example.", "id": "avr32.drivers.twi.master_example.evk1100", "mcus": ["at32uc3a0512"], "name": "TWI master Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.twi.master_example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Communication"], "description": "Using the TWI module in Master mode, perform read and write operation on a TWI slave. To be used with two boards with the corresponding Slave example.", "id": "avr32.drivers.twi.master_example.evk1105", "mcus": ["at32uc3a0512"], "name": "TWI master Example for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.twi.master_example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication"], "description": "Using the TWI module in Slave mode, process incoming read and write operations from/to a virtual memory space pre-allocated in internal RAM. To be used with two boards with the corresponding Master example.", "id": "avr32.drivers.twi.slave_example.evk1100", "mcus": ["at32uc3a0512"], "name": "TWI slave Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.twi.slave_example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1100"], "category": [], "description": "This application is aimed to implement unit tests for mt48LC16m16a2tg7 SDRAM component.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "Unit tests for mt48LC16m16a2tg7 SDRAM component on EVK1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1105"], "category": [], "description": "This application is aimed to implement unit tests for mt48LC16m16a2tg7 SDRAM component.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "Unit tests for mt48LC16m16a2tg7 SDRAM component on EVK1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.evk1100", "mcus": ["at32uc3a0512"], "name": "USART Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usart.usart_example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.evk1105", "mcus": ["at32uc3a0512"], "name": "USART Example for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usart.usart_example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["Communication"], "description": "Using the USART module, send and receive characters using the loopback mode to test the USART functionality in AVR Studio 5 Simulator.", "id": "avr32.drivers.usart.simulator_example1.at32uc3a0512", "mcus": ["at32uc3a0512"], "name": "USART Loopback Example for AT32UC3A0512 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usart.simulator_example1.at32uc3a0512/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication"], "description": "Using the USART module in SPI mode.", "id": "avr32.drivers.usart.spi_example.evk1100", "mcus": ["at32uc3a0512"], "name": "USART SPI Example for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usart.spi_example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1105"], "category": ["Audio", "Audio"], "description": "USB audio player application with MP3 support. This application includes a software MP3 decoder, a file system, and a USB Host mass storage class support.", "id": "avr32.applications.audio-player.mp3.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Audio Player MP3 for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.applications.audio-player.mp3.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1105"], "category": ["Audio", "Audio"], "description": "USB audio player application with WAV support. This application includes a software WAV decoder, a file system, and a USB Host mass storage class support.", "id": "avr32.applications.audio-player.wav.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Audio Player WAV for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.applications.audio-player.wav.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID mouse and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidms_msc.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Composite Device HID mouse and MSC for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.composite.device.example.hidms_msc.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Audio", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Audio Class application that behaves as a standard USB audio stereo headset device with microphone. Applying a basic Add & Delete samples filter to control the audio stream synchronization.", "id": "avr32.services.usb.audio.add_del_sample.example.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device Audio Class - Addition and deletion of audio samples example on EVK1105 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.audio.add_del_sample.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Audio", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Audio Class application that behaves as a standard USB audio stereo headset device with microphone. Using an external clock synthesizer to control the audio stream synchronization.", "id": "avr32.services.usb.audio.clock.synthesizer.example.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device Audio Class - Using an external clock synthesizer example on EVK1105 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.audio.clock.synthesizer.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device CDC Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.cdc.device.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between two USARTs and two USB CDC interfaces.", "id": "common.services.usb.class.cdc.device.example2.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device CDC multiple Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.cdc.device.example2.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device CDC unit tests for evk1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.cdc.device.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device CDC unit tests for evk1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.cdc.device.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device HID Mouse for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.hid.device.mouse.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device HID Mouse for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.hid.device.mouse.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device HID Mouse unit tests for evk1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device HID Mouse unit tests for evk1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.hid.device.mouse.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device HID Mouse unit tests for evk1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device HID Mouse unit tests for evk1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.hid.device.mouse.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device Mass Storage for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.msc.device.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device Mass Storage for EVK1100 with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.msc.device.example.freertos.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device Mass Storage for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.msc.device.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device Mass Storage unit tests for evk1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.msc.device.unit_tests.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Device Mass Storage unit tests for evk1105", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.class.msc.device.unit_tests.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device PHDC implementation. Relies on the PHDC driver and uses buttons available on the board as a sensor interfaces.", "id": "common.services.usb.class.phdc.device.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Device PHDC for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.phdc.device.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB CDC Class application that behaves as a Virtual COM Port application in USB Device mode or as a SerialPort-USB gateway in USB Reduced-Host mode.", "id": "avr32.services.usb.cdc.example.evk1100.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) CDC example (from ASF V1) for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.cdc.example.evk1100.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB CDC Class application that behaves as a Virtual COM Port application in USB Device mode or as a SerialPort-USB gateway in USB Reduced-Host mode.", "id": "avr32.services.usb.cdc.example.evk1105.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) CDC example (from ASF V1) for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.cdc.example.evk1105.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB CDC Class application that behaves as a Virtual COM Port application in USB Device mode or as a SerialPort-USB gateway in USB Reduced-Host mode. Implementation using FreeRTOS.", "id": "avr32.services.usb.cdc.example.freertos.evk1100.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) CDC example with FreeRTOS (from ASF V1) for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.cdc.example.freertos.evk1100.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device.", "id": "avr32.services.usb.hid.example.evk1100.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.hid.example.evk1100.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device.", "id": "avr32.services.usb.hid.example.evk1105.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.hid.example.evk1105.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": [], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device. Implementation with FreeRTOS.", "id": "avr32.services.usb.hid.example.freertos.evk1100.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) with FreeRTOS for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.hid.example.freertos.evk1100.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": [], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device. Implementation with FreeRTOS.", "id": "avr32.services.usb.hid.example.freertos.evk1105.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) with FreeRTOS for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.hid.example.freertos.evk1105.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) HID mouse for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.hid.dual.mouse.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Mass-Storage Class application that behaves as a USB Mass-Storage device(removable drive) in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mass-Storage device.", "id": "avr32.services.usb.ms.example.evk1100.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) Mass Storage Class example (from ASF V1) on EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.ms.example.evk1100.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Mass-Storage Class application that behaves as a USB Mass-Storage device(removable drive) in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mass-Storage device.", "id": "avr32.services.usb.ms.example.evk1105.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) Mass Storage Class example (from ASF V1) on EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.ms.example.evk1105.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Mass-Storage Class application that behaves as a USB Mass-Storage device(removable drive) in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mass-Storage device. Implementation with FreeRTOS.", "id": "avr32.services.usb.ms.example.freertos.evk1100.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) Mass Storage Class example with FreeRTOS (from ASF V1) for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.ms.example.freertos.evk1100.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Mass-Storage Class application that behaves as a USB Mass-Storage device(removable drive) in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mass-Storage device. Implementation with FreeRTOS.", "id": "avr32.services.usb.ms.example.freertos.evk1105.asfv1", "mcus": ["at32uc3a0512"], "name": "USB Dual Role (Device and Host) Mass Storage Class example with FreeRTOS (from ASF V1) for EVK1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.ms.example.freertos.evk1105.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1105"], "category": ["Audio", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Audio Class application that behaves as a USB Reduced-Host supporting the USB Audio class. Implementation with an adaptive filter to control the Audio stream synchronization.", "id": "avr32.services.usb.audio.host.adaptif.example.evk1105", "mcus": ["at32uc3a0512"], "name": "USB Host Audio Class - Adaptive Source Example on EVK1105 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.services.usb.audio.host.adaptif.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Host CDC for EVK1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.cdc.host.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.evk1100_host", "mcus": ["at32uc3a0512"], "name": "USB Host core tests on evk1100", "quickstart": {}, "type": "unit-test", "uri": {"uc3a": "common.services.usb.host.tests.targets.evk1100_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Host HID mouse for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.hid.host.mouse.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example1.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Host MSC and HID mouse for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.composite.host.example1.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Host MSC for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.services.usb.class.msc.host.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["EVK1100"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USB Standard I/O Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "common.utils.stdio.stdio_usb.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin).", "id": "avr32.drivers.usbb.example.evk1100", "mcus": ["at32uc3a0512"], "name": "USBB device enumeration and host example for evk1100 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usbb.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin). Example using FreeRTOS.", "id": "avr32.drivers.usbb.example.freertos.evk1100", "mcus": ["at32uc3a0512"], "name": "USBB device enumeration and host example with FreeRTOS for evk1100 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usbb.example.freertos.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin).", "id": "avr32.drivers.usbb.example.evk1105", "mcus": ["at32uc3a0512"], "name": "USBB Driver Enumeration Example for evk1105 (from ASF V1", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usbb.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin). Example using FreeRTOS.", "id": "avr32.drivers.usbb.example.freertos.evk1105", "mcus": ["at32uc3a0512"], "name": "USBB Enumeration Example with FreeRTOS for evk1105 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.usbb.example.freertos.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1100"], "category": ["Timers"], "description": "Example to set-up a watchdog deadline, read the reset cause PM register and use a GPLP register.", "id": "avr32.drivers.wdt.example.evk1100", "mcus": ["at32uc3a0512"], "name": "WDT Example for evk1100", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.wdt.example.evk1100/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1105"], "category": ["Timers"], "description": "Example to set-up a watchdog deadline, read the reset cause PM register and use a GPLP register.", "id": "avr32.drivers.wdt.example.evk1105", "mcus": ["at32uc3a0512"], "name": "WDT Example for evk1105", "quickstart": {}, "type": "application", "uri": {"uc3a": "avr32.drivers.wdt.example.evk1105/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Analog Comparator Interface is able to control two Analog Comparators (AC) with identical behavior.", "id": "avr32.drivers.acifa", "mcus": ["uc3c"], "name": "ACIFA - Analog Comparator Interface", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__acifa.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Analog Conversion"], "description": "Initialize the ACIFA comparators and print the compare output information.", "id": "avr32.drivers.acifa.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "ACIFA Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.acifa.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Driver for the ADCIFA (Analog-to-Digital Converter Interface A). Provides functions for configuration of conversion parameters (up to 12-bit signed at 1.5 Msps), channel sequencing (max. 16 channels, w/ 16 different inputs and up to 64x gain), window monitoring, interrupt and conversion triggering.", "id": "avr32.drivers.adcifa", "mcus": ["uc3c"], "name": "ADCIFA - ADC Interface A", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__adcifa.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Analog Conversion"], "description": "Initialize the ADCIFA, use the on-board sensors and display the value change on a terminal.", "id": "avr32.drivers.adcifa.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "ADCIFA Example 1 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.adcifa.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "Driver for the AST (Asynchronous Timer). Provides functions for configuring and operating the AST in the calendar or timer/counter modes.", "id": "avr32.drivers.ast", "mcus": ["uc3c", "uc3d", "uc3l"], "name": "AST - Asynchronous Timer", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__ast.html", "uc3d": "uc3d/html/group__group__avr32__drivers__ast.html", "uc3l": "uc3l/html/group__group__avr32__drivers__ast.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and use the UART driver to display a real time counter incremented every second.", "id": "avr32.drivers.ast.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "AST Example 1 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.ast.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and setup an alarm to wake-up from sleep mode every second.", "id": "avr32.drivers.ast.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "AST Example 2 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.ast.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Unknown Board"], "category": ["Communication", "USB"], "description": "ISP application, allowing R/W access to several on-chip memories through a USB DFU interface.", "id": "common.services.usb.class.dfu_atmel.device.bootloader.avr32.uc3c", "mcus": ["at32uc3c0512c"], "name": "AT32UC3C DFU Bootloader", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.dfu_atmel.device.bootloader.avr32.uc3c/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Touch"], "description": "Use the AT42QT1060 component to detect key touch and light LEDs.", "id": "avr32.components.touch.at42qt1060.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "AT42QT1060 Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.touch.at42qt1060.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "AT45DBX DataFlash unit tests for AT32UC3C-EK", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.components.memory.data_flash.at45dbx.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Basic clock service unit tests for UC3C-EK", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.services.basic.clock.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Basic SD/MMC/SDIO card example for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.components.memory.sd_mmc.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Bluetooth (SPP Profile) with Cybercom stack application, using the EXTBT extension board.", "id": "avr32.applications.uc3-bluetooth-t2bf-spp-demo.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Bluetooth (SPP Profile) with Cybercom Stack Application for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.applications.uc3-bluetooth-t2bf-spp-demo.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "CAN software stack for 32-bit AVR that supports initializing the CAN bus and sending/receiving data.", "id": "avr32.services.network.can", "mcus": ["uc3c"], "name": "CAN software stack", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__services__network__can.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Switch the device into STATIC sleep mode, then wake-up from any event on the CAN network. Requires the use of another CAN device (e.g. the CANVector PC Tool).", "id": "avr32.services.network.can.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "CAN Stack Example 1 for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.services.network.can.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Sending and Receiving  messages on a CAN network using the CAN Software Stack. Requires the use of another CAN device (e.g. the CANVector PC Tool).", "id": "avr32.services.network.can.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "CAN Stack Example 2 for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.services.network.can.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "CANIF is a 32-bit interface for CAN channels.", "id": "avr32.drivers.canif", "mcus": ["uc3c"], "name": "CANIF - Control Area Network Interface", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__canif.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Common API for Chip Reset Cause Access / Example for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.basic.cpu.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Common API for Clocks Control / Example 1 for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.basic.clock.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Common API for Clocks Control / Example 2 for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.basic.clock.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Common API for Clocks Control / Example 3 for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.basic.clock.example3.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Common API for Controlling a TWI Module / Master Mode Example for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.basic.twi.master.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR UC3 C devices.", "id": "common.services.basic.sleepmgr.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Common API for Sleep Management / Example for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.basic.sleepmgr.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "CPU Cycle Counter Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.cpu.cc.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "CPU MPU Example 1 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.cpu.mpu.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Drivers for Security Access Unit (SAU). SAU is set up to provide a secure channel into specific memory locations that are protected by the MPU.", "id": "avr32.drivers.cpu.sau", "mcus": ["uc3c", "uc3l"], "name": "CPU SAU - Secure Access Unit", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__driver__cpu__sau.html", "uc3l": "uc3l/html/group__group__avr32__driver__cpu__sau.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["CPU"], "description": "Use the CPU Secure Access Unit (SAU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.sau.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "CPU SAU Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.cpu.sau.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Driver for the Digital to Analog Converter (DAC) Interface B. It provides functions for configuring and using the DAC and its channels.", "id": "avr32.drivers.dacifb", "mcus": ["uc3c"], "name": "DACIFB - DAC Interface B", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__dacifb.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Analog Conversion"], "description": "Using the DACIFB, generate a sinus.", "id": "avr32.drivers.dacifb.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "DACIFB Example 1 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.dacifb.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Analog Conversion"], "description": "Using the DACIFB, configure the PEVC to generate the DACIFB clock from a Generick Clock (GCLK) and generate a sinus.", "id": "avr32.drivers.dacifb.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "DACIFB Example 2 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.dacifb.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": [], "description": "Provide an application example (from ASF V1) using the Atmel DataFlash AT25DBx component. The DataFlash requires an SPI bus as a low level communication interface.", "id": "avr32.components.memory.dataflash.at45dbx.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "DataFlash AT45DBX Example for UC3C_EK (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.memory.dataflash.at45dbx.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Graphics"], "description": "Use the ET024006DHU TFT display, display text messages and draw a square.", "id": "avr32.components.display.et024006dhu.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Display ET024006DHU Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.display.et024006dhu.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Graphics"], "description": "Use the ET024006DHU TFT display, display a colored animation to the screen.", "id": "avr32.components.display.et024006dhu.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Display ET024006DHU Example2 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.display.et024006dhu.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Memory"], "description": "Driver to access (read and write) AT24Cxx series EEPROM through a TWI interface.", "id": "avr32.components.memory.eeprom.at24cxx", "mcus": ["uc3c"], "name": "EEPROM AT24Cxx", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__components__memory__eeprom__at24cxx.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to wake up the CPU when in static sleep mode.", "id": "avr32.drivers.eic.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "EIC Example1 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.eic.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to generate interrupts.", "id": "avr32.drivers.eic.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "EIC Example2 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.eic.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": [], "description": "USART Shell-like application providing commands to access files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the low-level FAT API.", "id": "avr32.services.fs.fat.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "FAT File System Example 1 for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.services.fs.fat.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": [], "description": "USART Shell-like application providing 3 operations to be performed on files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the POSIX-like API.", "id": "avr32.services.fs.fat.fsaccess.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "FAT File System Example 2 for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.services.fs.fat.fsaccess.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Memory"], "description": "Use the FLASHC, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashc.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "FLASHC Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.flashc.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": [], "description": "Use the 32KHz reference clock to measure the CPU, HSB, PBA and PBB clock frequency and output results to usart.", "id": "avr32.drivers.freqm.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "FREQ Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.freqm.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Drivers for the frequency meter (FREQM). It provides functions for configuring and measuring. The FREQM can be used to accurately measure the frequency of a clock by comparing it to a known reference clock.", "id": "avr32.drivers.freqm", "mcus": ["uc3c", "uc3d", "uc3l"], "name": "FREQM - Frequency Meter", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__freqm.html", "uc3d": "uc3d/html/group__group__avr32__drivers__freqm.html", "uc3l": "uc3l/html/group__group__avr32__drivers__freqm.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "GPIO Local BUS Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.gpio.local_bus_example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "GPIO Peripheral Bus Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.gpio.peripheral_bus_example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "graphic library example for the UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.gfx.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "HMATRIX Example1 for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.hmatrix.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Communication"], "description": "IISC provides a 5-wire, bidirectional, synchronous, digital audio link with off-chip audio devices: ISDI, ISDO, IWS, ISCK and IMCK pins.", "id": "avr32.drivers.iisc", "mcus": ["uc3c", "uc3d3"], "name": "IISC - Inter-IC Sound Controller", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__iisc.html", "uc3d": "uc3d/html/group__group__avr32__drivers__iisc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "INTC Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.intc.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Communication"], "description": "LIN software stack for 32-bit AVR that supports initializing the LIN bus and to transmit/receive  messages.", "id": "avr32.services.network.lin", "mcus": ["uc3b", "uc3c"], "name": "LIN software stack", "quickstart": {}, "type": "module", "uri": {"uc3b": "uc3b/html/group__group__avr32__services__network__lin.html", "uc3c": "uc3c/html/group__group__avr32__services__network__lin.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Basic example supporting Master and Slave Modes, using the LIN Software Stack . Requires the use of another LIN device (e.g. the CANVector PC Tool).", "id": "avr32.services.lin.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "LIN Stack Example for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.services.lin.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["DMA Controller", "Memory"], "description": "This driver interfaces the MDMA (Memory Direct Memory Access Controller) which performs memory-to-memory transfers with as little CPU intervention as possible.", "id": "avr32.drivers.mdma", "mcus": ["uc3c"], "name": "MDMA - Memory DMA Controller", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__mdma.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["DMA Controller", "Memory"], "description": "Perform several memory transfers using the MDMA from and to different memory areas: flash memory, external SDRAM, HSB RAM, CPU RAM.", "id": "avr32.drivers.mdma.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "MDMA Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.mdma.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "PDCA Example for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.pdca.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Peripheral Event System"], "description": "The Peripheral EVent Controller (PEVC) offers a set of features that allows peripherals to interact without intervention from the CPU. The PEVC connects Event Generators to Event Users.", "id": "avr32.drivers.pevc", "mcus": ["uc3c"], "name": "Peripheral Event Controller (PEVC) Driver", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__pevc.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Peripheral Event System"], "description": "PEVC example using the \"AST - period event 0\" as an event source and the \"PDCA - start of transfer channel 0\" as a triggered event that sends a character to a USART output.", "id": "avr32.drivers.pevc.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "PEVC Example 1 for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.pevc.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Peripheral Event System"], "description": "PEVC example using \"the generic clock GCLK7\" as an event source and the \"PDCA - start of transfer channel 0\" as a triggered event that sends a character to a USART output.", "id": "avr32.drivers.pevc.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "PEVC Example 2 for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.pevc.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Peripheral Event System"], "description": "PEVC example using the \"PAD_EVT[15:0] - change on input pins\" as an event source and the \"PDCA - start of transfer channel 0\" as a triggered event that sends a character to a USART output.", "id": "avr32.drivers.pevc.example3.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "PEVC Example 3 for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.pevc.example3.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Implementation for UC3 C0/C1/C2, using the PM and SCIF peripheral modules.", "id": "avr32.drivers.pm#1", "mcus": ["uc3c"], "name": "PM Power Manager - UC3 C0/C1/C2 implementation", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__pm.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Pulse Width Modulation (PWM) Software Driver for PWM controller above revision >v4.0.0.", "id": "avr32.drivers.pwm#1", "mcus": ["uc3c"], "name": "PWM - UC3C implementation", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__pwm.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Clocks"], "description": "Output a periodic(2.8MHz) waveform on a pin using the PWM module at version >= 4.x.", "id": "avr32.drivers.pwm4.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "PWM4 Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.pwm4.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": [], "description": "Driver for the QDEC (Quadrature Decoder). The QDEC handles three input channels: two phase signals (QEPA, QEPB) and one index pulse (QEPI). It has a 16-bit position counter and a 16-bit revolution counter and supports 32-bit timer/counter mode.", "id": "avr32.drivers.qdec", "mcus": ["uc3c"], "name": "QDEC - Quadrature Decoder", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__qdec.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": [], "description": "Using the QDEC module in timer mode (interrupt-based example), output a varying duty cycle square wave on a pin.", "id": "avr32.drivers.qdec.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "QDEC Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.qdec.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["STK600"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the STK600 board for Atmel UC3 devices. External Touch Sensors can be connected to the STK600 GPIO pins for testing. QT600 USB Bridge can be used to interface with QTouch Studio to display Touch debug data.", "id": "avr32.services.qtouch.generic.uc3.qtouch.example1.stk600-rcuc3c0", "mcus": ["at32uc3c0512c"], "name": "QTouch Method Example Application on STK600-RCUC3C0", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.services.qtouch.generic.uc3.qtouch.example1.stk600-rcuc3c0/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": [], "category": ["Touch"], "description": "This driver offers resistive touch measurements by using the on-chip ADC. In addition it offers calibration and a callback function for the application. To improve the overall results four ADC channels are used to measure the touch position. That means the measurements are done from each direction of the touch surface.", "id": "avr32.components.touch.resistive_touch#1", "mcus": ["uc3c"], "name": "Resistive Touch driver", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__components__touch__resistive__touch.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Touch"], "description": "Use the Resistive Touch screen interface to draw a pixel each time the screen is touched.", "id": "avr32.components.touch.resitive.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Resitive Touch Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.touch.resitive.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Driver for the SCIF (System Control Interface). The SCIF controls the Oscillators, PLL, Generic Clocks, BODs, the voltage regulators and general purpose low power registers.", "id": "avr32.drivers.scif#0", "mcus": ["uc3c"], "name": "SCIF System Control Interface - UC3C implementation", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__scif.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "SD/MMC card example for UC3C-EK", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.components.memory.sd_mmc.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Memory"], "description": "Read and write data to an external SD or MMC card through the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "SD/MMC using SPI Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.memory.sdmmc.spi.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": [], "description": "This is the unit tests of the SD/MMC card using the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "SD/MMC using SPI Unit Tests for AT32UC3C-EK", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "avr32.components.memory.sdmmc.spi.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Memory"], "description": "Read and write data to an external SDRAM connected to the EBI SDRAMC.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "SDRAM MT48LC16M16A2TG7E Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Shared AVR API for SPI Master Mode / Example for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.basic.spi.master_example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#5", "mcus": ["uc3c"], "name": "System Clock Control - UC3 C implementation", "quickstart": {"uc3c": ["uc3c/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"uc3c": "uc3c/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Timers"], "description": "Using the TC module, set-up a Timer/Counter to output a 10.16% duty cycle square wave on TIOA0. Switch the device into the FROZEN sleep mode (thus still maintaining the TC activity).", "id": "avr32.drivers.tc.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "TC Example 1 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.tc.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Timers"], "description": "This example involves 2 timer/counter channels, one configured in capture mode(input) and the other configured in Waveform mode(output) to generate a PWM on the output.", "id": "avr32.drivers.tc.example2.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "TC Example 2 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.tc.example2.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "TC Example 3 for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.tc.example3.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Using the TWIM module, perform read and write operations from/to a virtual memory space pre-allocated in internal RAM in a slave TWI device. To be used with two boards with the corresponding TWIS module example.", "id": "avr32.drivers.twim.master_example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "TWIM Master Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.twim.master_example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Using the TWIS module, process read and write operations from/to a virtual memory space pre-allocated in internal RAM. To be used with two boards with the corresponding TWIM module example.", "id": "avr32.drivers.twis.slave_example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "TWIS Slave Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.twis.slave_example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": ["Memory"], "description": "Read and write bytes to an external EEPROM AT24Cx memory through I2C.", "id": "avr32.components.memory.eeprom.at24cxx.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "UC3A Components memory EEPROM AT24Cxx Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.components.memory.eeprom.at24cxx.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "This application is aimed to demonstrate the 32-bit AVR UC3 C series CAN and LIN capabilities.", "id": "avr32.applications.can-lin-loopbacks-demo.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "UC3C CAN and LIN Loopbacks Application for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.applications.can-lin-loopbacks-demo.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3C-EK"], "category": ["Graphics"], "description": "This application is aimed to demonstrate the AVR UC3 C series FPU capabilities, using a fractal algorithm.", "id": "avr32.applications.uc3c-fpu-demo.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "UC3C Fractal Display using the FPU Application for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.applications.uc3c-fpu-demo.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3C-EK"], "category": ["Communication", "Digital Signal Processing"], "description": "This application is aimed to demonstrate the 32-bit AVR UC3 C series Filtering Capabilities.", "id": "avr32.applications.scope-meter-and-filtering-demo.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "UC3C Scope Meter And Filtering Application for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.applications.scope-meter-and-filtering-demo.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3C-EK"], "category": [], "description": "This application is aimed to implement unit tests for mt48LC16m16a2tg7 SDRAM component.", "id": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Unit tests for mt48LC16m16a2tg7 SDRAM component on UC3C_EK", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "avr32.components.memory.sdram.mt48lc16m16a2tg7e.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USART Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.usart.usart_example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device CDC Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.cdc.device.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device CDC unit tests for uc3c_ek", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.services.usb.class.cdc.device.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device HID Generic for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.hid.device.generic.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device HID Mouse for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.hid.device.mouse.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device HID Mouse unit tests for uc3c_ek", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.services.usb.class.hid.device.keyboard.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device HID Mouse unit tests for uc3c_ek", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.services.usb.class.hid.device.mouse.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation with FreeRTOS. Relies on the native operating system USB MSC driver*, displays all available memories of the board as removable disks* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.freertos.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device Mass Storage for UC3C-EK with FreeRTOS", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.msc.device.example.freertos.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device Mass Storage for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.msc.device.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device Mass Storage unit tests for uc3c_ek", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.services.usb.class.msc.device.unit_tests.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Device Vendor Class example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.vendor.device.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Dual Role (Device and Host) HID mouse for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.hid.dual.mouse.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Host CDC for UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.cdc.host.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide a USB host core unit tests implementation.", "id": "common.services.usb.host.tests.targets.uc3c_ek_host", "mcus": ["at32uc3c0512c"], "name": "USB Host core tests on uc3c_ek", "quickstart": {}, "type": "unit-test", "uri": {"uc3c": "common.services.usb.host.tests.targets.uc3c_ek_host/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Host HID mouse for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.hid.host.mouse.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Host MSC and HID mouse for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.composite.host.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Host MSC for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.usb.class.msc.host.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["UC3C-EK"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "USB Standard I/O Example for uc3c_ek", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.utils.stdio.stdio_usb.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Timers"], "description": "This implementation supports revisions >=v4.0.0 of the WDT, found in AVR UC3 C/L.", "id": "avr32.drivers.wdt#1", "mcus": ["uc3c", "uc3d", "uc3l"], "name": "WDT Watchdog Timer - UC3 C/L implementation", "quickstart": {}, "type": "module", "uri": {"uc3c": "uc3c/html/group__group__avr32__drivers__wdt.html", "uc3d": "uc3d/html/group__group__avr32__drivers__wdt.html", "uc3l": "uc3l/html/group__group__avr32__drivers__wdt.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3C-EK"], "category": ["Timers"], "description": "Example to set-up a watchdog deadline, read the reset cause PM register and use a GPLP register. Only for WDT module version 4 or higher.", "id": "avr32.drivers.wdt4.example.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "WDT4 Example for UC3C_EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "avr32.drivers.wdt4.example.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3C-EK"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.uc3c_ek", "mcus": ["at32uc3c0512c"], "name": "Widget library example for the UC3C-EK", "quickstart": {}, "type": "application", "uri": {"uc3c": "common.services.wtk.example1.uc3c_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": ["Sensors"], "description": "Use the on-board lis3l06al accelerometer to control messages displayed on the UART.", "id": "avr32.components.accelerometer.example.evk1101", "mcus": ["at32uc3b0256"], "name": "Accelerometer LIS3L06AL Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.components.accelerometer.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Analog Conversion"], "description": "Initialize the ADC, use the on-board sensors and see the value change on a terminal.", "id": "avr32.drivers.adc.example.evk1101", "mcus": ["at32uc3b0256"], "name": "ADC Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.adc.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["User Board template"], "category": ["USB"], "description": "Allow the QTouch library debug mode to be connected through USB to QTouch Studio.", "id": "avr32.applications.evk11xx-uc3b-usb-hid-qtouch-debug.example2", "mcus": ["at32uc3b1256"], "name": "Application EVK11XX UC3B USB HID QTOUCH DEBUG prog1", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.applications.evk11xx-uc3b-usb-hid-qtouch-debug.example2/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.evk1101", "mcus": ["at32uc3b0256"], "name": "AT45DBX DataFlash example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.components.memory.data_flash.at45dbx.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "AT45DBX DataFlash unit tests for EVK1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "common.components.memory.data_flash.at45dbx.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "Basic clock service unit tests for EVK1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "common.services.basic.clock.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": ["Memory"], "description": "Install and execute a basic read and write block access to an external SD/MMC/SDIO card. This example is interesting to start a specific development on SDIO card or on SD/MMC card without a file system.", "id": "common.components.memory.sd_mmc.example1.evk1101", "mcus": ["at32uc3b0256"], "name": "Basic SD/MMC/SDIO card example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.components.memory.sd_mmc.example1.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["Unknown Board"], "category": ["USB"], "description": "Boot application for the UC3L-EK UC3B MCU which selects the USB HID QTouch firmware or USB VPC firmware at startup.", "id": "avr32.applications.evk11xx-uc3b-bootselector.example", "mcus": ["at32uc3b1256"], "name": "Boot selector Application ", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.applications.evk11xx-uc3b-bootselector.example/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.evk1101", "mcus": ["at32uc3b0256"], "name": "Common API for Chip Reset Cause Access / Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.basic.cpu.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.evk1101", "mcus": ["at32uc3b0256"], "name": "Common API for Clocks Control / Example 1 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.basic.clock.example1.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.evk1101", "mcus": ["at32uc3b0256"], "name": "Common API for Clocks Control / Example 2 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.basic.clock.example2.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.evk1101", "mcus": ["at32uc3b0256"], "name": "Common API for Clocks Control / Example 3 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.basic.clock.example3.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR UC3 B0/B1 devices.", "id": "common.services.basic.sleepmgr.example.evk1101", "mcus": ["at32uc3b0256"], "name": "Common API for Sleep Management / Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.basic.sleepmgr.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.evk1101", "mcus": ["at32uc3b0256"], "name": "CPU Cycle Counter Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.cpu.cc.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.evk1101", "mcus": ["at32uc3b0256"], "name": "CPU MPU Example 1 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.cpu.mpu.example1.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": [], "description": "Provide an application example (from ASF V1) using the Atmel DataFlash AT25DBx component. The DataFlash requires an SPI bus as a low level communication interface.", "id": "avr32.components.memory.dataflash.at45dbx.example.evk1101", "mcus": ["at32uc3b0256"], "name": "DataFlash AT45DBX Example for EVK1101 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.components.memory.dataflash.at45dbx.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point FFT using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_complex_fft.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point complex FFT example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_complex_fft.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point convolution using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_convolution.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point convolution example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_convolution.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point FIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_fir.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point FIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_fir.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_iir.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_iir.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point LMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_lms.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point LMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_lms.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point NLMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_nlms.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point NLMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_nlms.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 16-bit fixed-point numbers by using the operators function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp16_operators.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point operators example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_operators.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 16-bit fixed-point partial IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_iirpart.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point partial IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_iirpart.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to re-sample a 16-bit fixed-point vector using the DSP library.", "id": "avr32.services.dsplib.example.dsp16_resampling.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point re-sampling example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_resampling.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to generate 16-bit fixed-point signals using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp16_signal_generation.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point signal generation example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_signal_generation.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 16-bit fixed-point vectors using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp16_vectors.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 16-bit fixed-point vectors example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp16_vectors.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point FFT using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_complex_fft.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point complex FFT example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_complex_fft.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point convolution using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_convolution.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point convolution example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_convolution.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point FIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_fir.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point FIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_fir.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_iir.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_iir.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point LMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_lms.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point LMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_lms.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point NLMS filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_nlms.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point NLMS filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_nlms.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 32-bit fixed-point numbers by using the operators function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp32_operators.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point operators example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_operators.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to perform a 32-bit fixed-point partial IIR filter using the DSP library.", "id": "avr32.services.dsplib.example.dsp32_iirpart.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point partial IIR filter example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_iirpart.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to generate 32-bit fixed-point signals using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp32_signal_generation.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point signal generation example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_signal_generation.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to manipulate 32-bit fixed-point vectors using the function set provided in the DSP library.", "id": "avr32.services.dsplib.example.dsp32_vectors.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB 32-bit fixed-point vectors example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.dsp32_vectors.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It demonstrates the use, through a real-time application, of the ADPCM encoder from the DSP library.", "id": "avr32.services.dsplib.example.adpcm_encoder.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB ADPCM encoder example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.adpcm_encoder.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It shows how to encode and decode a vector using the ADPCM algorithm from the DSP library.", "id": "avr32.services.dsplib.example.adpcm.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB ADPCM example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.adpcm.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It demonstrates how to use the ADPCM decoder with a streaming vector using the DSP library.", "id": "avr32.services.dsplib.example.adpcm_streaming.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB ADPCM streaming example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.adpcm_streaming.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Audio", "Digital Signal Processing"], "description": "Example application. It demonstrates, though an audio WAV player application, how to use the ADPCM decoder from the DSP library.", "id": "avr32.services.dsplib.example.adpcm_wav_player.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB ADPCM WAV player example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.adpcm_wav_player.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Digital Signal Processing"], "description": "Example application. This is a very simple application used to benchmark DSP library functions.", "id": "avr32.services.dsplib.example.benchmark.evk1101", "mcus": ["at32uc3b0256"], "name": "DSPLIB benchmark example", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.dsplib.example.benchmark.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to wake up the CPU when in static sleep mode.", "id": "avr32.drivers.eic.example1.evk1101", "mcus": ["at32uc3b0256"], "name": "EIC Example1 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.eic.example1.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to generate interrupts.", "id": "avr32.drivers.eic.example2.evk1101", "mcus": ["at32uc3b0256"], "name": "EIC Example2 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.eic.example2.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) and the SCAN Keypad interface: decode the key pressend and light LEDs.", "id": "avr32.drivers.eic.example3.evk1101", "mcus": ["at32uc3b0256"], "name": "EIC Example3 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.eic.example3.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Demonstration application. Its purpose is to scan onboard sensors and actuators data and events (data acquisition through ADC channels) and make these available to a PC application (known as AVR UC3B Series Control Panel) through a simple USB cable.", "id": "avr32.applications.evk1101-demo.example", "mcus": ["at32uc3b0256"], "name": "EVK1101 Control Panel", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.applications.evk1101-demo.example/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["User Board template"], "category": ["USB"], "description": "Allow the QTouch library debug mode to be connected through USB to QTouch Studio.", "id": "avr32.applications.evk11xx-uc3b-usb-hid-qtouch-debug.example", "mcus": ["at32uc3b1256"], "name": "EVK11XX UC3B USB HID QTouch Debug Application", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.applications.evk11xx-uc3b-usb-hid-qtouch-debug.example/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": [], "description": "USART Shell-like application providing commands to access files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the low-level FAT API.", "id": "avr32.services.fs.fat.example.evk1101", "mcus": ["at32uc3b0256"], "name": "FAT File System Example 1 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.fs.fat.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": [], "description": "USART Shell-like application providing 3 operations to be performed on files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the POSIX-like API.", "id": "avr32.services.fs.fat.fsaccess.example.evk1101", "mcus": ["at32uc3b0256"], "name": "FAT File System Example 2 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.fs.fat.fsaccess.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Memory"], "description": "Use the FLASHC, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashc.example.evk1101", "mcus": ["at32uc3b0256"], "name": "FLASHC Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.flashc.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.evk1101", "mcus": ["at32uc3b0256"], "name": "GPIO Local BUS Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.gpio.local_bus_example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.evk1101", "mcus": ["at32uc3b0256"], "name": "GPIO Peripheral Bus Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.gpio.peripheral_bus_example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.evk1101", "mcus": ["at32uc3b0256"], "name": "HMATRIX Example1 for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.hmatrix.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": [], "description": "Basic example of using the SSC in I2S mode.", "id": "avr32.drivers.ssc_i2s.example.evk1101", "mcus": ["at32uc3b0256"], "name": "I2S Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.ssc_i2s.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.evk1101", "mcus": ["at32uc3b0256"], "name": "INTC Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.intc.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.at32uc3b0256_evk1101", "mcus": ["at32uc3b0256"], "name": "NVM example for at32uc3b0256 on EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.drivers.nvm.example.at32uc3b0256_evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.evk1101", "mcus": ["at32uc3b0256"], "name": "PDCA Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.pdca.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Clocks", "Power Management"], "description": "Configure OSC0 as source of the main clock and configure a generic clock GCLK with OSC0 as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.pm.example1.evk1101", "mcus": ["at32uc3b0256"], "name": "PM Example1 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.pm.example1.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Clocks", "Power Management"], "description": "Configure a PLL (or a DFLL, depending on the device) and use it as the main clock source for the synchronous clocks. Configure a Generic Clock with the PLL (or DFLL) as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example2.evk1101", "mcus": ["at32uc3b0256"], "name": "PM Example2 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.pm.example2.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Clocks"], "description": "Output a periodic(22.5Hz) waveform on pin using the PWM module.", "id": "avr32.drivers.pwm.example.evk1101", "mcus": ["at32uc3b0256"], "name": "PWM Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.pwm.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["STK600"], "category": ["Touch", "Touch"], "description": "This application is a demonstration of QTouch Capacitive Touch method on the STK600 board for Atmel UC3 devices. External Touch Sensors can be connected to the STK600 GPIO pins for testing. QT600 USB Bridge can be used to interface with QTouch Studio to display Touch debug data.", "id": "avr32.services.qtouch.generic.uc3.qtouch.example1.stk600-rcuc3b0", "mcus": ["at32uc3b0256"], "name": "QTouch Method Example Application on STK600-RCUC3B0", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.qtouch.generic.uc3.qtouch.example1.stk600-rcuc3b0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Timers"], "description": "Use the RTC module with an external 32 KHz oscillator.: display on a USART a real time counter incremented every second (interrupt-based example).", "id": "avr32.drivers.rtc.example.evk1101", "mcus": ["at32uc3b0256"], "name": "RTC Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.rtc.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": ["Memory"], "description": "Test the installation, the read and write access on an external SD/MMC/SDIO card.", "id": "common.components.memory.sd_mmc.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "SD/MMC card example for EVK1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "common.components.memory.sd_mmc.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": ["Memory"], "description": "Read and write data to an external SD or MMC card through the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.example.evk1101", "mcus": ["at32uc3b0256"], "name": "SD/MMC using SPI Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.components.memory.sdmmc.spi.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["EVK1101"], "category": [], "description": "This is the unit tests of the SD/MMC card using the SPI Interface.", "id": "avr32.components.memory.sdmmc.spi.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "SD/MMC using SPI Unit Tests for EVK1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "avr32.components.memory.sdmmc.spi.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.evk1101", "mcus": ["at32uc3b0256"], "name": "Shared AVR API for Controlling a TWI Module / Master Mode Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.basic.twi.master.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.evk1101", "mcus": ["at32uc3b0256"], "name": "Shared AVR API for SPI Master Mode / Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.basic.spi.master_example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#2", "mcus": ["uc3b"], "name": "System Clock Control - UC3 B0 implementation", "quickstart": {"uc3b": ["uc3b/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"uc3b": "uc3b/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Timers"], "description": "Using the TC module, set-up a Timer/Counter to output a 10.16% duty cycle square wave on TIOA0. Switch the device into the FROZEN sleep mode (thus still maintaining the TC activity).", "id": "avr32.drivers.tc.example1.evk1101", "mcus": ["at32uc3b0256"], "name": "TC Example 1 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.tc.example1.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.evk1101", "mcus": ["at32uc3b0256"], "name": "TC Example 3 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.tc.example3.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Timers"], "description": "This example involves 2 timer/counter channels, one configured in capture mode(input) and the other configured in Waveform mode(output) to generate a PWM on the output.", "id": "avr32.drivers.tc.example2.evk1101", "mcus": ["at32uc3b0256"], "name": "TC Example2 for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.tc.example2.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Communication"], "description": "Using the TWI module in Master mode, perform read and write operation on a TWI slave. To be used with two boards with the corresponding Slave example.", "id": "avr32.drivers.twi.master_example.evk1101", "mcus": ["at32uc3b0256"], "name": "TWI master Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.twi.master_example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Communication"], "description": "Using the TWI module in Slave mode, process incoming read and write operations from/to a virtual memory space pre-allocated in internal RAM. To be used with two boards with the corresponding Master example.", "id": "avr32.drivers.twi.slave_example.evk1101", "mcus": ["at32uc3b0256"], "name": "TWI slave Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.twi.slave_example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.evk1101", "mcus": ["at32uc3b0256"], "name": "USART Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.usart.usart_example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Communication"], "description": "Using the USART module in SPI mode.", "id": "avr32.drivers.usart.spi_example.evk1101", "mcus": ["at32uc3b0256"], "name": "USART SPI Example for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.usart.spi_example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with CDC and Mass Storage interfaces. It relies on native MSC driver and uses memory, uart and buttons or sensors available on the board as a user interface. CDC interface requires to install a specific driver provided within the source code folder where main.c is located.", "id": "common.services.usb.composite.device.example.cdc_msc.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Composite Device CDC and MSC for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.composite.device.example.cdc_msc.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Composite Device with HID keyboard and Mass Storage interfaces. It relies on native MSC and HID drivers and uses memory and buttons or sensors available on the board as a user interface.", "id": "common.services.usb.class.composite.device.example.hidkbd_msc.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Composite Device HID keyboard and MSC for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.composite.device.example.hidkbd_msc.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device CDC Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.cdc.device.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Board Controller"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.uc3b_board_controller", "mcus": ["at32uc3b1256"], "name": "USB Device CDC Example for uc3b board controller", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.cdc.device.example.uc3b_board_controller/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device CDC unit tests for evk1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "common.services.usb.class.cdc.device.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device HID Generic for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.hid.device.generic.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device HID Keyboard for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.hid.device.keyboard.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device HID Mouse for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.hid.device.mouse.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device HID Mouse unit tests for evk1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "common.services.usb.class.hid.device.keyboard.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device HID Mouse unit tests for evk1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "common.services.usb.class.hid.device.mouse.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device Mass Storage for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.msc.device.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device Mass Storage unit tests for evk1101", "quickstart": {}, "type": "unit-test", "uri": {"uc3b": "common.services.usb.class.msc.device.unit_tests.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Device Vendor Class example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.vendor.device.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB CDC Class application that behaves as a Virtual COM Port application in USB Device mode or as a SerialPort-USB gateway in USB Reduced-Host mode.", "id": "avr32.services.usb.cdc.example.evk1101.asfv1", "mcus": ["at32uc3b0256"], "name": "USB Dual Role (Device and Host) CDC example (from ASF V1) for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.usb.cdc.example.evk1101.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": [], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB CDC Class application that behaves as a Virtual COM Port application in USB Device mode or as a SerialPort-USB gateway in USB Reduced-Host mode. Implementation using FreeRTOS.", "id": "avr32.services.usb.cdc.example.freertos.evk1101.asfv1", "mcus": ["at32uc3b0256"], "name": "USB Dual Role (Device and Host) CDC example with FreeRTOS (from ASF V1) for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.usb.cdc.example.freertos.evk1101.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device.", "id": "avr32.services.usb.hid.example.evk1101.asfv1", "mcus": ["at32uc3b0256"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.usb.hid.example.evk1101.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": [], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB Mouse in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mouse device. Implementation with FreeRTOS.", "id": "avr32.services.usb.hid.example.freertos.evk1101.asfv1", "mcus": ["at32uc3b0256"], "name": "USB Dual Role (Device and Host) HID class example (from ASF V1) with FreeRTOS for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.usb.hid.example.freertos.evk1101.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB HID Class application that behaves as a USB HID generic device in USB Device mode or operates in USB Reduced-Host mode when connected to a USB HID Generic device.", "id": "avr32.services.usb.hid.generic.example.evk1101.asfv1", "mcus": ["at32uc3b0256"], "name": "USB Dual Role (Device and Host) HID Generic class example (from ASF V1) for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.usb.hid.generic.example.evk1101.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host and device (dual role) HID mouse implementation.", "id": "common.services.usb.class.hid.dual.mouse.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Dual Role (Device and Host) HID mouse for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.hid.dual.mouse.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, USB Mass-Storage Class application that behaves as a USB Mass-Storage device(removable drive) in USB Device mode or operates in USB Reduced-Host mode when connected to a USB Mass-Storage device.", "id": "avr32.services.usb.ms.example.evk1101.asfv1", "mcus": ["at32uc3b0256"], "name": "USB Dual Role (Device and Host) Mass Storage Class example (from ASF V1) on EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.services.usb.ms.example.evk1101.asfv1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Host Communication Device Class (CDC) implementation: a bridge between USART and a USB device CDC.", "id": "common.services.usb.class.cdc.host.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Host CDC for EVK1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.cdc.host.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host HID mouse implementation.", "id": "common.services.usb.class.hid.host.mouse.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Host HID mouse for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.hid.host.mouse.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class and HID mouse Class implementation.", "id": "common.services.usb.class.composite.host.example1.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Host MSC and HID mouse for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.composite.host.example1.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Provide an application example of USB host Mass Storage Class implementation.", "id": "common.services.usb.class.msc.host.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Host MSC for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.services.usb.class.msc.host.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["EVK1101"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USB Communication Device Class (CDC) service.", "id": "common.utils.stdio.stdio_usb.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USB Standard I/O Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "common.utils.stdio.stdio_usb.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin).", "id": "avr32.drivers.usbb.example.evk1101", "mcus": ["at32uc3b0256"], "name": "USBB device enumeration and host example for evk1101 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.usbb.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Communication", "USB"], "description": "Using the USBB module and the deprecated USB software stack from ASF v1, perform a basic USB enumeration in device mode or in reduced-host mode (depending on the USB ID pin). Example using FreeRTOS.", "id": "avr32.drivers.usbb.example.freertos.evk1101", "mcus": ["at32uc3b0256"], "name": "USBB device enumeration and host example with FreeRTOS for evk1101 (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.usbb.example.freertos.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["EVK1101"], "category": ["Timers"], "description": "Example to set-up a watchdog deadline, read the reset cause PM register and use a GPLP register.", "id": "avr32.drivers.wdt.example.evk1101", "mcus": ["at32uc3b0256"], "name": "WDT Example for evk1101", "quickstart": {}, "type": "application", "uri": {"uc3b": "avr32.drivers.wdt.example.evk1101/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and use the UART driver to display a real time counter incremented every second.", "id": "avr32.drivers.ast.example1.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "AST Example 1 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.ast.example1.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and setup an alarm to wake-up from sleep mode every second.", "id": "avr32.drivers.ast.example2.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "AST Example 2 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.ast.example2.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "AT45DBX DataFlash example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.components.memory.data_flash.at45dbx.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "AT45DBX DataFlash unit tests for STK600_RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.components.memory.data_flash.at45dbx.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Unknown Board"], "category": ["Communication", "USB"], "description": "ISP application, allowing R/W access to several on-chip memories through a USB DFU interface.", "id": "common.services.usb.class.dfu_atmel.device.bootloader.avr32.uc3d", "mcus": ["atuc128d3"], "name": "ATUCxxxD3 DFU Bootloader", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.usb.class.dfu_atmel.device.bootloader.avr32.uc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Basic clock service unit tests for STK600-RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.services.basic.clock.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Unit tests for calendar functionality", "id": "common.services.calendar.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Calendar driver unit tests on STK600-RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.services.calendar.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "An example application that calculates the time difference between two dates, and lights up a led if the resulting time is correct.", "id": "common.services.calendar.example2.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Calendar service example 2 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.calendar.example2.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "An example application that converts a date to a timestamp and lights up a led if the timestamp is correct.", "id": "common.services.calendar.example1.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Calendar service example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.calendar.example1.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Common API for Chip Reset Cause Access / Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.basic.cpu.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Common API for Clocks Control / Example 1 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.basic.clock.example1.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Common API for Clocks Control / Example 2 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.basic.clock.example2.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Common API for Clocks Control / Example 3 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.basic.clock.example3.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR UC3 D devices.", "id": "common.services.basic.sleepmgr.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Common API for Sleep Management / Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.basic.sleepmgr.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "CPU Cycle Counter Example for STK600-RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.cpu.cc.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to wake up the CPU when in static sleep mode.", "id": "avr32.drivers.eic.example1.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "EIC Example1 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.eic.example1.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to generate interrupts.", "id": "avr32.drivers.eic.example2.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "EIC Example2 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.eic.example2.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": [], "description": "FAT file system with text file support.", "id": "avr32.services.fs.fat.reader_txt", "mcus": ["uc3"], "name": "FAT file system with text file support", "quickstart": {}, "type": "module", "uri": {"uc3d": "uc3d/html/group__group__avr32__services__fs__fat.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "", "id": "common.services.basic.fifo.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "FIFO service unit tests on for STK600_RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.services.basic.fifo.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "FLASHCDW interfaces a flash block with the 32-bit internal HSB bus.", "id": "avr32.drivers.flashcdw", "mcus": ["uc3d", "uc3l"], "name": "FLASH Controller Double-Word (FLASHCDW)", "quickstart": {}, "type": "module", "uri": {"uc3d": "uc3d/html/group__group__avr32__drivers__flashcdw.html", "uc3l": "uc3l/html/group__group__avr32__drivers__flashcdw.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the FLASHCDW, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashcdw.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "FLASHCDW Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.flashcdw.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": [], "description": "Use the 32KHz reference clock to measure the CPU, HSB, PBA and PBB clock frequency and output results to usart.", "id": "avr32.drivers.freqm.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "FREQ Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.freqm.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "GPIO Local BUS Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "GPIO Peripheral Bus Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "HMATRIX Example1 for STK600-RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.hmatrix.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "INTC Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.intc.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#no_extmem#1", "mcus": ["uc3d", "uc3l0", "uc3l3", "uc3l4"], "name": "NVM - Non volatile memory access", "quickstart": {"uc3d": ["uc3d/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"uc3d": "uc3d/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "NVM example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.drivers.nvm.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "PDCA Example for STK600-RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.pdca.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Power Management"], "description": "Configure the RC120M internal oscillator and use it as the main clock source for the synchronous clocks. Configure a Generic Clock using the RC120M oscillator as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example3.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "PM Example 3 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.pm.example3.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Power Management"], "description": "Configure OSC0 as source of the main clock and configure a generic clock GCLK with OSC0 as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.pm.example1.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "PM Example1 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.pm.example1.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Power Management"], "description": "Configure a PLL (or a DFLL, depending on the device) and use it as the main clock source for the synchronous clocks. Configure a Generic Clock with the PLL (or DFLL) as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example2.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "PM Example2 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.pm.example2.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Implementation for UC3 D, using the PM and SCIF peripheral modules.", "id": "avr32.drivers.pm#4", "mcus": ["uc3d"], "name": "PM Power Manager - UC3 D implementation", "quickstart": {}, "type": "module", "uri": {"uc3d": "uc3d/html/group__group__avr32__drivers__pm.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "The Pulse Width Modulation A Controller (PWMA) controls several pulse width modulation (PWM) channels. This driver provides an API to get access to the main features of the PWMA controller.", "id": "avr32.drivers.pwma", "mcus": ["uc3l", "uc3d"], "name": "PWMA - Pulse Width Modulation A", "quickstart": {}, "type": "module", "uri": {"uc3d": "uc3d/html/group__group__avr32__drivers__pwma.html", "uc3l": "uc3l/html/group__group__avr32__drivers__pwma.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks"], "description": "Using PWMA module, generating wavefrom to two different channels and updating the duty cycle values using Interlinked multi-value mode. Timebase overflow interrupt is enabled which gets triggered whenever overflow occurs.", "id": "avr32.drivers.pwma.example1.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "PWMA Example 1 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.pwma.example1.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Driver for the SCIF (System Control Interface). The SCIF controls the Oscillators, PLL, Generic Clocks, BODs, voltage regulator, Temperature Sensor and Backup Registers.", "id": "avr32.drivers.scif#2", "mcus": ["uc3d"], "name": "SCIF System Control Interface - UC3D implementation", "quickstart": {}, "type": "module", "uri": {"uc3d": "uc3d/html/group__group__avr32__drivers__scif.html"}}, {"appnote": [], "asf_type": "boards", "boards": [], "category": ["Sensors"], "description": "ATAVRSBPR1 Sensors Xplained extension board definitions and runtime initialization support.", "id": "board.sensors_xplained.pressure_1", "mcus": ["xmega", "uc3"], "name": "Sensors - ATAVRSBPR1 Sensor Board", "quickstart": {}, "type": "module", "uri": {"uc3d": "uc3d/html/group__group__common__boards__sensors__xplained.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "Shared AVR API for Controlling a TWI Module / Master Mode Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.basic.twi.master.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#6", "mcus": ["uc3d"], "name": "System Clock Control - UC3 D implementation", "quickstart": {"uc3d": ["uc3d/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"uc3d": "uc3d/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Using the TC module, set-up a Timer/Counter to output a 10.16% duty cycle square wave on TIOA0. Switch the device into the FROZEN sleep mode (thus still maintaining the TC activity).", "id": "avr32.drivers.tc.example1.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "TC Example 1 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.tc.example1.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "This example involves 2 timer/counter channels, one configured in capture mode(input) and the other configured in Waveform mode(output) to generate a PWM on the output.", "id": "avr32.drivers.tc.example2.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "TC Example 2 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.tc.example2.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "TC Example 3 for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.tc.example3.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Using the TWIM module, perform read and write operations from/to a virtual memory space pre-allocated in internal RAM in a slave TWI device. To be used with two boards with the corresponding TWIS module example.", "id": "avr32.drivers.twim.master_example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "TWIM Master Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.twim.master_example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USART Example for STK600-RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.usart.usart_example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Using the USART module in SPI mode.", "id": "avr32.drivers.usart.spi_example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USART SPI Example for STK600-RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.usart.spi_example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device CDC Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.usb.class.cdc.device.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device CDC unit tests for STK600_RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.services.usb.class.cdc.device.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Generic implementation. Relies on the native HID driver and uses buttons and LEDs available on the board.", "id": "common.services.usb.class.hid.device.generic.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device HID Generic for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.usb.class.hid.device.generic.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Keyboard implementation. Relies on the native HID driver and uses buttons available on the board as a keyboard interfaces.", "id": "common.services.usb.class.hid.device.keyboard.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device HID Keyboard for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.usb.class.hid.device.keyboard.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device HID Mouse for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.usb.class.hid.device.mouse.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device HID Mouse unit tests for STK600_RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.services.usb.class.hid.device.mouse.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device HID Mouse unit tests for STK600_RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device Mass Storage for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.usb.class.msc.device.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide a unit test of USB Device Mass Storage implementation. Relies on the native MSC driver on OS*, displays all available memories of the board as removable disk* (*except for Windows 98).", "id": "common.services.usb.class.msc.device.unit_tests.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device Mass Storage unit tests for STK600_RCUC3D", "quickstart": {}, "type": "unit-test", "uri": {"uc3d": "common.services.usb.class.msc.device.unit_tests.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Vendor Class implementation. The example implements a look back application between IN and OUT enpoints of interrupt, bulk and isochronous types. Note that this example relies on a specific driver on the Host Operating System. For more detail documentation and PC drivers and application, please refer to AVR4001 application note.", "id": "common.services.usb.class.vendor.device.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "USB Device Vendor Class example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "common.services.usb.class.vendor.device.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Example to set-up a watchdog deadline, read the reset cause PM register and use a GPLP register. Only for WDT module version 4 or higher.", "id": "avr32.drivers.wdt4.example.stk600-rcuc3d", "mcus": ["atuc128d3"], "name": "WDT4 Example for STK600_RCUC3D", "quickstart": {}, "type": "application", "uri": {"uc3d": "avr32.drivers.wdt4.example.stk600-rcuc3d/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Analog Comparator Interface is able to control a number of Analog Comparators (AC) with identical behavior.", "id": "avr32.drivers.acifb", "mcus": ["uc3l"], "name": "ACIFB - Analog Comparator Interface", "quickstart": {}, "type": "module", "uri": {"uc3l": "uc3l/html/group__group__avr32__drivers__acifb.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Analog Conversion"], "description": "The Application demonstrates the use of Sleepwalking feature with ACIFB module to lower power consumption.", "id": "avr32.drivers.acifb.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "ACIFB Example 1 with Sleepwalking feature for UC3_L0_XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.acifb.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Analog Conversion"], "description": "The Application demonstrates the use of Sleepwalking feature with ACIFB module to lower power consumption.", "id": "avr32.drivers.acifb.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "ACIFB Example 1 with Sleepwalking feature for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.acifb.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Analog Conversion"], "description": "Driver for the ADCIFB (Analog-to-Digital Converter Interface B). Provides functions for configuration of conversion parameters (up to 12-bit signed with 16x interpolation at 6 MHz), enabling channels (max. 32, see device datasheet for details) and conversion triggering.", "id": "avr32.drivers.adcifb", "mcus": ["uc3l"], "name": "ADCIFB - ADC Interface B", "quickstart": {}, "type": "module", "uri": {"uc3l": "uc3l/html/group__group__avr32__drivers__adcifb.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Analog Conversion"], "description": "Initialize the ADCIFB, use the on-board sensors and display the value change on a terminal.", "id": "avr32.drivers.adcifb.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "ADCIFB Example 1 for UC3_L0_XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.adcifb.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Analog Conversion"], "description": "Initialize the ADCIFB, use the on-board sensors and display the value change on a terminal.", "id": "avr32.drivers.adcifb.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "ADCIFB Example 1 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.adcifb.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Analog Conversion"], "description": "This Application demonstrates the use of Sleepwalking feature with ADCIFB module to lower power consumption.", "id": "avr32.drivers.adcifb.example2.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "ADCIFB Example 2 with Sleepwalking feature for UC3_L0_XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.adcifb.example2.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Analog Conversion"], "description": "This Application demonstrates the use of Sleepwalking feature with ADCIFB module to lower power consumption.", "id": "avr32.drivers.adcifb.example2.uc3l_ek", "mcus": ["at32uc3l064"], "name": "ADCIFB Example 2 with Sleepwalking feature for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.adcifb.example2.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and use the UART driver to display a real time counter incremented every second.", "id": "avr32.drivers.ast.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "AST Example 1 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.ast.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Timers"], "description": "Initialize the AST module, use with the 32KHz oscillator and setup an alarm to wake-up from sleep mode every second.", "id": "avr32.drivers.ast.example2.uc3l_ek", "mcus": ["at32uc3l064"], "name": "AST Example 2 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.ast.example2.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "Provide an application example using the Atmel DataFlash AT45DBx component. The DataFlash requires an SPI bus as a low level communication interface. This interface can be implemented using SPI or USART in SPI mode for AVR devices.", "id": "common.components.memory.data_flash.at45dbx.example.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "AT45DBX DataFlash example for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.components.memory.data_flash.at45dbx.example.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["STK600"], "category": [], "description": "AT45dbx DataFlash unit test. Ensure the good functionality of this module by testing one by one the main features of the AT45dbx component.", "id": "common.components.memory.data_flash.at45dbx.unit_tests.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "AT45DBX DataFlash unit tests for STK600-RCUC3L4", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.components.memory.data_flash.at45dbx.unit_tests.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["Unknown Board"], "category": ["Communication", "USB"], "description": "ISP application, allowing R/W access to several on-chip memories through a USB DFU interface.", "id": "common.services.usb.class.dfu_atmel.device.bootloader.avr32.ucl3_l4", "mcus": ["atuc64l4u"], "name": "ATxxxUC L3/L4 DFU Bootloader", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.usb.class.dfu_atmel.device.bootloader.avr32.ucl3_l4/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["STK600"], "category": ["Touch", "Touch"], "description": "When using STK600 board, this application demonstrates AT32UC3L0 Autonomous QTouch Capacitive Touch method. External Touch Sensors can be connected to the STK600 GPIO pins for testing. QT600 USB Bridge can be used to interface with QTouch Studio to display Touch debug data. When using UC3L-EK board, this application demonstrates AT32UC3L0 Sleepwalking feature with asynchronous wakeup from sleep using Autonomous QTouch Capacitive Touch method. External Touch Sensors can be connected to the GPIO pins for testing. When using UC3-L0-XPLAINED board, this application demonstrates AT32UC3L0 Sleepwalking feature with asynchronous wakeup from sleep using Autonomous QTouch Capacitive Touch method. Onboard QTouch button QT0 can be used for testing.", "id": "avr32.services.qtouch.devspecific.uc3.uc3l0.examples.example_at.at32uc3l064_stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "Autonomous QTouch Example on STK600", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.services.qtouch.devspecific.uc3.uc3l0.examples.example_at.at32uc3l064_stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["UC3-L0 Xplained"], "category": ["Touch", "Touch"], "description": "When using STK600 board, this application demonstrates AT32UC3L0 Autonomous QTouch Capacitive Touch method. External Touch Sensors can be connected to the STK600 GPIO pins for testing. QT600 USB Bridge can be used to interface with QTouch Studio to display Touch debug data. When using UC3L-EK board, this application demonstrates AT32UC3L0 Sleepwalking feature with asynchronous wakeup from sleep using Autonomous QTouch Capacitive Touch method. External Touch Sensors can be connected to the GPIO pins for testing. When using UC3-L0-XPLAINED board, this application demonstrates AT32UC3L0 Sleepwalking feature with asynchronous wakeup from sleep using Autonomous QTouch Capacitive Touch method. Onboard QTouch button QT0 can be used for testing.", "id": "avr32.services.qtouch.devspecific.uc3.uc3l0.examples.example_at.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Autonomous QTouch Example on UC3_L0_XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.services.qtouch.devspecific.uc3.uc3l0.examples.example_at.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["UC3L-EK"], "category": ["Touch", "Touch"], "description": "When using STK600 board, this application demonstrates AT32UC3L0 Autonomous QTouch Capacitive Touch method. External Touch Sensors can be connected to the STK600 GPIO pins for testing. QT600 USB Bridge can be used to interface with QTouch Studio to display Touch debug data. When using UC3L-EK board, this application demonstrates AT32UC3L0 Sleepwalking feature with asynchronous wakeup from sleep using Autonomous QTouch Capacitive Touch method. External Touch Sensors can be connected to the GPIO pins for testing. When using UC3-L0-XPLAINED board, this application demonstrates AT32UC3L0 Sleepwalking feature with asynchronous wakeup from sleep using Autonomous QTouch Capacitive Touch method. Onboard QTouch button QT0 can be used for testing.", "id": "avr32.services.qtouch.devspecific.uc3.uc3l0.examples.example_at.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Autonomous QTouch Example on UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.services.qtouch.devspecific.uc3.uc3l0.examples.example_at.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["Unknown Board"], "category": ["Communication"], "description": "ISP application, allowing R/W access to several on-chip memories through a UART interface.", "id": "avr32.applications.uc3_uart_bootloader.uc3l0128_256", "mcus": ["at32uc3l0128"], "name": "AVR UC3 UART Bootloader", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3_uart_bootloader.uc3l0128_256/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["Unknown Board"], "category": ["Communication"], "description": "ISP application, allowing R/W access to several on-chip memories through a UART interface.", "id": "avr32.applications.uc3_uart_bootloader.example", "mcus": ["at32uc3l016"], "name": "AVR UC3 UART Bootloader", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3_uart_bootloader.example/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": [], "description": "This is the unit tests of basic clock service.", "id": "common.services.basic.clock.unit_tests.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Basic clock service unit tests for UC3L-EK", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.services.basic.clock.unit_tests.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Graphics", "Touch"], "description": "Example application demonstrating a calculator using the widget toolkit.", "id": "common.applications.mxt143e_xplained_calc_demo.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Calculator example for the UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.applications.mxt143e_xplained_calc_demo.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "Unit tests for calendar functionality", "id": "common.services.calendar.unit_tests.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "Calendar driver unit tests on STK600-RCUC3L4", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.services.calendar.unit_tests.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": [], "description": "Unit tests for calendar functionality", "id": "common.services.calendar.unit_tests.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Calendar driver unit tests on UC3-L0 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.services.calendar.unit_tests.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "An example application that calculates the time difference between two dates, and lights up a led if the resulting time is correct.", "id": "common.services.calendar.example2.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "Calendar service example 2 for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.calendar.example2.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": [], "description": "An example application that calculates the time difference between two dates, and lights up a led if the resulting time is correct.", "id": "common.services.calendar.example2.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Calendar service example 2 for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.calendar.example2.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": [], "description": "An example application that converts a date to a timestamp and lights up a led if the timestamp is correct.", "id": "common.services.calendar.example1.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "Calendar service example for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.calendar.example1.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": [], "description": "An example application that converts a date to a timestamp and lights up a led if the timestamp is correct.", "id": "common.services.calendar.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Calendar service example for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.calendar.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": [], "description": "This example demonstrates how to use the Common API for Chip Reset Cause Access.", "id": "common.services.basic.cpu.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Common API for Chip Reset Cause Access / Example for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.cpu.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 1 for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example1.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "Common API for Clocks Control / Example 1 for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example1.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 1 for UC3-L0-Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 1 for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 2 for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example2.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "Common API for Clocks Control / Example 2 for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example2.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 2 for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example2.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 3 for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example3.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "Common API for Clocks Control / Example 3 for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example3.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 3 for UC3-L0-Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example3.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Switch between various system clock sources and prescalers at run time.", "id": "common.services.basic.clock.example3.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Common API for Clocks Control / Example 3 for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.clock.example3.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": ["Communication"], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Common API for Controlling a TWI Module / Master Mode Example for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.twi.master.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on AVR UC3 L0 devices.", "id": "common.services.basic.sleepmgr.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Common API for Sleep Management / Example for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.sleepmgr.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["CPU"], "description": "The example illustrates the use of CPU cycle counter - COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.simulator_example1.at32uc3l064", "mcus": ["at32uc3l064"], "name": "CPU Cycle Counter Example for AT32UC3L064 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.cc.simulator_example1.at32uc3l064/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "CPU Cycle Counter Example for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.cc.example.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "CPU Cycle Counter Example for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.cc.example.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "CPU Cycle Counter Example for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.cc.example.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["CPU"], "description": "Example Application to use CPU cycle counter COUNT and COMPARE registers.", "id": "avr32.drivers.cpu.cc.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "CPU Cycle Counter Example for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.cc.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "CPU MPU Example 1 for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.mpu.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.mpu.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "CPU MPU Example 1 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.mpu.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["CPU"], "description": "Use the CPU Secure Access Unit (SAU): setup memory areas with different access permission and trigger CPU exception on different access.", "id": "avr32.drivers.cpu.sau.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "CPU SAU Example for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.sau.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3L-EK"], "category": [], "description": "Provide an application example (from ASF V1) using the Atmel DataFlash AT25DBx component. The DataFlash requires an SPI bus as a low level communication interface.", "id": "avr32.components.memory.dataflash.at45dbx.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "DataFlash AT45DBX Example for UC3L_EK (from ASF V1)", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.components.memory.dataflash.at45dbx.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": ["Digital Signal Processing"], "description": "Example application. It demonstrates how to implement the MFCC Sphinx-4 algorithm using the standard functions provided by the DSP library.", "id": "avr32.services.dsplib.example.mfcc.uc3l_ek", "mcus": ["at32uc3l064"], "name": "DSPLIB MFCC Sphinx-4 example", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.services.dsplib.example.mfcc.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Interrupt"], "description": "Use the EIC (External Interrupt Controller) to wake up the CPU when in static sleep mode.", "id": "avr32.drivers.eic.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "EIC Example1 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.eic.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": [], "description": "USART Shell-like application providing commands to access files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the low-level FAT API.", "id": "avr32.services.fs.fat.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "FAT File System Example 1 for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.services.fs.fat.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": [], "description": "USART Shell-like application providing 3 operations to be performed on files on a FAT file system stored in a dataFlash memory(AT45DBX). Implemented with the POSIX-like API.", "id": "avr32.services.fs.fat.fsaccess.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "FAT File System Example 2 for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.services.fs.fat.fsaccess.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Use the FLASHCDW, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashcdw.example.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "FLASHCDW Example for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.flashcdw.example.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Memory"], "description": "Use the FLASHCDW, read and write data to the internal flash, using a flash block as an NVRAM, located either in the flash array or in the Flash User Page.", "id": "avr32.drivers.flashcdw.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "FLASHCDW Example for uc3l_ek", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.flashcdw.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": [], "description": "Use the 32KHz reference clock to measure the CPU, HSB, PBA and PBB clock frequency and output results to usart.", "id": "avr32.drivers.freqm.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "FREQ Example for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.freqm.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3l0256", "mcus": ["at32uc3l0256"], "name": "GPIO Local BUS Example for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3l0256/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "GPIO Local BUS Example for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "GPIO Local BUS Example for STK600_RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.local_bus_example.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["I/O"], "description": "Using the GPIO controller, toggle IOs using the local bus interface.", "id": "avr32.drivers.gpio.local_bus_example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "GPIO Local BUS Example for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.local_bus_example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs and use pin change interrupt through the peripheral bus interface in AVR Studio 5 Simulator.", "id": "avr32.drivers.gpio.simulator_example.at32uc3l064", "mcus": ["at32uc3l064"], "name": "GPIO Peripheral Bus Example for AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.simulator_example.at32uc3l064/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "GPIO Peripheral Bus Example for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3l0256", "mcus": ["at32uc3l0256"], "name": "GPIO Peripheral Bus Example for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3l0256/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "GPIO Peripheral Bus Example for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.peripheral_bus_example.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["I/O"], "description": "Using the GPIO controller, set/toggle/clear/read IOs through the peripheral bus interface.", "id": "avr32.drivers.gpio.peripheral_bus_example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "GPIO Peripheral Bus Example for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.gpio.peripheral_bus_example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Graphics"], "description": "Graphic library graphic primitives example. Draw graphics shapes to a connected LCD display.", "id": "common.services.gfx.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "graphic library example for the UC3-L0 XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.gfx.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Communication"], "description": "Use the HMATRIX in various mode, count the number of cycles for a short algorithm in each mode.", "id": "avr32.drivers.hmatrix.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "HMATRIX Example1 for uc3l_ek", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.hmatrix.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3-L0 Xplained"], "category": [], "description": "A simple example for verifying that the ILI9341 low level driver works", "id": "common.components.display_controller.ili9341.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "ILI9341 Display Controller Example for UC3-L0-XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.components.display_controller.ili9341.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "INTC Example for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.intc.example.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Interrupt"], "description": "Interrupt-based USART reception: each character received is echoed back.", "id": "avr32.drivers.intc.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "INTC Example for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.intc.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["STK600"], "category": [], "description": "Provides a simple LED Chaser application with defined timing interval in ms between each LED.", "id": "common.applications.led_chaser.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "LED Chaser Example for stk600-rcuc3l0", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.applications.led_chaser.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["UC3-L0 Xplained"], "category": ["Communication", "Touch"], "description": "This example demonstrates the mXT143E Xplained top module on an UC3-L0 Xplained kit", "id": "common.components.touch.mxt.example_usart.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "maXTouch component USART event example - UC3-L0 XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.components.touch.mxt.example_usart.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["UC3-L0 Xplained"], "category": ["Memory"], "description": "Perform a range of unit tests on the MEMBAG utility to ensure correct operation.", "id": "common.utils.membag.unit_tests.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "MEMBAG unit tests for UC3-L0 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.utils.membag.unit_tests.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["CPU"], "description": "Use the CPU Memory Protection Unit (MPU): setup memory areas with different access permission and trigger CPU exception on different access violations.", "id": "avr32.drivers.cpu.mpu.simulator_example1.at32uc3l064", "mcus": ["at32uc3l064"], "name": "MPU Example 1 for AT32UC3L064 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.cpu.mpu.simulator_example1.at32uc3l064/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Touch", "USB"], "description": "Reads input from maXTouch and gives touch indication on display.", "id": "common.applications.mxt143e_xplained_multi-touch_demo.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "mXT143E Xplained multi-touch demo for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.applications.mxt143e_xplained_multi-touch_demo.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Touch"], "description": "Simple paint application using the MXT143E Xplained top module.", "id": "common.applications.mxt143e_xplained_paint_demo.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "mXT143E Xplained paint demo for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.applications.mxt143e_xplained_paint_demo.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Memory"], "description": "Driver for NVM access. Includes AT45DBX external dataflash. Provides functions for initializing, reading, writing, erasing NVM and getting configuration parameters. Common API.", "id": "common.drivers.nvm#extmem#1", "mcus": ["uc3d", "uc3l0", "uc3l3", "uc3l4"], "name": "NVM - Non volatile memory access", "quickstart": {"uc3l": ["uc3l/html/common_nvm_quickstart.html"]}, "type": "module", "uri": {"uc3l": "uc3l/html/group__nvm__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Memory"], "description": "Provide an application example of Non volatile memories access. Basic write, read back and verify example", "id": "common.drivers.nvm.example.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "NVM example for STK600_RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.drivers.nvm.example.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "PDCA Example for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pdca.example.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.stk600-rcuc3l0256", "mcus": ["at32uc3l0256"], "name": "PDCA Example for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pdca.example.stk600-rcuc3l0256/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["DMA Controller", "Memory"], "description": "Interrupt-based PDCA transfer of an ASCII animation stored in internal flash to a USART output.", "id": "avr32.drivers.pdca.example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "PDCA Example for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pdca.example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Power Management"], "description": "Configure OSC0 as source of the main clock and configure a generic clock GCLK with OSC0 as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.pm.example1.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "PM Example1 for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pm.example1.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks", "Power Management"], "description": "Configure a PLL (or a DFLL, depending on the device) and use it as the main clock source for the synchronous clocks. Configure a Generic Clock with the PLL (or DFLL) as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example2.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "PM Example2 for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pm.example2.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Clocks", "Power Management"], "description": "Configure a PLL (or a DFLL, depending on the device) and use it as the main clock source for the synchronous clocks. Configure a Generic Clock with the PLL (or DFLL) as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example2.uc3l_ek", "mcus": ["at32uc3l064"], "name": "PM Example2 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pm.example2.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Clocks", "Power Management"], "description": "Configure the RC120M internal oscillator and use it as the main clock source for the synchronous clocks. Configure a Generic Clock using the RC120M oscillator as input. Output the generic clock on a pin.", "id": "avr32.drivers.pm.example3.uc3l_ek", "mcus": ["at32uc3l064"], "name": "PM Example3 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pm.example3.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Power Management"], "description": "Implementation for UC3 L0, using the PM and SCIF peripheral modules.", "id": "avr32.drivers.pm#3", "mcus": ["uc3l"], "name": "PM Power Manager - UC3 L0 implementation", "quickstart": {}, "type": "module", "uri": {"uc3l": "uc3l/html/group__group__avr32__drivers__pm.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600-RCUC3L3"], "category": ["Clocks"], "description": "Using PWMA module, generating wavefrom to two different channels and updating the duty cycle values using Interlinked multi-value mode. Timebase overflow interrupt is enabled which gets triggered whenever overflow occurs.", "id": "avr32.drivers.pwma.example1.stk600-rcuc3l3", "mcus": ["atuc256l3u"], "name": "PWMA Example 1 for STK600-RCUC3L3", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example1.stk600-rcuc3l3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks"], "description": "Using PWMA module, generating wavefrom to two different channels and updating the duty cycle values using Interlinked multi-value mode. Timebase overflow interrupt is enabled which gets triggered whenever overflow occurs.", "id": "avr32.drivers.pwma.example1.stk600-rcuc3l0256", "mcus": ["at32uc3l0256"], "name": "PWMA Example 1 for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example1.stk600-rcuc3l0256/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Clocks"], "description": "Using PWMA module, generating wavefrom to two different channels and updating the duty cycle values using Interlinked multi-value mode. Timebase overflow interrupt is enabled which gets triggered whenever overflow occurs.", "id": "avr32.drivers.pwma.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "PWMA Example 1 for UC3_L0_XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Using PWMA module, generating wavefrom to two different channels and updating the duty cycle values using Interlinked multi-value mode. Timebase overflow interrupt is enabled which gets triggered whenever overflow occurs.", "id": "avr32.drivers.pwma.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "PWMA Example 1 for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600-RCUC3L3"], "category": ["Clocks"], "description": "Using Analog Comparator increasing/decreasing the duty cycle of the PWMA Module by enabling the Peripheral Event System in PWMA.", "id": "avr32.drivers.pwma.example2.stk600-rcuc3l3", "mcus": ["atuc256l3u"], "name": "PWMA Example 2 for STK600-RCUC3L3", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example2.stk600-rcuc3l3/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks"], "description": "Using Analog Comparator increasing/decreasing the duty cycle of the PWMA Module by enabling the Peripheral Event System in PWMA.", "id": "avr32.drivers.pwma.example2.stk600-rcuc3l0256", "mcus": ["at32uc3l0256"], "name": "PWMA Example 2 for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example2.stk600-rcuc3l0256/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Clocks"], "description": "Using Analog Comparator increasing/decreasing the duty cycle of the PWMA Module by enabling the Peripheral Event System in PWMA.", "id": "avr32.drivers.pwma.example2.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "PWMA Example 2 for UC3_L0_XPLAINED", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example2.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Using Analog Comparator increasing/decreasing the duty cycle of the PWMA Module by enabling the Peripheral Event System in PWMA.", "id": "avr32.drivers.pwma.example2.uc3l_ek", "mcus": ["at32uc3l064"], "name": "PWMA Example 2 for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.pwma.example2.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Clocks"], "description": "Configure a DFLL in closed-loop mode at 22MHz and set-up a generic clock GCLK with the DFLL as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.scif.example1_uc3l.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "SCIF Example 1 for STK600_RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.scif.example1_uc3l.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Configure a DFLL in closed-loop mode at 22MHz and set-up a generic clock GCLK with the DFLL as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.scif.example1_uc3l.uc3l_ek", "mcus": ["at32uc3l064"], "name": "SCIF Example 1 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.scif.example1_uc3l.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Configure a DFLL in closed-loop mode at 24MHz. Switch the main clock source to the DFLL and set the clock domains to 12MHz. Set-up a generic clock GCLK with the DFLL as input. Output the generic clock on a pin. Switch into the FROZEN sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.scif.example2_uc3l.uc3l_ek", "mcus": ["at32uc3l064"], "name": "SCIF Example 2 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.scif.example2_uc3l.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Clocks"], "description": "Configure and start the OSC32K 32kHz oscillator. Set-up a generic clock GCLK with the OSC32K as input. Output the generic clock on a pin. Switch into the STATIC sleep mode while still maintaining the generic clock output.", "id": "avr32.drivers.scif.example3.uc3l_ek", "mcus": ["at32uc3l064"], "name": "SCIF Example3 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.scif.example3.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": [], "category": ["Clocks"], "description": "Driver for the SCIF (System Control Interface). The SCIF controls the Oscillators, DFLL, Generic Clocks, BODs, voltage regulator, Temperature Sensor and Backup Registers.", "id": "avr32.drivers.scif#1", "mcus": ["uc3l"], "name": "SCIF System Control Interface - UC3L implementation", "quickstart": {}, "type": "module", "uri": {"uc3l": "uc3l/html/group__group__avr32__drivers__scif.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Perform a range of unit tests on the Sensor Platform library to ensure correct operation, using the INERTIAL ONE sensor board.", "id": "common.services.sensors.unit_tests.uc3_l0_xplained_inertial_1", "mcus": ["at32uc3l064"], "name": "Sensor Platform unit tests for UC3-L0 Xplained", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.services.sensors.unit_tests.uc3_l0_xplained_inertial_1/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3L-EK"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its status.", "id": "common.services.basic.spi.master_example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "Shared AVR API for SPI Master Mode / Example for UC3L-EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.spi.master_example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Similar API for Serial Interfaces / Example for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.serial.example.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#4", "mcus": ["uc3l0pll", "uc3l3", "uc3l4", "uc3l0"], "name": "System Clock Control - UC3 L0 with PLL implementation", "quickstart": {"uc3l": ["uc3l/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"uc3l": "uc3l/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Using the TC module, set-up a Timer/Counter to output a 10.16% duty cycle square wave on TIOA0. Switch the device into the FROZEN sleep mode (thus still maintaining the TC activity).", "id": "avr32.drivers.tc.example1.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "TC Example 1 for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example1.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Timers"], "description": "Using the TC module, set-up a Timer/Counter to output a 10.16% duty cycle square wave on TIOA0. Switch the device into the FROZEN sleep mode (thus still maintaining the TC activity).", "id": "avr32.drivers.tc.example1.uc3l_ek", "mcus": ["at32uc3l064"], "name": "TC Example 1 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example1.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "This example involves 2 timer/counter channels, one configured in capture mode(input) and the other configured in Waveform mode(output) to generate a PWM on the output.", "id": "avr32.drivers.tc.example2.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "TC Example 2 for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example2.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Timers"], "description": "This example involves 2 timer/counter channels, one configured in capture mode(input) and the other configured in Waveform mode(output) to generate a PWM on the output.", "id": "avr32.drivers.tc.example2.uc3l_ek", "mcus": ["at32uc3l064"], "name": "TC Example 2 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example2.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "TC Example 3 for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example3.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Timers"], "description": "Set-up a timer/counter and generate a \"tick\" interrupt each millisecond to toggle a pin. Display the number of elapsed ms (updated every second) on a USART.", "id": "avr32.drivers.tc.example3.uc3l_ek", "mcus": ["at32uc3l064"], "name": "TC Example 3 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example3.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Timers"], "description": "Set-up one TC channel configured in capture mode (input). Upon a GPIO pin change, an event triggers a TC.Ai capture.", "id": "avr32.drivers.tc.example4.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "TC Example 4 for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example4.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Timers"], "description": "Set-up one TC channel configured in capture mode (input). Upon a GPIO pin change, an event triggers a TC.Ai capture.", "id": "avr32.drivers.tc.example4.uc3l_ek", "mcus": ["at32uc3l064"], "name": "TC Example 4 for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.example4.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["Timers"], "description": "Using the TC module, generate an interrupt every 10 milliseconds and check its functionality in AVR Studio 5 Simulator.", "id": "avr32.drivers.tc.simulator_example1.at32uc3l064", "mcus": ["at32uc3l064"], "name": "Timer/Counter Example 1 for AT32UC3L064 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.tc.simulator_example1.at32uc3l064/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Communication"], "description": "Using the TWIM module, perform read and write operations from/to a virtual memory space pre-allocated in internal RAM in a slave TWI device. To be used with two boards with the corresponding TWIS module example.", "id": "avr32.drivers.twim.master_example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "TWIM Master Example for uc3l_ek", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.twim.master_example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Communication"], "description": "Using the TWIS module, process read and write operations from/to a virtual memory space pre-allocated in internal RAM. To be used with two boards with the corresponding TWIM module example.", "id": "avr32.drivers.twis.slave_example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "TWIS Slave Example for uc3l_ek", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.twis.slave_example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained uses the accelerometer, gyroscope, or a combination of these two data sources on an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) to wake an MCU from low power operation as a result of an event-triggered interrupt from a sensor.", "id": "avr32.applications.uc3-l0_avrsbin1_wake", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained + Inertial Board #1 Wakeup Demo", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsbin1_wake/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": [], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.uc3-l0_delay-demo", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained Common Delay Service Example", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.basic.uc3-l0_delay-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Touch"], "description": "Demo application for UC3-L0 that reads temperature and light sensors and transmit the data via UART and a touch slider that changes the color of the RGB LED.", "id": "avr32.applications.uc3-l0_xplained-demo.at32uc3l064_uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained demo application", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_xplained-demo.at32uc3l064_uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "utils", "boards": ["UC3-L0 Xplained"], "category": [], "description": "Provide an application example of C-Library Standard I/O serial interface to the USART.", "id": "common.utils.stdio.stdio_serial.uc3-l0_stdio-demo", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained Serial Standard I/O Example", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.utils.stdio.stdio_serial.uc3-l0_stdio-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained obtains electronic compass data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then prompts the user to make a series of manual steps to calibrate the compass to the local geomagnetic field.", "id": "avr32.applications.uc3-l0_avrsbin1_compass-cal", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Inertial Board #1 Compass Calibration", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsbin1_compass-cal/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained obtains sensor data from an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1) then displays accelerometer, gyroscope, and electronic compass data.", "id": "avr32.applications.uc3-l0_avrsbin1_demo", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Inertial Board #1", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsbin1_demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained obtains sensor data from the accelerometer, gyroscope, and electronic compass devices on an Atmel Sensors Xplained Inertial 1 board (ATAVRSBIN1).  The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "avr32.applications.uc3-l0_avrsbin1_visualizer", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Inertial Board #1 Visualizer", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsbin1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained uses the light sensor or proximity sensor on an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1) then displays light and proximity data. Configuration options allow setting threshold levels for wake up and various other controls.", "id": "avr32.applications.uc3-l0_avrsblp1_wake", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsblp1_wake/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained obtains sensor data from an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1). The data is then formatted and transferred to a remote host for display using the Atmel Data Visualizer tool.", "id": "avr32.applications.uc3-l0_avrsblp1_visualizer", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsblp1_visualizer/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) using proximity sensor for gesture recognition.", "id": "avr32.applications.uc3-l0_avrsblp1_gesture", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsblp1_gesture/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained and Atmel Sensors Xplained Light/Proximity 1 board (ATAVRSBLP1) to set proximity sensor detection thresholds and store in non-volatile memory.", "id": "avr32.applications.uc3-l0_avrsblp1_calibrate", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsblp1_calibrate/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained obtains sensor data from an Atmel Sensors Xplained Light Proximity 1 board (ATAVRSBLP1) then displays light and proximity data.", "id": "avr32.applications.uc3-l0_avrsblp1-demo", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Light/Proximity Board #1", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsblp1-demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3-L0 Xplained"], "category": ["Sensors"], "description": "Demo application for UC3-L0 Xplained obtains barometric pressure and temperature sensor data from an Atmel Sensors Xplained Pressure 1 board (ATAVRSBPR1) then prints the scaled and formatted values to an attached serial terminal using the C-library standard I/O functions.", "id": "avr32.applications.uc3-l0_avrsbpr1_demo", "mcus": ["at32uc3l064"], "name": "UC3-L0 Xplained with Xplained Pressure Board #1", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3-l0_avrsbpr1_demo/html/index.html"}}, {"appnote": [], "asf_type": "applications", "boards": ["UC3L-EK"], "category": ["Communication"], "description": "This application is a demonstration application that interfaces with QTouch Studio and controls the LEDs with the touch sensors. It is using the Atmel QTouch Libraries for the AVR UC3 L0 series.", "id": "avr32.applications.uc3l-ek-touch-demo.example", "mcus": ["at32uc3l064"], "name": "UC3L-EK Touch Application", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.applications.uc3l-ek-touch-demo.example/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received.", "id": "avr32.drivers.usart.usart_example2.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "USART example 2 for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.usart_example2.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received.", "id": "avr32.drivers.usart.usart_example2.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "USART example 2 for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.usart_example2.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.stk600-rcuc3l0", "mcus": ["at32uc3l064"], "name": "USART Example for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.usart_example.stk600-rcuc3l0/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.stk600-rcuc3l0256", "mcus": ["at32uc3l0256"], "name": "USART Example for STK600-RCUC3L0", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.usart_example.stk600-rcuc3l0256/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["STK600"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "USART Example for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.usart_example.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3-L0 Xplained"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "USART example for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.usart_example.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["UC3L-EK"], "category": ["Communication"], "description": "Using the USART module, echo all incoming characters back until a CR character is received. Afterwards, switch the device into STATIC sleep mode.", "id": "avr32.drivers.usart.usart_example.uc3l_ek", "mcus": ["at32uc3l064"], "name": "USART Example for UC3L_EK", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.usart_example.uc3l_ek/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["Simulator"], "category": ["Communication"], "description": "Using the USART module, send and receive characters using the loopback mode to test the USART functionality in AVR Studio 5 Simulator.", "id": "avr32.drivers.usart.simulator_example1.at32uc3l064", "mcus": ["at32uc3l064"], "name": "USART Loopback Example for AT32UC3L064 in AVR Simulator", "quickstart": {}, "type": "application", "uri": {"uc3l": "avr32.drivers.usart.simulator_example1.at32uc3l064/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Communication Device Class (CDC) implementation: a bridge between USART and USB CDC interface.", "id": "common.services.usb.class.cdc.device.example.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "USB Device CDC Example for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.usb.class.cdc.device.example.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device CDC implementation.", "id": "common.services.usb.class.cdc.device.unit_tests.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "USB Device CDC unit tests for stk600-rcuc3l4", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.services.usb.class.cdc.device.unit_tests.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an application example of USB Device HID Mouse implementation. Relies on the native HID driver and uses buttons available on the board as a mouse interfaces.", "id": "common.services.usb.class.hid.device.mouse.example.usb_device_mouse_rcuc3l4", "mcus": ["atuc256l4u"], "name": "USB Device HID Mouse for STK600-RCUC3L4", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.usb.class.hid.device.mouse.example.usb_device_mouse_rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID Mouse implementation.", "id": "common.services.usb.class.hid.device.mouse.unit_tests.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "USB Device HID Mouse unit tests for stk600-rcuc3l4", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.services.usb.class.hid.device.mouse.unit_tests.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["STK600"], "category": ["Communication", "USB"], "description": "Provide an unit test of USB Device HID keyboard implementation.", "id": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600-rcuc3l4", "mcus": ["atuc256l4u"], "name": "USB Device HID Mouse unit tests for stk600-rcuc3l4", "quickstart": {}, "type": "unit-test", "uri": {"uc3l": "common.services.usb.class.hid.device.keyboard.unit_tests.stk600-rcuc3l4/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, showing a collection of icon widgets, allowing the user to navigate between the icons and select them using both direct touch and soft button widgets.", "id": "common.services.wtk.example2.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Widget library example 2 for the UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.wtk.example2.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library service example, demonstrating the plot widget, allowing the user to add new plot points to be graphed using a pair of slider and button widgets.", "id": "common.services.wtk.example3.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Widget library example 3 for the UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.wtk.example3.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Graphics", "Touch"], "description": "Graphical widget library toolkit service example, showing a variety of interactive widgets on a display with can be manipulated via touch.", "id": "common.services.wtk.example1.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "Widget library example for the UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.wtk.example1.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["UC3-L0 Xplained"], "category": ["Graphics", "Touch"], "description": "Training skeleton code for the application note \"AVR1614: Widget ToolKit - Getting Started\".", "id": "common.services.wtk.training.uc3_l0_xplained", "mcus": ["at32uc3l064"], "name": "WTK training project for UC3-L0 Xplained", "quickstart": {}, "type": "application", "uri": {"uc3l": "common.services.wtk.training.uc3_l0_xplained/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "ADC Temperature Sensor example for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.adc.adc_temp_sensor_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Analog Conversion"], "description": "This example demonstrates how to configure the temperature sensor feature inside the microcontroller.", "id": "sam.drivers.adc.adc_temp_sensor_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "ADC Temperature Sensor example for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.adc.adc_temp_sensor_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Cryptography"], "description": "Unit test for the AES (Advanced Encryption Standard) module.", "id": "sam.drivers.aes.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "AES - Advanced Encryption Standard Module unit tests on SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.aes.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Cryptography"], "description": "Unit test for the AES (Advanced Encryption Standard) module.", "id": "sam.drivers.aes.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "AES - Advanced Encryption Standard Module unit tests on SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.aes.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Cryptography"], "description": "Use the AES module, encrypt and decrypt blocks of data in various mode with and without DMA.", "id": "sam.drivers.aes.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "AES Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.aes.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Cryptography"], "description": "Use the AES module, encrypt and decrypt blocks of data in various mode with and without DMA.", "id": "sam.drivers.aes.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "AES Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.aes.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Cryptography"], "description": "Use the AES-GCM mode, encrypt and decrypt blocks of data in various mode.", "id": "sam.drivers.aes.gcm.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "AES-GCM Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.aes.gcm.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Cryptography"], "description": "Use the AES-GCM mode, encrypt and decrypt blocks of data in various mode.", "id": "sam.drivers.aes.gcm.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "AES-GCM Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.aes.gcm.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for the at24cxx driver.", "id": "common.components.memory.eeprom.at24cxx.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "at24cxx unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.components.memory.eeprom.at24cxx.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for the at24cxx driver.", "id": "common.components.memory.eeprom.at24cxx.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "at24cxx unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.components.memory.eeprom.at24cxx.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMP-DB"], "category": ["Memory"], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The SerialFlash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "AT25DFx example for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMP-DB"], "category": [], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The serialflash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "AT25DFx example for SAM4CMP_DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMS-DB"], "category": [], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The serialflash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "AT25DFx example for SAM4CMS_DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.components.memory.serial_flash.at25dfx.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMS-DB"], "category": ["Memory"], "description": "Provide an application example using the Atmel SerialFlash AT25DFx component. The SerialFlash requires an SPI bus as a low level communication interface.", "id": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "AT25DFx example for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.components.memory.serial_flash.at25dfx.at25dfx_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMP-DB"], "category": ["Memory"], "description": "Provide an application example using the Atmel AT30TSE75x temperature sensor. The sensor requires an I2C bus as a low level communication interface. This interface can be implemented using TWI controller for SAM devices.", "id": "common.components.memory.eeprom.at30tse75x.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "AT30TS75 Temperature Sensor Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.components.memory.eeprom.at30tse75x.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMS-DB"], "category": ["Memory"], "description": "Provide an application example using the Atmel AT30TSE75x temperature sensor. The sensor requires an I2C bus as a low level communication interface. This interface can be implemented using TWI controller for SAM devices.", "id": "common.components.memory.eeprom.at30tse75x.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "AT30TS75 Temperature Sensor Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.components.memory.eeprom.at30tse75x.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMP-DB"], "category": ["Memory"], "description": "Unit test application for the at30tse75x driver.", "id": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "AT30TSE unit tests for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "components", "boards": ["SAM4CMS-DB"], "category": ["Memory"], "description": "Unit test application for the at30tse75x driver.", "id": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "AT30TSE unit tests for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.components.memory.eeprom.at30tse75x.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Basic FreeRTOS Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.freertos.sam_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Default FreeRTOS.org demo application creating several tasks to showcase the use of the FreeRTOS API.", "id": "common.services.freertos.sam_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Basic FreeRTOS Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.freertos.sam_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Chipid example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.chipid.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Read chipid and dump it to debug output.", "id": "sam.drivers.chipid.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Chipid example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.chipid.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Memory"], "description": "Unit test for the CMCC (Cortex M Cache Controller) module.", "id": "sam.drivers.cmcc.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "CMCC - Cortex M Cache Controller Module unit tests on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.cmcc.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Memory"], "description": "Unit test for the CMCC (Cortex M Cache Controller) module.", "id": "sam.drivers.cmcc.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "CMCC - Cortex M Cache Controller Module unit tests on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.cmcc.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Memory"], "description": "This example shows how to configure and use the CMCC module.", "id": "sam.drivers.cmcc.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "CMCC Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.cmcc.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Memory"], "description": "This example shows how to configure and use the CMCC module.", "id": "sam.drivers.cmcc.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "CMCC Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.cmcc.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Common API for Clocks Control / Example 1 for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.clock.example1.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": ["Clocks"], "description": "Initialize the system clock and blink a LED at a constant 1Hz frequency.", "id": "common.services.basic.clock.example1.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Common API for Clocks Control / Example 1 for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.clock.example1.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Common API for Clocks Control / Example 2 for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.clock.example2.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": ["Clocks"], "description": "Initialize the clock system and output the CPU clock on a dedicated pin.", "id": "common.services.basic.clock.example2.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Common API for Clocks Control / Example 2 for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.clock.example2.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": [], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Common API for Controlling a TWI Module / Master Mode Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.twi.master.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": [], "description": "Provide an application example of TWI Master Mode Basic Services. Perform a write access to the TWI slave and read back the data written.", "id": "common.services.basic.twi.master.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Common API for Controlling a TWI Module / Master Mode Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.twi.master.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM devices.", "id": "common.services.basic.sleepmgr.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Common API for Sleep Management / Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.sleepmgr.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": ["Power Management"], "description": "This example shows how to use the Common API for Sleep Management on SAM devices.", "id": "common.services.basic.sleepmgr.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Common API for Sleep Management / Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.sleepmgr.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Common IOPORT service example 1 for SAM4CMP", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.ioport.example1.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": [], "description": "Toggles output port pin controlling LED0", "id": "common.services.ioport.example1.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Common IOPORT service example 1 for SAM4CMS", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.ioport.example1.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Drivers RTC Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.rtc.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Timers"], "description": "This example is aimed to demonstrate the usage of RTC peripheral.", "id": "sam.drivers.rtc.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Drivers RTC Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.rtc.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "This example demonstrates the True Random Number Generator (TRNG) provided on SAM3X/SAM4C/SAM4CP microcontrollers. It enables the user to set an alarm and watch it being triggered when the timer reaches the corresponding value.", "id": "sam.drivers.trng.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Drivers TRNG Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.trng.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "This example demonstrates the True Random Number Generator (TRNG) provided on SAM3X/SAM4C/SAM4CP microcontrollers. It enables the user to set an alarm and watch it being triggered when the timer reaches the corresponding value.", "id": "sam.drivers.trng.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Drivers TRNG Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.trng.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "FatFS example for SAM4CMP-DB, the file system will be created on the internal RAM.", "id": "common.services.fs.fatfs.access_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "FatFS example for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.fs.fatfs.access_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "FatFS example for SAM4CMS-DB, the file system will be created on the internal RAM.", "id": "common.services.fs.fatfs.access_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "FatFS example for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.fs.fatfs.access_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "FatFS unit tests for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.services.fs.fatfs.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit tests for FatFS, it will make the FAT file system, create a file, write some data and read the data from the file.", "id": "common.services.fs.fatfs.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "FatFS unit tests for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "common.services.fs.fatfs.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Flash efc unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.services.flash.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for the Flash service.", "id": "sam.services.flash.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Flash efc unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.services.flash.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Flash Program Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.services.flash.program_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": [], "description": "Demostrate how to program the internal flash, and manage secure and lock bits.", "id": "sam.services.flash.program_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Flash Program Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.services.flash.program_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Flash Read Unique Id Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.services.flash.read.unique.id_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": [], "description": "Read the flash Unique ID information.", "id": "sam.services.flash.read.unique.id_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Flash Read Unique Id Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.services.flash.read.unique.id_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "GPBR unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.gpbr.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for GPBR driver.", "id": "sam.drivers.gpbr.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "GPBR unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.gpbr.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "This examples demonstrates how to use ICM driver to check integrity of internal SRAM or FLASH.", "id": "sam.drivers.icm.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "ICM Example for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.icm.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "This examples demonstrates how to use ICM driver to check integrity of internal SRAM or FLASH.", "id": "sam.drivers.icm.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "ICM Example for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.icm.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for ICM driver.", "id": "sam.drivers.icm.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "ICM unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.icm.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for ICM driver.", "id": "sam.drivers.icm.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "ICM unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.icm.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Basic example of MATRIX on SAM4CMP-DB.", "id": "sam.drivers.matrix.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "MATRIX example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.matrix.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Basic example of MATRIX on SAM4CMS-DB.", "id": "sam.drivers.matrix.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "MATRIX example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.matrix.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Peripheral DMA Controller Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.pdc.pdc_uart_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["DMA Controller", "Memory"], "description": "This example shows how to configure PDC for receiving data from UART.", "id": "sam.drivers.pdc.pdc_uart_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Peripheral DMA Controller Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.pdc.pdc_uart_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "PMC clock failure detection example for SAM4CMP", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Power Management"], "description": "This example shows how to use the Clock Failure Detection feature of the SAM MCUs when the external oscillator fails.", "id": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "PMC clock failure detection example for SAM4CMS", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.pmc.pmc_clock_failure_detect_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "PMC unit Test for SAM4CMP", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.pmc.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for the PMC driver.", "id": "sam.drivers.pmc.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "PMC unit Test for SAM4CMS", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.pmc.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "PWM unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.pwm.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for the PWM driver.", "id": "sam.drivers.pwm.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "PWM unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.pwm.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "RSTC unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.rstc.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for RSTC driver.", "id": "sam.drivers.rstc.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "RSTC unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.rstc.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Basic example of RTT on SAM4CMP-DB.", "id": "sam.drivers.rtt.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "RTT example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.rtt.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Basic example of RTT on SAM4CMS-DB.", "id": "sam.drivers.rtt.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "RTT example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.rtt.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP class marks Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code to calculate Minimum, Maximum Mean, std and variance of marks obtained in a class.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP class marks Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_class_marks_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP convolution Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating Convolution of two input signals using Fast Fourier Transform (FFT) on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP convolution Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_convolution_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP dotproduct Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code computing dot product of two vectors on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP dotproduct Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_dotproduct_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP FFT bin Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating calculation of Max energy bin of frequency domain of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP FFT bin Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_fft_bin_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP FIR Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating how an FIR filter can be used as a low pass filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP FIR Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_fir_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP graphic equalizer Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example showing an audio graphic equalizer constructed out of Biquad filters on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP graphic equalizer Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_graphic_equalizer_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP linear interp Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating usage of sin function and uses linear interpolation to get higher precision.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP linear interp Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_linear_interp_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP matrix Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating least square fit to data using matrix functions on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP matrix Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_matrix_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP Signal Converge Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating convergence of an adaptive filter on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP Signal Converge Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_signal_converge_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP Sin Cos Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating sin and cos calculation of input signal on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP Sin Cos Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_sin_cos_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMP-DB"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SAM4 DSP Variance Example on SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "thirdparty", "boards": ["SAM4CMS-DB"], "category": [], "description": "Example code demonstrating variance calculation of input sequence on SAM4.", "id": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SAM4 DSP Variance Example on SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.utils.cmsis.dsp_lib.examples.arm_variance_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.spi.master_example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Shared SAM API for SPI Master Mode / Example for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.spi.master_example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": ["Communication"], "description": "Provide an application example of SPI Master Mode Basic Services. Send \"Read Status\" commands to the ATMEL DataFlash and read back its manufacturer and device ID.", "id": "common.services.basic.spi.master_example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Shared SAM API for SPI Master Mode / Example for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.spi.master_example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMP-DB"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "Similar API for Serial Interfaces / Example for SAM4CMP-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.serial.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": ["SAM4CMS-DB"], "category": ["Communication"], "description": "Initialize USART, send message on RS232 Com Port and echo of any received character.", "id": "common.services.basic.serial.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "Similar API for Serial Interfaces / Example for SAM4CMS-DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "common.services.basic.serial.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Graphics"], "description": "This examples demonstrates how to use SLCDC driver to address an external LCD segment. The LCD still display in steady state after core entering backup mode.", "id": "sam.drivers.slcdc.example.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SLCDC Example for SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.slcdc.example.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Graphics"], "description": "This examples demonstrates how to use SLCDC driver to address an external LCD segment. The LCD still display in steady state after core entering backup mode.", "id": "sam.drivers.slcdc.example.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SLCDC Example for SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.slcdc.example.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SPI unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.spi.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for the SPI driver.", "id": "sam.drivers.spi.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SPI unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.spi.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "SUPC unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.supc.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for SUPC driver.", "id": "sam.drivers.supc.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "SUPC unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.supc.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "services", "boards": [], "category": ["Clocks"], "description": "Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API.", "id": "common.services.basic.clock#23", "mcus": ["sam4cm"], "name": "System Clock Control - SAM4CM implementation", "quickstart": {"sam4cm": ["sam4cm/html/sysclk_quickstart.html"]}, "type": "module", "uri": {"sam4cm": "sam4cm/html/group__clk__group.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for the TRNG driver.", "id": "sam.drivers.trng.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "TRNG unit Test for SAM4CMP-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.trng.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for the TRNG driver.", "id": "sam.drivers.trng.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "TRNG unit Test for SAM4CMS-DB", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.trng.unit_tests.sam4cms_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4CMP_DB.", "id": "sam.drivers.wdt.example.sam4cmp16c_db", "mcus": ["atsam4cmp16c_0"], "name": "Watchdog Timer Example on SAM4CMP_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.wdt.example.sam4cmp16c_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": ["Timers"], "description": "Basic example of watchdog timer on SAM4CMS_DB.", "id": "sam.drivers.wdt.example.sam4cms16c_db", "mcus": ["atsam4cms16c_0"], "name": "Watchdog Timer Example on SAM4CMS_DB", "quickstart": {}, "type": "application", "uri": {"sam4cm": "sam.drivers.wdt.example.sam4cms16c_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMP-DB"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4cmp_db", "mcus": ["atsam4cmp16c_0"], "name": "WDT unit Test for SAM4CMP", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.wdt.unit_tests.sam4cmp_db/html/index.html"}}, {"appnote": [], "asf_type": "drivers", "boards": ["SAM4CMS-DB"], "category": [], "description": "Unit test application for WDT driver.", "id": "sam.drivers.wdt.unit_tests.sam4cms_db", "mcus": ["atsam4cms16c_0"], "name": "WDT unit Test for SAM4CMS", "quickstart": {}, "type": "unit-test", "uri": {"sam4cm": "sam.drivers.wdt.unit_tests.sam4cms_db/html/index.html"}}];
